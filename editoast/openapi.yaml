components:
  schemas:
    Allowance:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/EngineeringAllowance'
        - properties:
            allowance_type:
              enum:
              - engineering
              type: string
          required:
          - allowance_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/StandardAllowance'
        - properties:
            allowance_type:
              enum:
              - standard
              type: string
          required:
          - allowance_type
          type: object
    AllowanceDistribution:
      enum:
      - MARECO
      - LINEAR
      type: string
    AllowanceValue:
      oneOf:
      - properties:
          minutes:
            format: double
            type: number
          value_type:
            enum:
            - time_per_distance
            type: string
        required:
        - minutes
        - value_type
        type: object
      - properties:
          seconds:
            format: double
            type: number
          value_type:
            enum:
            - time
            type: string
        required:
        - seconds
        - value_type
        type: object
      - properties:
          percentage:
            format: double
            type: number
          value_type:
            enum:
            - percentage
            type: string
        required:
        - percentage
        - value_type
        type: object
    BatchDeletionRequest:
      properties:
        ids:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      required:
      - ids
      type: object
    BoundingBox:
      description: A bounding box
      items:
        description: A bounding box
        items:
          allOf:
          - format: double
            type: number
          - format: double
            type: number
        type: array
      maxItems: 2
      minItems: 2
      type: array
    CompleteReportTrain:
      allOf:
      - $ref: '#/components/schemas/ReportTrain'
      - properties:
          routing_requirements:
            items:
              $ref: '#/components/schemas/RoutingRequirement'
            type: array
          signal_sightings:
            items:
              $ref: '#/components/schemas/SignalSighting'
            type: array
          spacing_requirements:
            items:
              $ref: '#/components/schemas/SpacingRequirement'
            type: array
          zone_updates:
            items:
              $ref: '#/components/schemas/ZoneUpdate'
            type: array
        required:
        - signal_sightings
        - zone_updates
        - spacing_requirements
        - routing_requirements
        type: object
    ConditionalEffortCurve:
      additionalProperties: false
      properties:
        cond:
          $ref: '#/components/schemas/EffortCurveConditions'
        curve:
          $ref: '#/components/schemas/EffortCurve'
      required:
      - cond
      - curve
      type: object
    Conflict:
      properties:
        conflict_type:
          $ref: '#/components/schemas/ConflictType'
        end_time:
          format: int64
          minimum: 0
          type: integer
        start_time:
          format: int64
          minimum: 0
          type: integer
        train_ids:
          items:
            format: int64
            type: integer
          type: array
        train_names:
          items:
            type: string
          type: array
      required:
      - train_ids
      - train_names
      - start_time
      - end_time
      - conflict_type
      type: object
    ConflictType:
      enum:
      - Spacing
      - Routing
      type: string
    ConflictV2:
      properties:
        conflict_type:
          $ref: '#/components/schemas/ConflictType'
        end_time:
          format: date-time
          type: string
        start_time:
          format: date-time
          type: string
        train_ids:
          items:
            format: int64
            type: integer
          type: array
        train_names:
          items:
            type: string
          type: array
      required:
      - train_ids
      - train_names
      - start_time
      - end_time
      - conflict_type
      type: object
    Curve:
      properties:
        position:
          format: double
          type: number
        radius:
          format: double
          type: number
      required:
      - radius
      - position
      type: object
    DeleteOperation:
      properties:
        obj_id:
          example: bd840b06-84ba-4566-98c1-ccf0196c5f16
          type: string
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        operation_type:
          enum:
          - DELETE
          type: string
      required:
      - operation_type
      - obj_type
      - obj_id
    DeleteRollingStockQueryParams:
      properties:
        force:
          description: force the deletion even if itâ€™s used
          type: boolean
      type: object
    Direction:
      enum:
      - START_TO_STOP
      - STOP_TO_START
      type: string
    DirectionalTrackRange:
      additionalProperties: false
      properties:
        begin:
          format: double
          type: number
        direction:
          $ref: '#/components/schemas/Direction'
        end:
          format: double
          type: number
        track:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - track
      - begin
      - end
      - direction
      type: object
    Distribution:
      enum:
      - STANDARD
      - MARECO
      type: string
    EditoastAttachedErrorTrackNotFound:
      properties:
        context:
          properties:
            track_id:
              type: string
          required:
          - track_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:attached:TrackNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastAutoFixesEditoastErrorConflictingFixesOnSameObject:
      properties:
        context:
          properties:
            fixes:
              type: array
            object:
              type: object
          required:
          - fixes
          - object
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:auto_fixes:ConflictingFixesOnSameObject
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastAutoFixesEditoastErrorFixTrialFailure:
      properties:
        context:
          properties:
            source:
              type: object
          required:
          - source
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:auto_fixes:FixTrialFailure
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastAutoFixesEditoastErrorMaximumIterationReached:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:auto_fixes:MaximumIterationReached
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastAutoFixesEditoastErrorMissingErrorObject:
      properties:
        context:
          properties:
            source:
              type: object
          required:
          - source
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:auto_fixes:MissingErrorObject
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCacheOperationErrorDuplicateIdsProvided:
      properties:
        context:
          properties:
            obj_id:
              type: string
            obj_type:
              type: string
          required:
          - obj_id
          - obj_type
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:cache_operation:DuplicateIdsProvided
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCacheOperationErrorObjectNotFound:
      properties:
        context:
          properties:
            obj_id:
              type: string
            obj_type:
              type: string
          required:
          - obj_id
          - obj_type
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:cache_operation:ObjectNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCoreErrorCannotExtractResponseBody:
      properties:
        context:
          properties:
            msg:
              type: string
          required:
          - msg
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:coreclient:CannotExtractResponseBody
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCoreErrorConnectionClosedBeforeMessageCompleted:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:coreclient:ConnectionClosedBeforeMessageCompleted
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCoreErrorConnectionResetByPeer:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:coreclient:ConnectionResetByPeer
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCoreErrorCoreResponseFormatError:
      properties:
        context:
          properties:
            msg:
              type: string
          required:
          - msg
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:coreclient:CoreResponseFormatError
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCoreErrorGenericCoreError:
      properties:
        context:
          properties:
            raw_error:
              type: string
            status:
              type: object
            url:
              type: string
          required:
          - raw_error
          - status
          - url
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:coreclient:GenericCoreError
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastCoreErrorUnparsableErrorOutput:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:coreclient:UnparsableErrorOutput
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastDocumentErrorsNotFound:
      properties:
        context:
          properties:
            document_key:
              type: integer
          required:
          - document_key
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:document:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastEditionErrorInfraIsLocked:
      properties:
        context:
          properties:
            infra_id:
              type: integer
          required:
          - infra_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:edition:InfraIsLocked
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastEditoastUrlErrorInvalidUrl:
      properties:
        context:
          properties:
            url:
              type: string
          required:
          - url
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:url:InvalidUrl
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastElectricalProfilesErrorNotFound:
      properties:
        context:
          properties:
            electrical_profile_set_id:
              type: integer
          required:
          - electrical_profile_set_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:electrical_profiles:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastError:
      description: Generated error type for Editoast
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/EditoastAttachedErrorTrackNotFound'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorConflictingFixesOnSameObject'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorFixTrialFailure'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorMaximumIterationReached'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorMissingErrorObject'
      - $ref: '#/components/schemas/EditoastCacheOperationErrorDuplicateIdsProvided'
      - $ref: '#/components/schemas/EditoastCacheOperationErrorObjectNotFound'
      - $ref: '#/components/schemas/EditoastCoreErrorCannotExtractResponseBody'
      - $ref: '#/components/schemas/EditoastCoreErrorConnectionClosedBeforeMessageCompleted'
      - $ref: '#/components/schemas/EditoastCoreErrorConnectionResetByPeer'
      - $ref: '#/components/schemas/EditoastCoreErrorCoreResponseFormatError'
      - $ref: '#/components/schemas/EditoastCoreErrorGenericCoreError'
      - $ref: '#/components/schemas/EditoastCoreErrorUnparsableErrorOutput'
      - $ref: '#/components/schemas/EditoastDocumentErrorsNotFound'
      - $ref: '#/components/schemas/EditoastEditionErrorInfraIsLocked'
      - $ref: '#/components/schemas/EditoastEditoastUrlErrorInvalidUrl'
      - $ref: '#/components/schemas/EditoastElectricalProfilesErrorNotFound'
      - $ref: '#/components/schemas/EditoastGeometryErrorUnexpectedGeometry'
      - $ref: '#/components/schemas/EditoastGetObjectsErrorsDuplicateIdsProvided'
      - $ref: '#/components/schemas/EditoastGetObjectsErrorsObjectIdNotFound'
      - $ref: '#/components/schemas/EditoastInfraApiErrorNotFound'
      - $ref: '#/components/schemas/EditoastInfraCacheEditoastErrorObjectNotFound'
      - $ref: '#/components/schemas/EditoastLayersErrorLayerNotFound'
      - $ref: '#/components/schemas/EditoastLayersErrorViewNotFound'
      - $ref: '#/components/schemas/EditoastLinesErrorsLineNotFound'
      - $ref: '#/components/schemas/EditoastListErrorsErrorsWrongErrorTypeProvided'
      - $ref: '#/components/schemas/EditoastListErrorsRailjsonWrongRailjsonVersionProvided'
      - $ref: '#/components/schemas/EditoastOperationErrorEmptyId'
      - $ref: '#/components/schemas/EditoastOperationErrorInvalidPatch'
      - $ref: '#/components/schemas/EditoastOperationErrorModifyId'
      - $ref: '#/components/schemas/EditoastOperationErrorObjectNotFound'
      - $ref: '#/components/schemas/EditoastPaginationErrorInvalidPage'
      - $ref: '#/components/schemas/EditoastPaginationErrorInvalidPageSize'
      - $ref: '#/components/schemas/EditoastPathfindingErrorElectricalProfilesOverlap'
      - $ref: '#/components/schemas/EditoastPathfindingErrorElectrificationOverlap'
      - $ref: '#/components/schemas/EditoastPathfindingErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingErrorNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingErrorOperationalPointsNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingErrorRollingStockNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingErrorTrackSectionsNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingViewErrorsEndingTrackLocationNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingViewErrorsInvalidNumberOfPaths'
      - $ref: '#/components/schemas/EditoastPathfindingViewErrorsStartingTrackLocationNotFound'
      - $ref: '#/components/schemas/EditoastPostgresConfigErrorHost'
      - $ref: '#/components/schemas/EditoastPostgresConfigErrorPassword'
      - $ref: '#/components/schemas/EditoastPostgresConfigErrorPort'
      - $ref: '#/components/schemas/EditoastPostgresConfigErrorUsername'
      - $ref: '#/components/schemas/EditoastProcessingErrorRuntimeTypeCheckFail'
      - $ref: '#/components/schemas/EditoastProcessingErrorUndefinedFunction'
      - $ref: '#/components/schemas/EditoastProcessingErrorUndefinedOverload'
      - $ref: '#/components/schemas/EditoastProcessingErrorUnexpectedColumn'
      - $ref: '#/components/schemas/EditoastProcessingErrorUnexpectedErsatz'
      - $ref: '#/components/schemas/EditoastProjectErrorImageError'
      - $ref: '#/components/schemas/EditoastProjectErrorImageNotFound'
      - $ref: '#/components/schemas/EditoastProjectErrorNotFound'
      - $ref: '#/components/schemas/EditoastRailJsonErrorUnsupportedVersion'
      - $ref: '#/components/schemas/EditoastRedisConfigErrorUrl'
      - $ref: '#/components/schemas/EditoastRollingStockErrorBasePowerClassEmpty'
      - $ref: '#/components/schemas/EditoastRollingStockErrorCannotCreateCompoundImage'
      - $ref: '#/components/schemas/EditoastRollingStockErrorCannotReadImage'
      - $ref: '#/components/schemas/EditoastRollingStockErrorNameAlreadyUsed'
      - $ref: '#/components/schemas/EditoastRollingStockErrorNotFound'
      - $ref: '#/components/schemas/EditoastRollingStockErrorRollingStockIsLocked'
      - $ref: '#/components/schemas/EditoastRollingStockErrorRollingStockIsUsed'
      - $ref: '#/components/schemas/EditoastScenarioErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastScenarioErrorNotFound'
      - $ref: '#/components/schemas/EditoastScenarioErrorNotFound'
      - $ref: '#/components/schemas/EditoastScenarioErrorTimetableNotFound'
      - $ref: '#/components/schemas/EditoastSearchAstErrorEmptyArray'
      - $ref: '#/components/schemas/EditoastSearchAstErrorIntegerConversion'
      - $ref: '#/components/schemas/EditoastSearchAstErrorInvalidColumnName'
      - $ref: '#/components/schemas/EditoastSearchAstErrorInvalidFunctionIdentifier'
      - $ref: '#/components/schemas/EditoastSearchAstErrorInvalidSyntax'
      - $ref: '#/components/schemas/EditoastSearchErrorObjectType'
      - $ref: '#/components/schemas/EditoastSearchErrorQueryAst'
      - $ref: '#/components/schemas/EditoastSingleSimulationErrorElectricalProfileSetNotFound'
      - $ref: '#/components/schemas/EditoastSingleSimulationErrorPathNotFound'
      - $ref: '#/components/schemas/EditoastSingleSimulationErrorRollingStockNotFound'
      - $ref: '#/components/schemas/EditoastSingleSimulationErrorWrongCoreResponseFormat'
      - $ref: '#/components/schemas/EditoastSpriteErrorsFileNotFound'
      - $ref: '#/components/schemas/EditoastSpriteErrorsUnknownSignalingSystem'
      - $ref: '#/components/schemas/EditoastStdcmErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastStudyErrorNotFound'
      - $ref: '#/components/schemas/EditoastStudyErrorStartDateAfterEndDate'
      - $ref: '#/components/schemas/EditoastTimetableErrorInfraNotLoaded'
      - $ref: '#/components/schemas/EditoastTimetableErrorNotFound'
      - $ref: '#/components/schemas/EditoastTimetableErrorNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorBatchShouldHaveSameTimetable'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorBatchTrainScheduleNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorNoSimulation'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorNoTrainSchedules'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorPathNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorRollingStockNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorTimetableNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorUnsimulatedTrainSchedule'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorBatchTrainScheduleNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorNotFound'
      - $ref: '#/components/schemas/EditoastTypeCheckErrorArgMissing'
      - $ref: '#/components/schemas/EditoastTypeCheckErrorArgTypeMismatch'
      - $ref: '#/components/schemas/EditoastTypeCheckErrorUnexpectedArg'
      - $ref: '#/components/schemas/EditoastTypeCheckErrorVariadicArgTypeMismatch'
    EditoastGeometryErrorUnexpectedGeometry:
      properties:
        context:
          properties:
            actual:
              type: string
            expected:
              type: string
          required:
          - actual
          - expected
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:geometry:UnexpectedGeometry
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastGetObjectsErrorsDuplicateIdsProvided:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:objects:DuplicateIdsProvided
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastGetObjectsErrorsObjectIdNotFound:
      properties:
        context:
          properties:
            object_id:
              type: string
          required:
          - object_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:objects:ObjectIdNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastInfraApiErrorNotFound:
      properties:
        context:
          properties:
            infra_id:
              type: integer
          required:
          - infra_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:infra:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastInfraCacheEditoastErrorObjectNotFound:
      properties:
        context:
          properties:
            obj_id:
              type: string
            obj_type:
              type: string
          required:
          - obj_id
          - obj_type
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:infra_cache:ObjectNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastLayersErrorLayerNotFound:
      properties:
        context:
          properties:
            expected_names:
              type: array
            layer_name:
              type: string
          required:
          - expected_names
          - layer_name
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:layers:LayerNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastLayersErrorViewNotFound:
      properties:
        context:
          properties:
            expected_names:
              type: array
            view_name:
              type: string
          required:
          - expected_names
          - view_name
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:layers:ViewNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastLinesErrorsLineNotFound:
      properties:
        context:
          properties:
            line_code:
              type: integer
          required:
          - line_code
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:lines:LineNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastListErrorsErrorsWrongErrorTypeProvided:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:errors:WrongErrorTypeProvided
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastListErrorsRailjsonWrongRailjsonVersionProvided:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:railjson:WrongRailjsonVersionProvided
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastOperationErrorEmptyId:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:operation:EmptyId
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastOperationErrorInvalidPatch:
      properties:
        context:
          properties:
            error:
              type: string
          required:
          - error
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:operation:InvalidPatch
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastOperationErrorModifyId:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:operation:ModifyId
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastOperationErrorObjectNotFound:
      properties:
        context:
          properties:
            infra_id:
              type: integer
            obj_id:
              type: string
          required:
          - infra_id
          - obj_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:operation:ObjectNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPaginationErrorInvalidPage:
      properties:
        context:
          properties:
            page:
              type: integer
          required:
          - page
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:pagination:InvalidPage
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPaginationErrorInvalidPageSize:
      properties:
        context:
          properties:
            max_page_size:
              type: integer
            provided_page_size:
              type: integer
          required:
          - max_page_size
          - provided_page_size
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:pagination:InvalidPageSize
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorElectricalProfilesOverlap:
      properties:
        context:
          properties:
            overlapping_ranges:
              type: array
          required:
          - overlapping_ranges
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:pathfinding:ElectricalProfilesOverlap
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorElectrificationOverlap:
      properties:
        context:
          properties:
            electrification_id:
              type: string
            overlapping_ranges:
              type: array
          required:
          - electrification_id
          - overlapping_ranges
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:pathfinding:ElectrificationOverlap
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorInfraNotFound:
      properties:
        context:
          properties:
            infra_id:
              type: integer
          required:
          - infra_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:pathfinding:InfraNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorNotFound:
      properties:
        context:
          properties:
            pathfinding_id:
              type: integer
          required:
          - pathfinding_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:pathfinding:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorOperationalPointsNotFound:
      properties:
        context:
          properties:
            operational_points:
              type: object
          required:
          - operational_points
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:pathfinding:OperationalPointsNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorRollingStockNotFound:
      properties:
        context:
          properties:
            rolling_stock_id:
              type: integer
          required:
          - rolling_stock_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:pathfinding:RollingStockNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingErrorTrackSectionsNotFound:
      properties:
        context:
          properties:
            track_sections:
              type: object
          required:
          - track_sections
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:pathfinding:TrackSectionsNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingViewErrorsEndingTrackLocationNotFound:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:pathfinding:EndingTrackLocationNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingViewErrorsInvalidNumberOfPaths:
      properties:
        context:
          properties:
            max_number:
              type: integer
            path_number:
              type: integer
          required:
          - max_number
          - path_number
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:pathfinding:InvalidNumberOfPaths
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPathfindingViewErrorsStartingTrackLocationNotFound:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:infra:pathfinding:StartingTrackLocationNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPostgresConfigErrorHost:
      properties:
        context:
          properties:
            hostname:
              type: string
          required:
          - hostname
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:postgres:Host
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPostgresConfigErrorPassword:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:postgres:Password
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPostgresConfigErrorPort:
      properties:
        context:
          properties:
            port:
              type: integer
          required:
          - port
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:postgres:Port
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastPostgresConfigErrorUsername:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:postgres:Username
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProcessingErrorRuntimeTypeCheckFail:
      properties:
        context:
          properties:
            actual:
              type: object
            expected:
              type: object
            value:
              type: string
          required:
          - actual
          - expected
          - value
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:RuntimeTypeCheckFail
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProcessingErrorUndefinedFunction:
      properties:
        context:
          properties:
            function:
              type: string
          required:
          - function
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:UndefinedFunction
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProcessingErrorUndefinedOverload:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:UndefinedOverload
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProcessingErrorUnexpectedColumn:
      properties:
        context:
          properties:
            column:
              type: string
          required:
          - column
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:UnexpectedColumn
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProcessingErrorUnexpectedErsatz:
      properties:
        context:
          properties:
            expected:
              type: object
            value:
              type: string
          required:
          - expected
          - value
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:UnexpectedErsatz
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProjectErrorImageError:
      properties:
        context:
          properties:
            error:
              type: string
          required:
          - error
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:project:ImageError
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProjectErrorImageNotFound:
      properties:
        context:
          properties:
            document_key:
              type: integer
          required:
          - document_key
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:project:ImageNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastProjectErrorNotFound:
      properties:
        context:
          properties:
            project_id:
              type: integer
          required:
          - project_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:project:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRailJsonErrorUnsupportedVersion:
      properties:
        context:
          properties:
            actual:
              type: string
            expected:
              type: string
          required:
          - actual
          - expected
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:railjson:UnsupportedVersion
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRedisConfigErrorUrl:
      properties:
        context:
          properties:
            url:
              type: string
          required:
          - url
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:redis:Url
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorBasePowerClassEmpty:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:rollingstocks:BasePowerClassEmpty
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorCannotCreateCompoundImage:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:rollingstocks:CannotCreateCompoundImage
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorCannotReadImage:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:rollingstocks:CannotReadImage
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorNameAlreadyUsed:
      properties:
        context:
          properties:
            name:
              type: string
          required:
          - name
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:rollingstocks:NameAlreadyUsed
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorNotFound:
      properties:
        context:
          properties:
            rolling_stock_id:
              type: integer
          required:
          - rolling_stock_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:rollingstocks:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorRollingStockIsLocked:
      properties:
        context:
          properties:
            rolling_stock_id:
              type: integer
          required:
          - rolling_stock_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:rollingstocks:RollingStockIsLocked
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastRollingStockErrorRollingStockIsUsed:
      properties:
        context:
          properties:
            rolling_stock_id:
              type: integer
            usage:
              type: array
          required:
          - rolling_stock_id
          - usage
          type: object
        message:
          type: string
        status:
          enum:
          - 409
          type: integer
        type:
          enum:
          - editoast:rollingstocks:RollingStockIsUsed
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastScenarioErrorInfraNotFound:
      properties:
        context:
          properties:
            infra_id:
              type: integer
          required:
          - infra_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:scenario:InfraNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastScenarioErrorNotFound:
      properties:
        context:
          properties:
            scenario_id:
              type: integer
          required:
          - scenario_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:scenario:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastScenarioErrorTimetableNotFound:
      properties:
        context:
          properties:
            timetable_id:
              type: integer
          required:
          - timetable_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:scenario:TimetableNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchAstErrorEmptyArray:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:EmptyArray
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchAstErrorIntegerConversion:
      properties:
        context:
          properties:
            value:
              type: integer
          required:
          - value
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:IntegerConversion
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchAstErrorInvalidColumnName:
      properties:
        context:
          properties:
            value:
              type: object
          required:
          - value
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:InvalidColumnName
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchAstErrorInvalidFunctionIdentifier:
      properties:
        context:
          properties:
            value:
              type: object
          required:
          - value
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:InvalidFunctionIdentifier
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchAstErrorInvalidSyntax:
      properties:
        context:
          properties:
            value:
              type: object
          required:
          - value
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:InvalidSyntax
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchErrorObjectType:
      properties:
        context:
          properties:
            object_type:
              type: string
          required:
          - object_type
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:ObjectType
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSearchErrorQueryAst:
      properties:
        context:
          properties:
            query_type:
              type: string
          required:
          - query_type
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:QueryAst
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSingleSimulationErrorElectricalProfileSetNotFound:
      properties:
        context:
          properties:
            electrical_profile_set_id:
              type: integer
          required:
          - electrical_profile_set_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:single_simulation:ElectricalProfileSetNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSingleSimulationErrorPathNotFound:
      properties:
        context:
          properties:
            path_id:
              type: integer
          required:
          - path_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:single_simulation:PathNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSingleSimulationErrorRollingStockNotFound:
      properties:
        context:
          properties:
            rolling_stock_id:
              type: integer
          required:
          - rolling_stock_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:single_simulation:RollingStockNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSingleSimulationErrorWrongCoreResponseFormat:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:single_simulation:WrongCoreResponseFormat
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSpriteErrorsFileNotFound:
      properties:
        context:
          properties:
            file:
              type: string
          required:
          - file
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:sprites:FileNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastSpriteErrorsUnknownSignalingSystem:
      properties:
        context:
          properties:
            signaling_system:
              type: string
          required:
          - signaling_system
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:sprites:UnknownSignalingSystem
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastStdcmErrorInfraNotFound:
      properties:
        context:
          properties:
            infra_id:
              type: integer
          required:
          - infra_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:stdcm:InfraNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastStudyErrorNotFound:
      properties:
        context:
          properties:
            study_id:
              type: integer
          required:
          - study_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:study:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastStudyErrorStartDateAfterEndDate:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:study:StartDateAfterEndDate
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTimetableErrorInfraNotLoaded:
      properties:
        context:
          properties:
            infra_id:
              type: integer
          required:
          - infra_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:timetable:InfraNotLoaded
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTimetableErrorNotFound:
      properties:
        context:
          properties:
            timetable_id:
              type: integer
          required:
          - timetable_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:timetable:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorBatchShouldHaveSameTimetable:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:train_schedule:BatchShouldHaveSameTimetable
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorBatchTrainScheduleNotFound:
      properties:
        context:
          properties:
            number:
              type: integer
          required:
          - number
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:train_schedule_v2:BatchTrainScheduleNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorNoSimulation:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:train_schedule:NoSimulation
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorNoTrainSchedules:
      properties:
        context:
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:train_schedule:NoTrainSchedules
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorNotFound:
      properties:
        context:
          properties:
            train_schedule_id:
              type: integer
          required:
          - train_schedule_id
          type: object
        message:
          type: string
        status:
          enum:
          - 404
          type: integer
        type:
          enum:
          - editoast:train_schedule_v2:NotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorPathNotFound:
      properties:
        context:
          properties:
            path_id:
              type: integer
          required:
          - path_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:train_schedule:PathNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorRollingStockNotFound:
      properties:
        context:
          properties:
            rolling_stock_id:
              type: integer
          required:
          - rolling_stock_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:train_schedule:RollingStockNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorTimetableNotFound:
      properties:
        context:
          properties:
            timetable_id:
              type: integer
          required:
          - timetable_id
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:train_schedule:TimetableNotFound
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTrainScheduleErrorUnsimulatedTrainSchedule:
      properties:
        context:
          properties:
            train_schedule_id:
              type: integer
          required:
          - train_schedule_id
          type: object
        message:
          type: string
        status:
          enum:
          - 500
          type: integer
        type:
          enum:
          - editoast:train_schedule:UnsimulatedTrainSchedule
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTypeCheckErrorArgMissing:
      properties:
        context:
          properties:
            arg_pos:
              type: integer
            expected:
              type: object
          required:
          - arg_pos
          - expected
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:ArgMissing
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTypeCheckErrorArgTypeMismatch:
      properties:
        context:
          properties:
            actual:
              type: object
            arg_pos:
              type: integer
            expected:
              type: object
          required:
          - actual
          - arg_pos
          - expected
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:ArgTypeMismatch
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTypeCheckErrorUnexpectedArg:
      properties:
        context:
          properties:
            arg_type:
              type: object
          required:
          - arg_type
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:UnexpectedArg
          type: string
      required:
      - type
      - status
      - message
      type: object
    EditoastTypeCheckErrorVariadicArgTypeMismatch:
      properties:
        context:
          properties:
            actual:
              type: object
            expected:
              type: object
          required:
          - actual
          - expected
          type: object
        message:
          type: string
        status:
          enum:
          - 400
          type: integer
        type:
          enum:
          - editoast:search:VariadicArgTypeMismatch
          type: string
      required:
      - type
      - status
      - message
      type: object
    EffortCurve:
      additionalProperties: false
      properties:
        max_efforts:
          example:
          - 23500.0
          - 23200.0
          - 21200.0
          items:
            format: double
            type: number
          minItems: 2
          type: array
        speeds:
          example:
          - 0.0
          - 2.958
          - 46.719
          items:
            format: double
            type: number
          minItems: 2
          type: array
      required:
      - speeds
      - max_efforts
      type: object
    EffortCurveConditions:
      additionalProperties: false
      properties:
        comfort:
          allOf:
          - $ref: '#/components/schemas/RollingStockComfortType'
          nullable: true
        electrical_profile_level:
          nullable: true
          type: string
        power_restriction_code:
          nullable: true
          type: string
      required:
      - comfort
      - electrical_profile_level
      - power_restriction_code
      type: object
    EffortCurves:
      additionalProperties: false
      properties:
        default_mode:
          type: string
        modes:
          additionalProperties:
            $ref: '#/components/schemas/ModeEffortCurves'
          type: object
      required:
      - modes
      - default_mode
      type: object
    ElectricalProfile:
      properties:
        power_class:
          example: '1'
          type: string
        track_ranges:
          items:
            $ref: '#/components/schemas/TrackRange'
          type: array
        value:
          example: A
          type: string
      required:
      - value
      - power_class
      - track_ranges
      type: object
    ElectricalProfileSet:
      properties:
        data:
          $ref: '#/components/schemas/ElectricalProfileSetData'
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      - data
      type: object
    ElectricalProfileSetData:
      properties:
        level_order:
          additionalProperties:
            $ref: '#/components/schemas/LevelValues'
          type: object
        levels:
          items:
            $ref: '#/components/schemas/ElectricalProfile'
          type: array
      required:
      - levels
      - level_order
      type: object
    ElectrificationRange:
      properties:
        electrificationUsage:
          $ref: '#/components/schemas/ElectrificationUsage'
        start:
          format: double
          type: number
        stop:
          format: double
          type: number
      required:
      - start
      - stop
      - electrificationUsage
      type: object
    ElectrificationUsage:
      oneOf:
      - properties:
          mode:
            type: string
          mode_handled:
            type: boolean
          object_type:
            enum:
            - Electrified
            type: string
          profile:
            nullable: true
            type: string
          profile_handled:
            type: boolean
        required:
        - mode
        - mode_handled
        - profile_handled
        - object_type
        type: object
      - properties:
          lower_pantograph:
            type: boolean
          object_type:
            enum:
            - Neutral
            type: string
        required:
        - lower_pantograph
        - object_type
        type: object
      - properties:
          object_type:
            enum:
            - NonElectrified
            type: string
        required:
        - object_type
        type: object
    ElectrificationsOnPathResponse:
      description: |-
        A list of ranges associated to electrification modes. When a profile overlapping another is found,
        a warning is added to the list
      properties:
        electrification_ranges:
          items:
            $ref: '#/components/schemas/RangedValue'
          type: array
        warnings:
          items:
            $ref: '#/components/schemas/InternalError'
          type: array
      required:
      - electrification_ranges
      - warnings
      type: object
    EnergySource:
      description: energy source of a rolling stock
      oneOf:
      - description: energy source for a rolling stock representing a electrification
        properties:
          efficiency:
            format: double
            maximum: 1
            minimum: 0
            type: number
          energy_source_type:
            enum:
            - Electrification
            type: string
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
        required:
        - max_input_power
        - max_output_power
        - efficiency
        - energy_source_type
        type: object
      - properties:
          efficiency:
            format: double
            maximum: 1
            minimum: 0
            type: number
          energy_source_type:
            enum:
            - PowerPack
            type: string
          energy_storage:
            $ref: '#/components/schemas/EnergyStorage'
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
        required:
        - max_input_power
        - max_output_power
        - energy_storage
        - efficiency
        - energy_source_type
        type: object
      - description: energy source for a rolling stock representing a battery
        properties:
          efficiency:
            format: double
            maximum: 1
            minimum: 0
            type: number
          energy_source_type:
            enum:
            - Battery
            type: string
          energy_storage:
            $ref: '#/components/schemas/EnergyStorage'
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
        required:
        - max_input_power
        - max_output_power
        - energy_storage
        - efficiency
        - energy_source_type
        type: object
    EnergyStorage:
      additionalProperties: false
      description: energy storage of an energy source (of a rolling stock, can be a electrical battery or a hydrogen/fuel powerPack)
      properties:
        capacity:
          format: double
          type: number
        refill_law:
          allOf:
          - $ref: '#/components/schemas/RefillLaw'
          nullable: true
        soc:
          format: double
          maximum: 1
          minimum: 0
          type: number
        soc_max:
          format: double
          maximum: 1
          minimum: 0
          type: number
        soc_min:
          format: double
          maximum: 1
          minimum: 0
          type: number
      required:
      - capacity
      - soc
      - soc_min
      - soc_max
      - refill_law
      type: object
    EngineeringAllowance:
      allOf:
      - $ref: '#/components/schemas/RangeAllowance'
      - properties:
          capacity_speed_limit:
            default: -1.0
            format: double
            type: number
          distribution:
            $ref: '#/components/schemas/AllowanceDistribution'
        required:
        - distribution
        type: object
    FullResultStops:
      allOf:
      - $ref: '#/components/schemas/ResultStops'
      - properties:
          id:
            description: The id of the operational point, null if not applicable
            nullable: true
            type: string
          line_code:
            format: int32
            nullable: true
            type: integer
          line_name:
            nullable: true
            type: string
          name:
            description: The name of the operational point, null if not applicable
            nullable: true
            type: string
          track_name:
            nullable: true
            type: string
          track_number:
            format: int32
            nullable: true
            type: integer
        required:
        - id
        - name
        - line_code
        - track_number
        - line_name
        - track_name
        type: object
    Gamma:
      additionalProperties: false
      properties:
        type:
          type: string
        value:
          format: double
          type: number
      required:
      - type
      - value
      type: object
    GeoJson:
      description: A GeoJSON geometry item
      oneOf:
      - $ref: '#/components/schemas/GeoJsonPoint'
      - $ref: '#/components/schemas/GeoJsonMultiPoint'
      - $ref: '#/components/schemas/GeoJsonLineString'
      - $ref: '#/components/schemas/GeoJsonMultiLineString'
      - $ref: '#/components/schemas/GeoJsonPolygon'
      - $ref: '#/components/schemas/GeoJsonMultiPolygon'
    GeoJsonLineString:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonLineStringValue'
          type:
            enum:
            - LineString
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonLineStringValue:
      items:
        $ref: '#/components/schemas/GeoJsonPointValue'
      type: array
    GeoJsonMultiLineString:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiLineStringValue'
          type:
            enum:
            - MultiLineString
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonMultiLineStringValue:
      items:
        $ref: '#/components/schemas/GeoJsonLineStringValue'
      type: array
    GeoJsonMultiPoint:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiPointValue'
          type:
            enum:
            - MultiPoint
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonMultiPointValue:
      items:
        $ref: '#/components/schemas/GeoJsonPointValue'
      type: array
    GeoJsonMultiPolygon:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiPolygonValue'
          type:
            enum:
            - MultiPolygon
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonMultiPolygonValue:
      items:
        $ref: '#/components/schemas/GeoJsonPolygonValue'
      type: array
    GeoJsonPoint:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonPointValue'
          type:
            enum:
            - Point
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonPointValue:
      items:
        format: double
        type: number
      type: array
    GeoJsonPolygon:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonPolygonValue'
          type:
            enum:
            - Polygon
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonPolygonValue:
      items:
        $ref: '#/components/schemas/GeoJsonLineStringValue'
      type: array
    Geometry:
      description: Definition of a GeoJSON geometry
      oneOf:
      - $ref: '#/components/schemas/Point'
      - $ref: '#/components/schemas/LineString'
      - $ref: '#/components/schemas/Polygon'
      - $ref: '#/components/schemas/MultiPoint'
      - $ref: '#/components/schemas/MultiLineString'
      - $ref: '#/components/schemas/MultiPolygon'
      type: object
    GetCurvePoint:
      properties:
        position:
          format: double
          type: number
        time:
          format: double
          type: number
      required:
      - time
      - position
      type: object
    ImportTimings:
      properties:
        pathfinding:
          format: double
          nullable: true
          type: number
        simulation:
          format: double
          nullable: true
          type: number
      type: object
    Infra:
      properties:
        created:
          format: date
          type: string
        generated_version:
          example: '1'
          nullable: true
          type: string
        id:
          type: integer
        locked:
          type: boolean
        modified:
          format: date
          type: string
        name:
          type: string
        railjson_version:
          example: 3.3.1
          type: string
        state:
          enum:
          - NOT_LOADED
          - INITIALIZING
          - DOWNLOADING
          - PARSING_JSON
          - PARSING_INFRA
          - ADAPTING_KOTLIN
          - LOADING_SIGNALS
          - BUILDING_BLOCKS
          - CACHED
          - TRANSIENT_ERROR
          - ERROR
          type: string
        version:
          example: '1'
          type: string
      required:
      - id
      - name
      - version
      - railjson_version
      - generated_version
      - created
      - modified
      - locked
      - state
    InfraError:
      description: An infra error or warning
      properties:
        geographic:
          $ref: '#/components/schemas/Geometry'
          description: Geojson of the geographic geometry of the error
          nullable: true
        information:
          description: Information about the error (check schema documentation for more details)
          properties:
            error_type:
              $ref: '#/components/schemas/InfraErrorType'
            field:
              type: string
            is_warning:
              type: boolean
            obj_id:
              type: string
            obj_type:
              enum:
              - TrackSection
              - Signal
              - BufferStop
              - Detector
              - Switch
              - Route
              type: string
          required:
          - obj_id
          - obj_type
          - error_type
          - is_warning
          type: object
        schematic:
          description: Geojson of the schematic geometry of the error
          nullable: true
          type: object
      required:
      - information
      type: object
    InfraErrorType:
      description: Type of the infra error
      enum:
      - duplicated_group
      - empty_object
      - invalid_group
      - invalid_reference
      - invalid_route
      - invalid_switch_ports
      - missing_route
      - missing_buffer_stop
      - object_out_of_path
      - odd_buffer_stop_location
      - out_of_range
      - overlapping_speed_sections
      - overlapping_switches
      - overlapping_electrifications
      - unknown_port_name
      - unused_port
      - node_endpoints_not_unique
      type: string
    InternalError:
      properties:
        context:
          additionalProperties: {}
          type: object
        message:
          type: string
        status:
          format: int32
          maximum: 599
          minimum: 100
          type: integer
        type:
          type: string
      required:
      - type
      - context
      - message
      type: object
    LevelValues:
      items:
        type: string
      type: array
    LightEffortCurves:
      additionalProperties: false
      properties:
        default_mode:
          type: string
        modes:
          additionalProperties:
            $ref: '#/components/schemas/LightModeEffortCurves'
          type: object
      required:
      - modes
      - default_mode
      type: object
    LightElectricalProfileSet:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    LightModeEffortCurves:
      properties:
        is_electric:
          type: boolean
      required:
      - is_electric
      type: object
    LightRollingStock:
      properties:
        base_power_class:
          nullable: true
          type: string
        comfort_acceleration:
          format: double
          type: number
        effort_curves:
          $ref: '#/components/schemas/LightEffortCurves'
        energy_sources:
          items:
            $ref: '#/components/schemas/EnergySource'
          type: array
        gamma:
          $ref: '#/components/schemas/Gamma'
        id:
          format: int64
          type: integer
        inertia_coefficient:
          format: double
          type: number
        length:
          format: double
          type: number
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        locked:
          type: boolean
        mass:
          format: double
          type: number
        max_speed:
          format: double
          type: number
        metadata:
          $ref: '#/components/schemas/RollingStockMetadata'
        name:
          type: string
        power_restrictions:
          additionalProperties:
            type: string
          type: object
        railjson_version:
          type: string
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          format: double
          type: number
        startup_time:
          format: double
          type: number
        supported_signaling_systems:
          $ref: '#/components/schemas/RollingStockSupportedSignalingSystems'
      required:
      - id
      - name
      - railjson_version
      - locked
      - effort_curves
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - mass
      - rolling_resistance
      - loading_gauge
      - metadata
      - power_restrictions
      - energy_sources
      - supported_signaling_systems
      type: object
    LightRollingStockWithLiveries:
      allOf:
      - $ref: '#/components/schemas/LightRollingStock'
      - properties:
          liveries:
            items:
              $ref: '#/components/schemas/RollingStockLiveryMetadata'
            type: array
        required:
        - liveries
        type: object
    LightTrainSchedule:
      description: Returns the timetable with the main information about a train
      properties:
        departure_time:
          format: double
          type: number
        id:
          format: int64
          type: integer
        train_name:
          type: string
        train_path:
          format: int64
          type: integer
      required:
      - id
      - train_name
      - departure_time
      - train_path
      type: object
    LineString:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Point3D'
          type: array
        type:
          enum:
          - LineString
          type: string
      required:
      - type
      - coordinates
      type: object
    LoadingGaugeType:
      enum:
      - G1
      - G2
      - GA
      - GB
      - GB1
      - GC
      - FR3.3
      - FR3.3/GB/G2
      - GLOTT
      type: string
    MechanicalEnergyConsumedBaseEco:
      properties:
        base:
          format: double
          type: number
        eco:
          format: double
          nullable: true
          type: number
      required:
      - base
      type: object
    ModeEffortCurves:
      additionalProperties: false
      properties:
        curves:
          items:
            $ref: '#/components/schemas/ConditionalEffortCurve'
          type: array
        default_curve:
          $ref: '#/components/schemas/EffortCurve'
        is_electric:
          type: boolean
      required:
      - curves
      - default_curve
      - is_electric
      type: object
    Mrsp:
      description: A MRSP computation result (Most Restrictive Speed Profile)
      items:
        $ref: '#/components/schemas/MrspPoint'
      type: array
    MrspPoint:
      description: An MRSP point
      properties:
        position:
          description: Relative position of the point on its track section (in meters)
          format: double
          type: number
        speed:
          description: Speed limit at this point (in m/s)
          format: double
          type: number
      required:
      - position
      - speed
      type: object
    MultiLineString:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/Point3D'
            type: array
          type: array
        type:
          enum:
          - MultiLineString
          type: string
      required:
      - type
      - coordinates
      type: object
    MultiPoint:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Point3D'
          type: array
        type:
          enum:
          - MultiPoint
          type: string
      required:
      - type
      - coordinates
      type: object
    MultiPolygon:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            items:
              items:
                $ref: '#/components/schemas/Point3D'
              type: array
            type: array
          type: array
        type:
          enum:
          - MultiPolygon
          type: string
      required:
      - type
      - coordinates
      type: object
    NewDocumentResponse:
      properties:
        document_key:
          format: int64
          type: integer
      required:
      - document_key
      type: object
    ObjectType:
      enum:
      - TrackSection
      - Signal
      - SpeedSection
      - Detector
      - NeutralSection
      - Switch
      - SwitchType
      - BufferStop
      - Route
      - OperationalPoint
      - Electrification
      type: string
    Operation:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/RailjsonObject'
        - properties:
            operation_type:
              enum:
              - CREATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/UpdateOperation'
        - properties:
            operation_type:
              enum:
              - UPDATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/DeleteOperation'
        - properties:
            operation_type:
              enum:
              - DELETE
              type: string
          required:
          - operation_type
          type: object
    OperationalPointExtensions:
      additionalProperties: false
      properties:
        identifier:
          allOf:
          - additionalProperties: false
            properties:
              name:
                minLength: 1
                type: string
              uic:
                format: int64
                type: integer
            required:
            - name
            - uic
            type: object
          nullable: true
        sncf:
          allOf:
          - additionalProperties: false
            properties:
              ch:
                type: string
              ch_long_label:
                minLength: 1
                type: string
              ch_short_label:
                minLength: 1
                type: string
              ci:
                format: int64
                type: integer
              trigram:
                type: string
            required:
            - ci
            - ch
            - ch_short_label
            - ch_long_label
            - trigram
            type: object
          nullable: true
      type: object
    OperationalPointPart:
      additionalProperties: false
      properties:
        extensions:
          additionalProperties: false
          properties:
            sncf:
              allOf:
              - additionalProperties: false
                properties:
                  kp:
                    type: string
                required:
                - kp
                type: object
              nullable: true
          type: object
        position:
          format: double
          type: number
        track:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - track
      - position
      type: object
    Ordering:
      enum:
      - NameAsc
      - NameDesc
      - CreationDateAsc
      - CreationDateDesc
      - LastModifiedDesc
      - LastModifiedAsc
      type: string
    PaginatedResponseOfLightRollingStockWithLiveries:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/LightRollingStockWithLiveries'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfProjectWithStudies:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/ProjectWithStudies'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfScenarioWithCountTrains:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/ScenarioWithCountTrains'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfScenarioWithDetails:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/ScenarioWithDetailsV2'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfStudyWithScenarios:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/StudyWithScenarios'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfTimetable:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/TimetableResult'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    Patch:
      description: A JSONPatch document as defined by RFC 6902
      properties:
        from:
          description: A string containing a JSON Pointer value.
          type: string
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          type: string
        path:
          description: A JSON-Pointer
          type: string
        value:
          description: The value to be used within the operations.
          type: object
      required:
      - op
      - path
    Patches:
      description: A list of Patch
      items:
        $ref: '#/components/schemas/Patch'
      type: array
    PathProperties:
      description: Properties along a path. Each property is optional since it depends on what the user requests.
      properties:
        electrifications:
          allOf:
          - description: Property string values along a path. Each value is associated to a range of the path.
            properties:
              boundaries:
                description: |-
                  List of `n` boundaries of the ranges.
                  A boundary is a distance from the beginning of the path in mm.
                items:
                  format: int64
                  minimum: 0
                  type: integer
                type: array
              values:
                description: List of `n+1` values associated to the ranges
                items:
                  type: string
                type: array
            required:
            - boundaries
            - values
            type: object
          nullable: true
        geometry:
          allOf:
          - $ref: '#/components/schemas/GeoJsonLineString'
          nullable: true
        gradients:
          allOf:
          - description: Property f64 values along a path. Each value is associated to a range of the path.
            properties:
              boundaries:
                description: |-
                  List of `n` boundaries of the ranges.
                  A boundary is a distance from the beginning of the path in mm.
                items:
                  format: int64
                  minimum: 0
                  type: integer
                type: array
              values:
                description: List of `n+1` values associated to the ranges
                items:
                  format: double
                  type: number
                type: array
            required:
            - boundaries
            - values
            type: object
          nullable: true
        operational_points:
          description: Operational points along the path
          items:
            description: Operational point along a path.
            properties:
              extensions:
                $ref: '#/components/schemas/OperationalPointExtensions'
              id:
                maxLength: 255
                minLength: 1
                type: string
              part:
                $ref: '#/components/schemas/OperationalPointPart'
              position:
                description: Distance from the beginning of the path in mm
                format: int64
                minimum: 0
                type: integer
            required:
            - id
            - part
            - position
            type: object
          nullable: true
          type: array
        slopes:
          allOf:
          - description: Property f64 values along a path. Each value is associated to a range of the path.
            properties:
              boundaries:
                description: |-
                  List of `n` boundaries of the ranges.
                  A boundary is a distance from the beginning of the path in mm.
                items:
                  format: int64
                  minimum: 0
                  type: integer
                type: array
              values:
                description: List of `n+1` values associated to the ranges
                items:
                  format: double
                  type: number
                type: array
            required:
            - boundaries
            - values
            type: object
          nullable: true
      type: object
    PathPropertiesInput:
      properties:
        rolling_stock_supported_electrification:
          description: |-
            List of supported electrification modes.
            Empty if does not support any electrification
          items:
            type: string
          type: array
        track_ranges:
          description: list of track sections
          items:
            $ref: '#/components/schemas/TrackRange'
          type: array
      required:
      - track_ranges
      type: object
    PathResponse:
      properties:
        created:
          format: date-time
          type: string
        curves:
          items:
            $ref: '#/components/schemas/Curve'
          type: array
        geographic:
          $ref: '#/components/schemas/GeoJsonLineString'
        id:
          format: int64
          type: integer
        length:
          format: double
          type: number
        owner:
          format: uuid
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonLineString'
        slopes:
          items:
            $ref: '#/components/schemas/Slope'
          type: array
        steps:
          items:
            $ref: '#/components/schemas/PathWaypoint'
          type: array
      required:
      - id
      - owner
      - length
      - created
      - slopes
      - curves
      - geographic
      - schematic
      - steps
      type: object
    PathWaypoint:
      properties:
        ch:
          nullable: true
          type: string
        duration:
          format: double
          type: number
        geo:
          $ref: '#/components/schemas/GeoJsonPoint'
        id:
          nullable: true
          type: string
        location:
          $ref: '#/components/schemas/TrackLocation'
        name:
          nullable: true
          type: string
        path_offset:
          format: double
          type: number
        sch:
          $ref: '#/components/schemas/GeoJsonPoint'
        suggestion:
          type: boolean
        uic:
          format: int64
          nullable: true
          type: integer
      required:
      - id
      - name
      - location
      - duration
      - path_offset
      - suggestion
      - geo
      - sch
      - uic
      - ch
      type: object
    PathfindingInput:
      properties:
        ending:
          $ref: '#/components/schemas/PathfindingTrackLocationInput'
        starting:
          $ref: '#/components/schemas/PathfindingTrackLocationInput'
      required:
      - starting
      - ending
      type: object
    PathfindingInputV2:
      description: |-
        Path input is described by some rolling stock information
        and a list of path waypoints
      properties:
        path_items:
          description: List of waypoints given to the pathfinding
          items:
            description: The location of a path waypoint
            oneOf:
            - $ref: '#/components/schemas/TrackOffset'
            - properties:
                operational_point:
                  maxLength: 255
                  minLength: 1
                  type: string
              required:
              - operational_point
              type: object
            - properties:
                secondary_code:
                  description: An optional secondary code to identify a more specific location
                  nullable: true
                  type: string
                trigram:
                  minLength: 1
                  type: string
              required:
              - trigram
              type: object
            - properties:
                secondary_code:
                  description: An optional secondary code to identify a more specific location
                  nullable: true
                  type: string
                uic:
                  description: The [UIC](https://en.wikipedia.org/wiki/List_of_UIC_country_codes) code of an operational point
                  format: int32
                  minimum: 0
                  type: integer
              required:
              - uic
              type: object
          type: array
        rolling_stock_is_thermal:
          description: Can the rolling stock run on non-electrified tracks
          type: boolean
        rolling_stock_loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        rolling_stock_supported_electrification:
          description: |-
            List of supported electrification modes.
            Empty if does not support any electrification
          items:
            type: string
          type: array
        rolling_stock_supported_signaling_systems:
          description: List of supported signaling systems
          items:
            type: string
          type: array
      required:
      - rolling_stock_loading_gauge
      - rolling_stock_is_thermal
      - rolling_stock_supported_electrification
      - rolling_stock_supported_signaling_systems
      - path_items
      type: object
    PathfindingOutput:
      properties:
        detectors:
          items:
            maxLength: 255
            minLength: 1
            type: string
          type: array
        switches_directions:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          type: object
        track_ranges:
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
          type: array
      required:
      - track_ranges
      - detectors
      - switches_directions
      type: object
    PathfindingPayload:
      description: |-
        The "payload" of a path

        It contains the route paths and the path waypoints that the simulation returned,
        but enhanced using data from the infra. Notably, path waypoints are reprojected
        onto their track section to obtain their geographic and schematic representations
        back.
      properties:
        path_waypoints:
          items:
            $ref: '#/components/schemas/PathWaypoint'
          type: array
        route_paths:
          items:
            $ref: '#/components/schemas/RoutePath'
          type: array
      required:
      - route_paths
      - path_waypoints
      type: object
    PathfindingRequest:
      properties:
        infra:
          format: int64
          type: integer
        rolling_stocks:
          items:
            format: int64
            type: integer
          type: array
        steps:
          items:
            $ref: '#/components/schemas/PathfindingStep'
          type: array
      required:
      - infra
      - steps
      type: object
    PathfindingResult:
      oneOf:
      - properties:
          blocks:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          length:
            format: int64
            minimum: 0
            type: integer
          routes:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          status:
            enum:
            - success
            type: string
          track_section_ranges:
            items:
              $ref: '#/components/schemas/TrackRange'
            type: array
        required:
        - blocks
        - routes
        - track_section_ranges
        - length
        - status
        type: object
      - properties:
          length:
            format: int64
            minimum: 0
            type: integer
          status:
            enum:
            - not_found_in_blocks
            type: string
          track_section_ranges:
            items:
              $ref: '#/components/schemas/TrackRange'
            type: array
        required:
        - track_section_ranges
        - length
        - status
        type: object
      - properties:
          length:
            format: int64
            minimum: 0
            type: integer
          status:
            enum:
            - not_found_in_routes
            type: string
          track_section_ranges:
            items:
              $ref: '#/components/schemas/TrackRange'
            type: array
        required:
        - track_section_ranges
        - length
        - status
        type: object
      - properties:
          status:
            enum:
            - not_found_in_tracks
            type: string
        required:
        - status
        type: object
      - properties:
          blocks:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          incompatible_ranges:
            items:
              items:
                allOf:
                - format: int64
                  minimum: 0
                  type: integer
                - format: int64
                  minimum: 0
                  type: integer
              type: array
            type: array
          length:
            format: int64
            minimum: 0
            type: integer
          routes:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          status:
            enum:
            - incompatible_electrification
            type: string
          track_section_ranges:
            items:
              $ref: '#/components/schemas/TrackRange'
            type: array
        required:
        - blocks
        - routes
        - track_section_ranges
        - length
        - incompatible_ranges
        - status
        type: object
      - properties:
          blocks:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          incompatible_ranges:
            items:
              items:
                allOf:
                - format: int64
                  minimum: 0
                  type: integer
                - format: int64
                  minimum: 0
                  type: integer
              type: array
            type: array
          length:
            format: int64
            minimum: 0
            type: integer
          routes:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          status:
            enum:
            - incompatible_loading_gauge
            type: string
          track_section_ranges:
            items:
              $ref: '#/components/schemas/TrackRange'
            type: array
        required:
        - blocks
        - routes
        - track_section_ranges
        - length
        - incompatible_ranges
        - status
        type: object
      - properties:
          blocks:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          incompatible_ranges:
            items:
              items:
                allOf:
                - format: int64
                  minimum: 0
                  type: integer
                - format: int64
                  minimum: 0
                  type: integer
              type: array
            type: array
          length:
            format: int64
            minimum: 0
            type: integer
          routes:
            items:
              maxLength: 255
              minLength: 1
              type: string
            type: array
          status:
            enum:
            - incompatible_signaling_system
            type: string
          track_section_ranges:
            items:
              $ref: '#/components/schemas/TrackRange'
            type: array
        required:
        - blocks
        - routes
        - track_section_ranges
        - length
        - incompatible_ranges
        - status
        type: object
      - properties:
          index:
            minimum: 0
            type: integer
          path_item:
            description: The location of a path waypoint
            oneOf:
            - $ref: '#/components/schemas/TrackOffset'
            - properties:
                operational_point:
                  maxLength: 255
                  minLength: 1
                  type: string
              required:
              - operational_point
              type: object
            - properties:
                secondary_code:
                  description: An optional secondary code to identify a more specific location
                  nullable: true
                  type: string
                trigram:
                  minLength: 1
                  type: string
              required:
              - trigram
              type: object
            - properties:
                secondary_code:
                  description: An optional secondary code to identify a more specific location
                  nullable: true
                  type: string
                uic:
                  description: The [UIC](https://en.wikipedia.org/wiki/List_of_UIC_country_codes) code of an operational point
                  format: int32
                  minimum: 0
                  type: integer
              required:
              - uic
              type: object
          status:
            enum:
            - invalid_path_item
            type: string
        required:
        - index
        - path_item
        - status
        type: object
      - properties:
          status:
            enum:
            - not_enough_path_items
            type: string
        required:
        - status
        type: object
      - properties:
          rolling_stock_name:
            type: string
          status:
            enum:
            - rolling_stock_not_found
            type: string
        required:
        - rolling_stock_name
        - status
        type: object
    PathfindingStep:
      properties:
        duration:
          format: double
          type: number
        waypoints:
          items:
            $ref: '#/components/schemas/Waypoint'
          type: array
      required:
      - duration
      - waypoints
      type: object
    PathfindingTrackLocationInput:
      additionalProperties: false
      properties:
        position:
          format: double
          type: number
        track:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - track
      - position
      type: object
    Point:
      description: GeoJSon geometry
      properties:
        coordinates:
          $ref: '#/components/schemas/Point3D'
        type:
          enum:
          - Point
          type: string
      required:
      - type
      - coordinates
      type: object
    Point3D:
      description: Point in 3D space
      items:
        type: number
      maxItems: 3
      minItems: 2
      type: array
    Polygon:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/Point3D'
            type: array
          type: array
        type:
          enum:
          - Polygon
          type: string
      required:
      - type
      - coordinates
      type: object
    PowerRestriction:
      properties:
        power_restriction:
          type: string
      required:
      - power_restriction
      type: object
    ProfilesOnPathResponse:
      description: |-
        A list of ranges associated to electrical profile values. When a profile overlapping another is found,
        a warning is added to the list
      properties:
        electrical_profile_ranges:
          items:
            $ref: '#/components/schemas/RangedValue'
          type: array
        warnings:
          items:
            $ref: '#/components/schemas/InternalError'
          type: array
      required:
      - electrical_profile_ranges
      - warnings
      type: object
    Project:
      properties:
        budget:
          format: int32
          nullable: true
          type: integer
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        funders:
          type: string
        id:
          format: int64
          type: integer
        image:
          format: int64
          nullable: true
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        objectives:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
      required:
      - id
      - name
      - objectives
      - description
      - funders
      - creation_date
      - last_modification
      - tags
      type: object
    ProjectCreateForm:
      description: Creation form for a project
      properties:
        budget:
          format: int32
          nullable: true
          type: integer
        description:
          maxLength: 1024
          type: string
        funders:
          maxLength: 1024
          type: string
        image:
          description: The id of the image document
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 128
          type: string
        objectives:
          maxLength: 4096
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
      required:
      - name
      type: object
    ProjectPatchForm:
      description: Patch form for a project
      properties:
        budget:
          format: int32
          nullable: true
          type: integer
        description:
          maxLength: 1024
          nullable: true
          type: string
        funders:
          maxLength: 1024
          nullable: true
          type: string
        image:
          description: The id of the image document
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 128
          nullable: true
          type: string
        objectives:
          maxLength: 4096
          nullable: true
          type: string
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          nullable: true
      type: object
    ProjectPathParams:
      properties:
        infra:
          format: int64
          type: integer
        train_ids:
          items:
            format: int64
            type: integer
          type: array
      required:
      - infra
      - train_ids
      type: object
    ProjectPathResult:
      description: Project path output is described by time-space points and blocks
      properties:
        blocks:
          items:
            $ref: '#/components/schemas/SignalUpdate'
          type: array
        positions:
          items:
            format: int64
            minimum: 0
            type: integer
          type: array
        times:
          items:
            format: double
            type: number
          type: array
      required:
      - positions
      - times
      - blocks
      type: object
    ProjectWithStudies:
      allOf:
      - $ref: '#/components/schemas/Project'
      - properties:
          studies_count:
            format: int64
            type: integer
        required:
        - studies_count
        type: object
    Railjson:
      additionalProperties: true
      description: This field follows railjson format
      example:
        curves: []
        geo:
          coordinates:
          - - 1.0
            - 41.0
          - - 2.0
            - 42.0
          type: LineString
        id: bd840b06-84ba-4566-98c1-ccf0196c5f16
        length: 1000
        line_code: 1
        line_name: my line
        navigability: BOTH
        sch:
          coordinates:
          - - 1.0
            - 41.0
          - - 2.0
            - 42.0
          type: LineString
        slopes:
        - begin: 250
          end: 500
          gradient: -1
        track_name: track name
        track_number: 1
      properties:
        id:
          type: string
      required:
      - id
      type: object
    RailjsonFile:
      properties:
        buffer_stops:
          type: array
        detectors:
          type: array
        electrifications:
          type: array
        operational_points:
          type: array
        routes:
          type: array
        signals:
          type: array
        speed_sections:
          type: array
        switch_types:
          type: array
        switches:
          type: array
        track_sections:
          type: array
        version:
          type: string
    RailjsonObject:
      properties:
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        railjson:
          $ref: '#/components/schemas/Railjson'
      required:
      - obj_type
      - railjson
    RangeAllowance:
      properties:
        begin_position:
          format: double
          type: number
        end_position:
          format: double
          type: number
        value:
          $ref: '#/components/schemas/AllowanceValue'
      required:
      - begin_position
      - end_position
      - value
      type: object
    RangedValue:
      description: A struct to represent range maps in responses
      properties:
        begin:
          example: 0.0
          format: double
          type: number
        end:
          example: 10.0
          format: double
          type: number
        value:
          example: '25000'
          type: string
      required:
      - begin
      - end
      - value
      type: object
    RefillLaw:
      additionalProperties: false
      description: physical law defining how the storage can be refilled
      properties:
        soc_ref:
          format: double
          maximum: 1
          minimum: 0
          type: number
        tau:
          format: double
          minimum: 0
          type: number
      required:
      - tau
      - soc_ref
      type: object
    ReportTrain:
      properties:
        head_positions:
          items:
            items:
              $ref: '#/components/schemas/GetCurvePoint'
            type: array
          type: array
        mechanical_energy_consumed:
          format: double
          type: number
        route_aspects:
          items:
            $ref: '#/components/schemas/SignalUpdate'
          type: array
        speeds:
          items:
            $ref: '#/components/schemas/ResultSpeed'
          type: array
        stops:
          items:
            $ref: '#/components/schemas/FullResultStops'
          type: array
        tail_positions:
          items:
            items:
              $ref: '#/components/schemas/GetCurvePoint'
            type: array
          type: array
      required:
      - head_positions
      - tail_positions
      - speeds
      - stops
      - route_aspects
      - mechanical_energy_consumed
      type: object
    ReportTrainV2:
      properties:
        energy_consumption:
          format: double
          type: number
        positions:
          items:
            format: int64
            minimum: 0
            type: integer
          type: array
        speeds:
          items:
            format: double
            type: number
          type: array
        times:
          items:
            format: double
            type: number
          type: array
      required:
      - positions
      - times
      - speeds
      - energy_consumption
      type: object
    ResultPosition:
      properties:
        offset:
          format: double
          type: number
        path_offset:
          format: double
          type: number
        time:
          format: double
          type: number
        track_section:
          type: string
      required:
      - time
      - track_section
      - offset
      - path_offset
      type: object
    ResultSpeed:
      properties:
        position:
          format: double
          type: number
        speed:
          format: double
          type: number
        time:
          format: double
          type: number
      required:
      - time
      - position
      - speed
      type: object
    ResultStops:
      properties:
        ch:
          nullable: true
          type: string
        duration:
          format: double
          type: number
        position:
          format: double
          type: number
        time:
          format: double
          type: number
      required:
      - time
      - position
      - duration
      - ch
      type: object
    ResultTrain:
      properties:
        head_positions:
          items:
            $ref: '#/components/schemas/ResultPosition'
          minItems: 1
          type: array
        mechanical_energy_consumed:
          format: double
          type: number
        routing_requirements:
          items:
            $ref: '#/components/schemas/RoutingRequirement'
          type: array
        signal_sightings:
          items:
            $ref: '#/components/schemas/SignalSighting'
          type: array
        spacing_requirements:
          items:
            $ref: '#/components/schemas/SpacingRequirement'
          type: array
        speeds:
          items:
            $ref: '#/components/schemas/ResultSpeed'
          minItems: 1
          type: array
        stops:
          items:
            $ref: '#/components/schemas/ResultStops'
          minItems: 1
          type: array
        zone_updates:
          items:
            $ref: '#/components/schemas/ZoneUpdate'
          type: array
      required:
      - speeds
      - head_positions
      - stops
      - mechanical_energy_consumed
      - signal_sightings
      - zone_updates
      - spacing_requirements
      - routing_requirements
      type: object
    RjsPowerRestrictionRange:
      description: A range along the train path where a power restriction is applied.
      example:
        begin_position: 0.0
        end_position: 1000.0
        power_restriction_code: C1US
      properties:
        begin_position:
          description: Offset from the start of the path, in meters.
          format: float
          type: number
        end_position:
          description: Offset from the start of the path, in meters.
          format: float
          type: number
        power_restriction_code:
          description: The power restriction code to apply.
          type: string
      required:
      - begin_position
      - end_position
      - power_restriction_code
      type: object
    RollingResistance:
      additionalProperties: false
      properties:
        A:
          format: double
          type: number
        B:
          format: double
          type: number
        C:
          format: double
          type: number
        type:
          type: string
      required:
      - type
      - A
      - B
      - C
      type: object
    RollingStock:
      allOf:
      - $ref: '#/components/schemas/RollingStockCommon'
      - properties:
          id:
            format: int64
            type: integer
          locked:
            description: Whether the rolling stock can be edited/deleted or not.
            type: boolean
          metadata:
            $ref: '#/components/schemas/RollingStockMetadata'
          railjson_version:
            type: string
        required:
        - id
        - railjson_version
        - locked
        - metadata
        type: object
    RollingStockComfortType:
      description: Train comfort that will be used for the simulation
      enum:
      - STANDARD
      - AC
      - HEATING
      type: string
    RollingStockCommon:
      properties:
        base_power_class:
          example: '5'
          nullable: true
          type: string
        comfort_acceleration:
          format: double
          type: number
        effort_curves:
          $ref: '#/components/schemas/EffortCurves'
        electrical_power_startup_time:
          description: The time the train takes before actually using electrical power (in seconds). Is null if the train is not electric.
          example: 5.0
          format: double
          nullable: true
          type: number
        energy_sources:
          items:
            $ref: '#/components/schemas/EnergySource'
          type: array
        gamma:
          $ref: '#/components/schemas/Gamma'
        inertia_coefficient:
          format: double
          type: number
        length:
          format: double
          type: number
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        mass:
          format: double
          type: number
        max_speed:
          format: double
          type: number
        name:
          type: string
        power_restrictions:
          additionalProperties:
            type: string
          description: Mapping of power restriction code to power class
          type: object
        raise_pantograph_time:
          description: The time it takes to raise this train's pantograph in seconds. Is null if the train is not electric.
          example: 15.0
          format: double
          nullable: true
          type: number
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          format: double
          type: number
        startup_time:
          format: double
          type: number
        supported_signaling_systems:
          $ref: '#/components/schemas/RollingStockSupportedSignalingSystems'
      required:
      - name
      - effort_curves
      - base_power_class
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - mass
      - rolling_resistance
      - loading_gauge
      - power_restrictions
      - supported_signaling_systems
      type: object
    RollingStockError:
      oneOf:
      - enum:
        - CannotReadImage
        type: string
      - enum:
        - CannotCreateCompoundImage
        type: string
      - properties:
          NotFound:
            properties:
              rolling_stock_id:
                format: int64
                type: integer
            required:
            - rolling_stock_id
            type: object
        required:
        - NotFound
        type: object
      - properties:
          NameAlreadyUsed:
            properties:
              name:
                type: string
            required:
            - name
            type: object
        required:
        - NameAlreadyUsed
        type: object
      - properties:
          RollingStockIsLocked:
            properties:
              rolling_stock_id:
                format: int64
                type: integer
            required:
            - rolling_stock_id
            type: object
        required:
        - RollingStockIsLocked
        type: object
      - properties:
          RollingStockIsUsed:
            properties:
              rolling_stock_id:
                format: int64
                type: integer
              usage:
                items:
                  $ref: '#/components/schemas/TrainScheduleScenarioStudyProject'
                type: array
            required:
            - rolling_stock_id
            - usage
            type: object
        required:
        - RollingStockIsUsed
        type: object
      - enum:
        - BasePowerClassEmpty
        type: string
    RollingStockForm:
      allOf:
      - $ref: '#/components/schemas/RollingStockCommon'
      - properties:
          locked:
            nullable: true
            type: boolean
          metadata:
            $ref: '#/components/schemas/RollingStockMetadata'
        required:
        - metadata
        type: object
    RollingStockLivery:
      properties:
        compound_image_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
        rolling_stock_id:
          format: int64
          type: integer
      required:
      - id
      - name
      - rolling_stock_id
      type: object
    RollingStockLiveryCreateForm:
      properties:
        images:
          items:
            format: binary
            type: string
          type: array
        name:
          type: string
      required:
      - name
      - images
      type: object
    RollingStockLiveryMetadata:
      properties:
        compound_image_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    RollingStockLockedUpdateForm:
      additionalProperties: false
      properties:
        locked:
          description: New locked value
          type: boolean
      required:
      - locked
      type: object
    RollingStockMetadata:
      additionalProperties: false
      properties:
        detail:
          type: string
        family:
          type: string
        grouping:
          type: string
        number:
          type: string
        reference:
          type: string
        series:
          type: string
        subseries:
          type: string
        type:
          type: string
        unit:
          type: string
      required:
      - detail
      - family
      - type
      - grouping
      - series
      - subseries
      - unit
      - number
      - reference
      type: object
    RollingStockSupportedSignalingSystems:
      items:
        type: string
      type: array
    RollingStockWithLiveries:
      allOf:
      - $ref: '#/components/schemas/RollingStock'
      - properties:
          liveries:
            items:
              $ref: '#/components/schemas/RollingStockLiveryMetadata'
            type: array
        required:
        - liveries
        type: object
    RoutePath:
      properties:
        route:
          type: string
        signaling_type:
          type: string
        track_sections:
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
          type: array
      required:
      - route
      - signaling_type
      - track_sections
      type: object
    RoutingRequirement:
      properties:
        begin_time:
          format: double
          type: number
        route:
          type: string
        zones:
          items:
            $ref: '#/components/schemas/RoutingZoneRequirement'
          type: array
      required:
      - route
      - begin_time
      - zones
      type: object
    RoutingZoneRequirement:
      properties:
        end_time:
          format: double
          type: number
        entry_detector:
          type: string
        exit_detector:
          type: string
        switches:
          additionalProperties:
            type: string
          type: object
        zone:
          type: string
      required:
      - zone
      - entry_detector
      - exit_detector
      - switches
      - end_time
      type: object
    Scenario:
      additionalProperties: false
      properties:
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        electrical_profile_set_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
        infra_id:
          format: int64
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          format: int64
          type: integer
        tags:
          items:
            type: string
          type: array
        timetable_id:
          format: int64
          type: integer
      required:
      - id
      - name
      - description
      - creation_date
      - last_modification
      - tags
      - infra_id
      - timetable_id
      - study_id
      type: object
    ScenarioCreateForm:
      description: This structure is used by the post endpoint to create a scenario
      properties:
        description:
          type: string
        electrical_profile_set_id:
          format: int64
          nullable: true
          type: integer
        infra_id:
          format: int64
          type: integer
        name:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - name
      - infra_id
      type: object
    ScenarioCreateFormV2:
      description: This structure is used by the post endpoint to create a scenario
      properties:
        description:
          type: string
        infra_id:
          format: int64
          type: integer
        name:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
        timetable_id:
          format: int64
          type: integer
      required:
      - name
      - infra_id
      - timetable_id
      type: object
    ScenarioPatchForm:
      description: This structure is used by the patch endpoint to patch a study
      properties:
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ScenarioPatchFormV2:
      description: This structure is used by the patch endpoint to patch a scenario
      properties:
        description:
          nullable: true
          type: string
        infra_id:
          format: int64
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          nullable: true
      type: object
    ScenarioResponse:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - properties:
          electrical_profile_set_name:
            nullable: true
            type: string
          infra_name:
            type: string
          project:
            $ref: '#/components/schemas/Project'
          study:
            $ref: '#/components/schemas/Study'
          train_schedules:
            items:
              $ref: '#/components/schemas/LightTrainSchedule'
            type: array
          trains_count:
            format: int64
            type: integer
        required:
        - infra_name
        - train_schedules
        - trains_count
        - project
        - study
        type: object
    ScenarioResponseV2:
      allOf:
      - $ref: '#/components/schemas/ScenarioV2'
      - properties:
          infra_name:
            type: string
          project:
            $ref: '#/components/schemas/Project'
          study:
            $ref: '#/components/schemas/Study'
          trains_count:
            format: int64
            type: integer
        required:
        - infra_name
        - trains_count
        - project
        - study
        type: object
    ScenarioV2:
      properties:
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        id:
          format: int64
          type: integer
        infra_id:
          format: int64
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          format: int64
          type: integer
        tags:
          $ref: '#/components/schemas/Tags'
        timetable_id:
          format: int64
          type: integer
      required:
      - id
      - infra_id
      - name
      - description
      - creation_date
      - last_modification
      - tags
      - timetable_id
      - study_id
      type: object
    ScenarioWithCountTrains:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - properties:
          infra_name:
            type: string
          trains_count:
            format: int64
            type: integer
        required:
        - trains_count
        - infra_name
        type: object
    ScenarioWithDetails:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - properties:
          electrical_profile_set_name:
            nullable: true
            type: string
          infra_name:
            type: string
          train_schedules:
            items:
              $ref: '#/components/schemas/LightTrainSchedule'
            type: array
          trains_count:
            format: int64
            type: integer
        required:
        - infra_name
        - train_schedules
        - trains_count
        type: object
    ScenarioWithDetailsV2:
      allOf:
      - $ref: '#/components/schemas/ScenarioV2'
      - properties:
          infra_name:
            type: string
          trains_count:
            format: int64
            type: integer
        required:
        - infra_name
        - trains_count
        type: object
    ScheduledPoint:
      properties:
        path_offset:
          description: Offset in meters from the start of the path at which the train must be
          format: double
          type: number
        time:
          description: Time in seconds (elapsed since the train's departure) at which the train must be
          format: double
          type: number
      required:
      - path_offset
      - time
      type: object
    SearchPayload:
      description: The payload of a search request
      example:
        object: operationalpoint
        query:
        - and
        - - =
          - - infra_id
          - 2
        - - search
          - - name
          - plop
      properties:
        dry:
          description: Whether to return the SQL query instead of executing it
          type: boolean
        object:
          description: The object kind to query - run `editoast search list` to get all possible values
          type: string
        query:
          $ref: '#/components/schemas/SearchQuery'
      required:
      - object
      - query
      type: object
    SearchQuery:
      description: A search query
      example:
      - and
      - - =
        - - infra_id
        - 2
      - - search
        - - name
        - plop
      oneOf:
      - type: boolean
      - format: double
        type: number
      - format: int64
        type: integer
      - type: string
      - items:
          allOf:
          - $ref: '#/components/schemas/SearchQuery'
          nullable: true
        type: array
    SearchResultItem:
      description: A search result item that depends on the query's `object`
      oneOf:
      - $ref: '#/components/schemas/SearchResultItemTrack'
      - $ref: '#/components/schemas/SearchResultItemOperationalPoint'
      - $ref: '#/components/schemas/SearchResultItemSignal'
      - $ref: '#/components/schemas/SearchResultItemProject'
      - $ref: '#/components/schemas/SearchResultItemStudy'
      - $ref: '#/components/schemas/SearchResultItemScenario'
    SearchResultItemOperationalPoint:
      description: A search result item for a query with `object = "operationalpoint"`
      properties:
        ch:
          type: string
        ci:
          format: int64
          minimum: 0
          type: integer
        geographic:
          $ref: '#/components/schemas/GeoJsonPoint'
        infra_id:
          format: int64
          type: integer
        name:
          type: string
        obj_id:
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonPoint'
        track_sections:
          items:
            properties:
              position:
                format: double
                type: number
              track:
                type: string
            required:
            - track
            - position
            type: object
          type: array
        trigram:
          type: string
        uic:
          format: int64
          type: integer
      required:
      - obj_id
      - infra_id
      - uic
      - name
      - trigram
      - ch
      - ci
      - geographic
      - schematic
      - track_sections
      type: object
    SearchResultItemProject:
      description: A search result item for a query with `object = "project"`
      properties:
        description:
          type: string
        id:
          format: int64
          minimum: 0
          type: integer
        image:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        studies_count:
          format: int64
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - image
      - name
      - studies_count
      - description
      - last_modification
      - tags
      type: object
    SearchResultItemScenario:
      description: A search result item for a query with `object = "scenario"`
      properties:
        description:
          type: string
        electrical_profile_set_id:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        id:
          format: int64
          minimum: 0
          type: integer
        infra_id:
          format: int64
          minimum: 0
          type: integer
        infra_name:
          type: string
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          format: int64
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
        trains_count:
          format: int64
          minimum: 0
          type: integer
      required:
      - id
      - study_id
      - name
      - electrical_profile_set_id
      - infra_id
      - infra_name
      - trains_count
      - description
      - last_modification
      - tags
      type: object
    SearchResultItemSignal:
      description: A search result item for a query with `object = "signal"`
      properties:
        geographic:
          $ref: '#/components/schemas/GeoJsonPoint'
        infra_id:
          format: int64
          type: integer
        label:
          type: string
        line_code:
          format: int64
          minimum: 0
          type: integer
        line_name:
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonPoint'
        settings:
          items:
            type: string
          type: array
        signaling_systems:
          items:
            type: string
          type: array
        sprite:
          nullable: true
          type: string
        sprite_signaling_system:
          nullable: true
          type: string
      required:
      - infra_id
      - label
      - signaling_systems
      - settings
      - line_code
      - line_name
      - geographic
      - schematic
      type: object
    SearchResultItemStudy:
      description: A search result item for a query with `object = "study"`
      properties:
        description:
          type: string
        id:
          format: int64
          minimum: 0
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        project_id:
          format: int64
          minimum: 0
          type: integer
        scenarios_count:
          format: int64
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - project_id
      - name
      - scenarios_count
      - description
      - last_modification
      - tags
      type: object
    SearchResultItemTrack:
      description: A search result item for a query with `object = "track"`
      properties:
        infra_id:
          format: int64
          type: integer
        line_code:
          format: int64
          type: integer
        line_name:
          type: string
      required:
      - infra_id
      - line_name
      - line_code
      type: object
    SignalSighting:
      properties:
        offset:
          format: double
          type: number
        signal:
          type: string
        state:
          type: string
        time:
          format: double
          type: number
      required:
      - signal
      - time
      - offset
      - state
      type: object
    SignalUpdate:
      properties:
        aspect_label:
          description: The labels of the new aspect
          type: string
        blinking:
          description: Whether the signal is blinking
          type: boolean
        color:
          description: |-
            The color of the aspect

            (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are blue)
          format: int32
          type: integer
        position_end:
          description: The route ends at this position on the train path
          format: double
          nullable: true
          type: number
        position_start:
          description: The route starts at this position on the train path
          format: double
          type: number
        signal_id:
          description: The id of the updated signal
          type: string
        time_end:
          description: The aspects stop being displayed at this time (number of seconds since 1970-01-01T00:00:00)
          format: double
          nullable: true
          type: number
        time_start:
          description: The aspects start being displayed at this time (number of seconds since 1970-01-01T00:00:00)
          format: double
          type: number
        track:
          type: string
        track_offset:
          format: double
          nullable: true
          type: number
      required:
      - signal_id
      - time_start
      - time_end
      - position_start
      - position_end
      - color
      - blinking
      - aspect_label
      - track
      - track_offset
      type: object
    SimulationOutput:
      properties:
        base:
          $ref: '#/components/schemas/ReportTrain'
        final_output:
          $ref: '#/components/schemas/CompleteReportTrain'
        mrsp:
          $ref: '#/components/schemas/Mrsp'
        power_restriction:
          type: string
        provisional:
          $ref: '#/components/schemas/ReportTrain'
      required:
      - base
      - provisional
      - final_output
      - mrsp
      - power_restriction
      type: object
    SimulationPowerRestrictionRange:
      properties:
        code:
          type: string
        handled:
          type: boolean
        start:
          format: double
          type: number
        stop:
          format: double
          type: number
      required:
      - start
      - stop
      - code
      - handled
      type: object
    SimulationReport:
      properties:
        base:
          $ref: '#/components/schemas/ReportTrain'
        curves:
          items:
            $ref: '#/components/schemas/Curve'
          type: array
        eco:
          allOf:
          - $ref: '#/components/schemas/ReportTrain'
          nullable: true
        electrification_ranges:
          description: |-
            A list of ranges which should be contiguous and which describe the
            electrification on the path and if it is handled by the train
          items:
            $ref: '#/components/schemas/ElectrificationRange'
          type: array
        id:
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        name:
          type: string
        path:
          description: The id of the path used for projection
          format: int64
          type: integer
        power_restriction_ranges:
          description: The list of ranges where power restrictions are applied
          items:
            $ref: '#/components/schemas/SimulationPowerRestrictionRange'
          type: array
        slopes:
          items:
            $ref: '#/components/schemas/Slope'
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        vmax:
          $ref: '#/components/schemas/Mrsp'
      required:
      - id
      - labels
      - path
      - name
      - vmax
      - slopes
      - curves
      - base
      - speed_limit_tags
      - electrification_ranges
      - power_restriction_ranges
      type: object
    SimulationSummaryResultResponse:
      oneOf:
      - properties:
          Success:
            properties:
              energy_consumption:
                format: double
                type: number
              length:
                format: int64
                minimum: 0
                type: integer
              time:
                format: double
                type: number
            required:
            - length
            - time
            - energy_consumption
            type: object
        required:
        - Success
        type: object
      - enum:
        - PathfindingNotFound
        type: string
      - enum:
        - RunningTimeNotFound
        type: string
    SingleSimulationRequest:
      allOf:
      - properties:
          allowances:
            items:
              $ref: '#/components/schemas/Allowance'
            type: array
          comfort:
            $ref: '#/components/schemas/RollingStockComfortType'
          initial_speed:
            format: double
            type: number
          options:
            allOf:
            - $ref: '#/components/schemas/TrainScheduleOptions'
            nullable: true
          power_restriction_ranges:
            items:
              $ref: '#/components/schemas/RjsPowerRestrictionRange'
            nullable: true
            type: array
          scheduled_points:
            items:
              $ref: '#/components/schemas/ScheduledPoint'
            type: array
          stops:
            items:
              $ref: '#/components/schemas/TrainStop'
            type: array
          tag:
            nullable: true
            type: string
        type: object
      - properties:
          electrical_profile_set_id:
            format: int64
            nullable: true
            type: integer
          path_id:
            format: int64
            type: integer
          rolling_stock_id:
            format: int64
            type: integer
        required:
        - rolling_stock_id
        - path_id
        type: object
    SingleSimulationResponse:
      properties:
        base_simulation:
          $ref: '#/components/schemas/ResultTrain'
        eco_simulation:
          allOf:
          - $ref: '#/components/schemas/ResultTrain'
          nullable: true
        electrification_ranges:
          items:
            $ref: '#/components/schemas/ElectrificationRange'
          type: array
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/SimulationPowerRestrictionRange'
          type: array
        speed_limits:
          $ref: '#/components/schemas/Mrsp'
        warnings:
          items:
            type: string
          type: array
      required:
      - base_simulation
      - speed_limits
      - warnings
      - electrification_ranges
      - power_restriction_ranges
      type: object
    Slope:
      properties:
        gradient:
          format: double
          type: number
        position:
          format: double
          type: number
      required:
      - gradient
      - position
      type: object
    SpaceTimePosition:
      properties:
        position:
          format: float
          type: number
        time:
          format: float
          type: number
      required:
      - time
      - position
      - speed
      type: object
    SpacingRequirement:
      properties:
        begin_time:
          format: double
          type: number
        end_time:
          format: double
          type: number
        zone:
          type: string
      required:
      - zone
      - begin_time
      - end_time
      type: object
    SpeedDependantPower:
      additionalProperties: false
      description: power-speed curve (in an energy source)
      properties:
        powers:
          items:
            format: double
            type: number
          type: array
        speeds:
          items:
            format: double
            type: number
          type: array
      required:
      - speeds
      - powers
      type: object
    StandardAllowance:
      properties:
        capacity_speed_limit:
          format: double
          type: number
        default_value:
          $ref: '#/components/schemas/AllowanceValue'
        distribution:
          $ref: '#/components/schemas/AllowanceDistribution'
        ranges:
          items:
            $ref: '#/components/schemas/RangeAllowance'
          type: array
      required:
      - default_value
      - ranges
      - distribution
      type: object
    Study:
      properties:
        actual_end_date:
          format: date
          nullable: true
          type: string
        budget:
          format: int32
          nullable: true
          type: integer
        business_code:
          type: string
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        expected_end_date:
          format: date
          nullable: true
          type: string
        id:
          format: int64
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        project_id:
          format: int64
          type: integer
        service_code:
          type: string
        start_date:
          format: date
          nullable: true
          type: string
        state:
          type: string
        study_type:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
      required:
      - id
      - name
      - description
      - business_code
      - service_code
      - creation_date
      - last_modification
      - tags
      - state
      - study_type
      - project_id
      type: object
    StudyCreateForm:
      description: This structure is used by the post endpoint to create a study
      properties:
        actual_end_date:
          format: date
          nullable: true
          type: string
        budget:
          format: int32
          nullable: true
          type: integer
        business_code:
          type: string
        description:
          type: string
        expected_end_date:
          format: date
          nullable: true
          type: string
        name:
          type: string
        service_code:
          type: string
        start_date:
          format: date
          nullable: true
          type: string
        state:
          type: string
        study_type:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
      required:
      - name
      - state
      type: object
    StudyPatchForm:
      description: This structure is used by the patch endpoint to patch a study
      properties:
        actual_end_date:
          format: date
          nullable: true
          type: string
        budget:
          format: int32
          nullable: true
          type: integer
        business_code:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        expected_end_date:
          format: date
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        service_code:
          nullable: true
          type: string
        start_date:
          format: date
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        study_type:
          nullable: true
          type: string
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          nullable: true
      type: object
    StudyResponse:
      allOf:
      - $ref: '#/components/schemas/Study'
      - properties:
          project:
            $ref: '#/components/schemas/Project'
          scenarios_count:
            format: int64
            type: integer
        required:
        - scenarios_count
        - project
        type: object
    StudyWithScenarios:
      allOf:
      - $ref: '#/components/schemas/Study'
      - properties:
          scenarios_count:
            format: int64
            type: integer
        required:
        - scenarios_count
        type: object
    Tags:
      items:
        type: string
      type: array
    Timetable:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    TimetableDetailedResult:
      allOf:
      - description: Creation form for a Timetable
        properties:
          electrical_profile_set_id:
            format: int64
            nullable: true
            type: integer
          id:
            format: int64
            type: integer
        required:
        - id
        type: object
      - properties:
          train_ids:
            items:
              format: int64
              type: integer
            type: array
        required:
        - train_ids
        type: object
      description: Creation form for a Timetable
    TimetableForm:
      description: Creation form for a Timetable
      properties:
        electrical_profile_set_id:
          format: int64
          nullable: true
          type: integer
      type: object
    TimetableImportError:
      oneOf:
      - properties:
          RollingStockNotFound:
            properties:
              name:
                type: string
            required:
            - name
            type: object
        required:
        - RollingStockNotFound
        type: object
      - properties:
          OperationalPointNotFound:
            properties:
              missing_ids:
                items:
                  type: string
                type: array
              missing_uics:
                items:
                  format: int64
                  type: integer
                type: array
            required:
            - missing_uics
            - missing_ids
            type: object
        required:
        - OperationalPointNotFound
        type: object
      - properties:
          PathfindingError:
            properties:
              cause:
                $ref: '#/components/schemas/InternalError'
            required:
            - cause
            type: object
        required:
        - PathfindingError
        type: object
      - properties:
          SimulationError:
            properties:
              cause:
                $ref: '#/components/schemas/InternalError'
            required:
            - cause
            type: object
        required:
        - SimulationError
        type: object
    TimetableImportItem:
      properties:
        path:
          items:
            $ref: '#/components/schemas/TimetableImportPathStep'
          type: array
        pathfinding_timeout:
          format: double
          nullable: true
          type: number
        rolling_stock:
          example: 2TGV2N2
          type: string
        trains:
          items:
            $ref: '#/components/schemas/TimetableImportTrain'
          type: array
      required:
      - rolling_stock
      - path
      - trains
      type: object
    TimetableImportPathLocation:
      oneOf:
      - properties:
          offset:
            format: double
            type: number
          track_section:
            type: string
          type:
            enum:
            - track_offset
            type: string
        required:
        - track_section
        - offset
        - type
        type: object
      - properties:
          type:
            enum:
            - operational_point
            type: string
          uic:
            format: int64
            type: integer
        required:
        - uic
        - type
        type: object
      - properties:
          id:
            type: string
          type:
            enum:
            - operational_point_id
            type: string
        required:
        - id
        - type
        type: object
    TimetableImportPathSchedule:
      properties:
        arrival_time:
          format: date-time
          type: string
        departure_time:
          format: date-time
          type: string
      required:
      - arrival_time
      - departure_time
      type: object
    TimetableImportPathStep:
      properties:
        location:
          $ref: '#/components/schemas/TimetableImportPathLocation'
        schedule:
          additionalProperties:
            $ref: '#/components/schemas/TimetableImportPathSchedule'
          example:
            '7015':
              arrival_time: 2023-08-17T09:46:00+02:00
              departure_time: 2023-08-17T09:56:00+02:00
          type: object
      required:
      - location
      type: object
    TimetableImportTrain:
      properties:
        departure_time:
          example: 2023-08-17T08:46:00+02:00
          format: date-time
          type: string
        name:
          example: '7015'
          type: string
      required:
      - name
      - departure_time
      type: object
    TimetableResult:
      description: Creation form for a Timetable
      properties:
        electrical_profile_set_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
      required:
      - id
      type: object
    TimetableWithSchedulesDetails:
      allOf:
      - $ref: '#/components/schemas/Timetable'
      - properties:
          train_schedule_summaries:
            items:
              $ref: '#/components/schemas/TrainScheduleSummary'
            type: array
        required:
        - train_schedule_summaries
        type: object
    TrackLocation:
      description: A track location is a track section and an offset
      properties:
        offset:
          description: The offset on the track section in meters
          format: double
          type: number
        track_section:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - track_section
      - offset
      type: object
    TrackOffset:
      properties:
        offset:
          format: int64
          minimum: 0
          type: integer
        track:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - track
      - offset
      type: object
    TrackRange:
      properties:
        begin:
          format: int64
          minimum: 0
          type: integer
        direction:
          $ref: '#/components/schemas/Direction'
        end:
          format: int64
          minimum: 0
          type: integer
        track_section:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - track_section
      - begin
      - end
      - direction
      type: object
    TrainImportReport:
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/TimetableImportError'
          nullable: true
        timings:
          $ref: '#/components/schemas/ImportTimings'
      required:
      - timings
      type: object
    TrainSchedule:
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/RollingStockComfortType'
        departure_time:
          format: double
          type: number
        id:
          format: int64
          type: integer
        initial_speed:
          format: double
          type: number
        labels:
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          format: int64
          type: integer
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/RjsPowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          format: int64
          type: integer
        scheduled_points:
          items:
            $ref: '#/components/schemas/ScheduledPoint'
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        timetable_id:
          format: int64
          type: integer
        train_name:
          type: string
      required:
      - id
      - train_name
      - labels
      - departure_time
      - initial_speed
      - allowances
      - comfort
      - speed_limit_tags
      - power_restriction_ranges
      - options
      - path_id
      - rolling_stock_id
      - timetable_id
      - scheduled_points
      type: object
    TrainScheduleBase:
      properties:
        comfort:
          allOf:
          - enum:
            - STANDARD
            - AIR_CONDITIONING
            - HEATING
            type: string
        constraint_distribution:
          $ref: '#/components/schemas/Distribution'
        initial_speed:
          format: double
          type: number
        labels:
          items:
            type: string
          type: array
        margins:
          allOf:
          - additionalProperties: false
            properties:
              boundaries:
                items:
                  minLength: 1
                  type: string
                type: array
              values:
                description: |-
                  The values of the margins. Must contains one more element than the boundaries
                  Can be a percentage `X%`, a time in minutes per kilometer `Xmin/km` or `0`
                example:
                - none
                - 5%
                - 2min/km
                items:
                  type: string
                type: array
            required:
            - boundaries
            - values
            type: object
        options:
          allOf:
          - additionalProperties: false
            properties:
              use_electrical_profiles:
                default: 'true'
                type: boolean
            required:
            - use_electrical_profiles
            type: object
        path:
          items:
            allOf:
            - description: The location of a path waypoint
              oneOf:
              - $ref: '#/components/schemas/TrackOffset'
              - properties:
                  operational_point:
                    maxLength: 255
                    minLength: 1
                    type: string
                required:
                - operational_point
                type: object
              - properties:
                  secondary_code:
                    description: An optional secondary code to identify a more specific location
                    nullable: true
                    type: string
                  trigram:
                    minLength: 1
                    type: string
                required:
                - trigram
                type: object
              - properties:
                  secondary_code:
                    description: An optional secondary code to identify a more specific location
                    nullable: true
                    type: string
                  uic:
                    description: The [UIC](https://en.wikipedia.org/wiki/List_of_UIC_country_codes) code of an operational point
                    format: int32
                    minimum: 0
                    type: integer
                required:
                - uic
                type: object
            - properties:
                deleted:
                  description: |-
                    Metadata given to mark a point as wishing to be deleted by the user.
                    It's useful for soft deleting the point (waiting to fix / remove all references)
                    If true, the train schedule is consider as invalid and must be edited
                  type: boolean
                id:
                  minLength: 1
                  type: string
              required:
              - id
              type: object
            description: A location on the path of a train
          type: array
        power_restrictions:
          items:
            additionalProperties: false
            properties:
              from:
                minLength: 1
                type: string
              to:
                minLength: 1
                type: string
              value:
                type: string
            required:
            - from
            - to
            - value
            type: object
          type: array
        rolling_stock_name:
          type: string
        schedule:
          items:
            additionalProperties: false
            properties:
              arrival:
                nullable: true
                type: string
              at:
                minLength: 1
                type: string
              locked:
                type: boolean
              stop_for:
                nullable: true
                type: string
            required:
            - at
            type: object
          type: array
        speed_limit_tag:
          allOf:
          - minLength: 1
            type: string
          nullable: true
        start_time:
          format: date-time
          type: string
        train_name:
          type: string
      required:
      - train_name
      - labels
      - rolling_stock_name
      - start_time
      - path
      - schedule
      - margins
      - initial_speed
      - comfort
      - constraint_distribution
      - power_restrictions
      - options
      type: object
    TrainScheduleBatchItem:
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/RollingStockComfortType'
        departure_time:
          format: double
          type: number
        initial_speed:
          format: double
          type: number
        labels:
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/RjsPowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          format: int64
          type: integer
        scheduled_points:
          items:
            $ref: '#/components/schemas/ScheduledPoint'
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        train_name:
          type: string
      required:
      - train_name
      - departure_time
      - initial_speed
      - rolling_stock_id
      type: object
    TrainScheduleForm:
      allOf:
      - $ref: '#/components/schemas/TrainScheduleBase'
      - properties:
          timetable_id:
            format: int64
            type: integer
        required:
        - timetable_id
        type: object
    TrainScheduleOptions:
      description: Options for the standalone simulation
      properties:
        ignore_electrical_profiles:
          description: Whether to ignore the electrical profile of the train for simulation
          nullable: true
          type: boolean
      type: object
    TrainSchedulePatch:
      description: A patch of a train schedule
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          nullable: true
          type: array
        comfort:
          allOf:
          - $ref: '#/components/schemas/RollingStockComfortType'
          nullable: true
        departure_time:
          format: double
          nullable: true
          type: number
        id:
          format: int64
          type: integer
        initial_speed:
          format: double
          nullable: true
          type: number
        labels:
          items:
            type: string
          nullable: true
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          format: int64
          nullable: true
          type: integer
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/RjsPowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          format: int64
          nullable: true
          type: integer
        scheduled_points:
          items:
            $ref: '#/components/schemas/ScheduledPoint'
          nullable: true
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        train_name:
          nullable: true
          type: string
      required:
      - id
      type: object
    TrainSchedulePathfindingRequest:
      properties:
        infra_id:
          format: int64
          type: integer
      required:
      - infra_id
      type: object
    TrainScheduleResult:
      allOf:
      - $ref: '#/components/schemas/TrainScheduleBase'
      - properties:
          id:
            format: int64
            type: integer
          timetable_id:
            format: int64
            type: integer
        required:
        - id
        - timetable_id
        type: object
    TrainScheduleScenarioStudyProject:
      properties:
        project_id:
          format: int64
          type: integer
        project_name:
          type: string
        scenario_id:
          format: int64
          type: integer
        scenario_name:
          type: string
        study_id:
          format: int64
          type: integer
        study_name:
          type: string
        train_name:
          type: string
        train_schedule_id:
          format: int64
          type: integer
      required:
      - train_schedule_id
      - train_name
      - project_id
      - project_name
      - study_id
      - study_name
      - scenario_id
      - scenario_name
      type: object
    TrainScheduleSummary:
      allOf:
      - $ref: '#/components/schemas/TrainSchedule'
      - properties:
          arrival_time:
            format: double
            type: number
          invalid_reasons:
            items:
              $ref: '#/components/schemas/TrainScheduleValidation'
            type: array
          mechanical_energy_consumed:
            $ref: '#/components/schemas/MechanicalEnergyConsumedBaseEco'
          path_length:
            format: double
            type: number
          stops_count:
            format: int64
            type: integer
        required:
        - arrival_time
        - mechanical_energy_consumed
        - stops_count
        - path_length
        - invalid_reasons
        type: object
      description: Returns the timetable with the train's important route information (distance travelled, arrival time, etc.)
    TrainScheduleValidation:
      enum:
      - NewerRollingStock
      - NewerInfra
      type: string
    TrainSimulationResponse:
      properties:
        invalid_trains:
          description: Requested trains that are invalid and thus not simulated
          items:
            format: int64
            type: integer
          type: array
        simulations:
          description: The simulation results
          items:
            $ref: '#/components/schemas/SimulationReport'
          type: array
      required:
      - simulations
      - invalid_trains
      type: object
    TrainStop:
      description: One must be specified between `position` and `location`.
      properties:
        duration:
          format: double
          type: number
        location:
          allOf:
          - $ref: '#/components/schemas/TrackLocation'
          nullable: true
        position:
          format: double
          nullable: true
          type: number
      required:
      - position
      - location
      - duration
      type: object
    UpdateOperation:
      properties:
        obj_id:
          example: bd840b06-84ba-4566-98c1-ccf0196c5f16
          type: string
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        operation_type:
          enum:
          - UPDATE
          type: string
        railjson_patch:
          $ref: '#/components/schemas/Patches'
      required:
      - operation_type
      - obj_type
      - railjson_patch
    Version:
      properties:
        git_describe:
          nullable: true
          type: string
      required:
      - git_describe
      type: object
    Waypoint:
      allOf:
      - $ref: '#/components/schemas/WaypointLocation'
      - properties:
          track_section:
            description: A track section UUID
            type: string
        required:
        - track_section
        type: object
    WaypointLocation:
      oneOf:
      - properties:
          offset:
            description: Offset in meters from the start of the waypoint's track section
            format: double
            type: number
        required:
        - offset
        type: object
      - properties:
          geo_coordinate:
            description: A geographic coordinate (lon, lat)/WGS84 that will be projected onto the waypoint's track section
            items:
              allOf:
              - format: double
                type: number
              - format: double
                type: number
            type: array
        required:
        - geo_coordinate
        type: object
    Zone:
      description: |-
        Geographic and Schematic bounding box zone impacted by a list of operations.
        Zones use the coordinate system [epsg:4326](https://epsg.io/4326).
      properties:
        geo:
          $ref: '#/components/schemas/BoundingBox'
        sch:
          $ref: '#/components/schemas/BoundingBox'
      required:
      - geo
      - sch
      type: object
    ZoneUpdate:
      properties:
        isEntry:
          type: boolean
        offset:
          format: double
          type: number
        time:
          format: double
          type: number
        zone:
          type: string
      required:
      - zone
      - time
      - offset
      - isEntry
      type: object
info:
  description: OSRD Edition service description
  title: OSRD Editoast
  version: 0.1.0
openapi: 3.0.2
paths:
  /documents/:
    post:
      description: Post a new document (content_type by header + binary data)
      parameters:
      - description: The document's content type
        in: header
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewDocumentResponse'
          description: The document was created
      summary: Post a new document (content_type by header + binary data)
      tags:
      - documents
  /documents/{document_key}/:
    delete:
      description: Delete an existing document
      parameters:
      - description: The document's key
        in: path
        name: document_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The document was deleted
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Document not found
      summary: Delete an existing document
      tags:
      - documents
    get:
      description: Returns a document of any type
      parameters:
      - description: The document's key
        in: path
        name: document_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The document's binary content
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Document not found
      summary: Returns a document of any type
      tags:
      - documents
  /electrical_profile_set/:
    get:
      description: Retrieve the list of ids and names of electrical profile sets available
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LightElectricalProfileSet'
                type: array
          description: The list of ids and names of electrical profile sets available
      summary: Retrieve the list of ids and names of electrical profile sets available
      tags:
      - electrical_profiles
    post:
      description: import a new electrical profile set
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricalProfileSetData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfileSet'
          description: The list of ids and names of electrical profile sets available
      summary: import a new electrical profile set
      tags:
      - electrical_profiles
  /electrical_profile_set/{electrical_profile_set_id}/:
    delete:
      description: Delete an electrical profile set
      parameters:
      - in: path
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The electrical profile was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested electrical profie was not found
      summary: Delete an electrical profile set
      tags:
      - electrical_profiles
    get:
      description: Return a specific set of electrical profiles
      parameters:
      - in: path
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfileSetData'
          description: The list of electrical profiles in the set
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested electrical profile set was not found
      summary: Return a specific set of electrical profiles
      tags:
      - electrical_profiles
  /electrical_profile_set/{electrical_profile_set_id}/level_order/:
    get:
      description: Return the electrical profile value order for this set
      parameters:
      - in: path
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                1500V:
                - A
                - B
                - C
                25000V:
                - 25000V
                - 22500V
                - 20000V
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/LevelValues'
                type: object
          description: A dictionary mapping electrification modes to a list of electrical profiles ordered by decreasing strength
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested electrical profile set was not found
      summary: Return the electrical profile value order for this set
      tags:
      - electrical_profiles
  /health/:
    get:
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Check if Editoast is running correctly
  /infra/:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          default: 1
          minimum: 1
          type: integer
      - description: Number of elements by page
        in: query
        name: page_size
        schema:
          default: 25
          maximum: 10000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: number
                  next: {}
                  previous: {}
                  results:
                    items:
                      $ref: '#/components/schemas/Infra'
                    type: array
                required:
                - count
                - next
                - previous
                type: object
          description: The infras list
      summary: Paginated list of all available infras
      tags:
      - infra
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Name of the infra to create
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
          description: The created infra
      summary: Create an infra
      tags:
      - infra
  /infra/railjson/:
    post:
      parameters:
      - description: Infra name
        in: query
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: generate_data
        schema:
          default: false
          description: whether the layer should be generated or no
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RailjsonFile'
        description: Railjson infra
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  infra:
                    type: integer
                type: object
          description: The imported infra id
      summary: Import an infra from railjson
      tags:
      - infra
  /infra/refresh/:
    post:
      parameters:
      - description: A list of infra ID
        in: query
        name: infras
        schema:
          default: []
          items:
            type: integer
          type: array
      - description: Force the refresh of the layers
        in: query
        name: force
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: integer
                type: array
          description: A list thats contains the ID of the infras that were refreshed*
      summary: Refresh the layers
      tags:
      - infra
  /infra/voltages/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - 750V
                - 1500V
                - 2500.5V
                items:
                  type: string
                type: array
          description: Voltages list
      summary: List all voltages of all infras
      tags:
      - infra
      - rolling_stock
  /infra/{id}/:
    delete:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Delete an infra and all entities linked to it
      tags:
      - infra
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
          description: Information about the retrieved infra
      summary: Retrieve a specific infra
      tags:
      - infra
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
        description: Operations to do on the infra
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RailjsonObject'
                type: array
          description: An array containing infos about the operations processed
      summary: Update/Create/Delete an object of the infra
      tags:
      - infra
    put:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        description: the name we want to give to the infra
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
          description: The updated infra
      summary: Update an infrastructure name
      tags:
      - infra
  /infra/{id}/clone/:
    post:
      parameters:
      - description: Infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: New infra name
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                type: object
          description: The duplicated infra id
      summary: Duplicate an infra
      tags:
      - infra
  /infra/{id}/errors/:
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: The page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: The number of item per page
        in: query
        name: page_size
        schema:
          default: 25
          minimum: 10
          type: integer
      - description: The type of error to filter on
        in: query
        name: error_type
        schema:
          $ref: '#/components/schemas/InfraErrorType'
      - description: errors and warnings that only part of a given object
        in: query
        name: object_id
        schema:
          type: string
      - description: Whether the response should include errors or warnings
        in: query
        name: level
        schema:
          default: all
          enum:
          - errors
          - warnings
          - all
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of elements
                    example: 1
                    type: integer
                  next:
                    description: The index of the following page (null if no more pages available)
                    example: null
                    nullable: true
                    type: integer
                  previous:
                    description: The index of the previous page (null if requesting the first page)
                    example: null
                    nullable: true
                    type: integer
                  results:
                    items:
                      $ref: '#/components/schemas/InfraError'
                    type: array
                type: object
          description: A paginated list of errors
      summary: Retrieve a paginated list of errors
      tags:
      - infra
  /infra/{id}/load/:
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: No content
      summary: Load an infra if not loaded
      tags:
      - infra
  /infra/{id}/lock/:
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Lock an infra from edition
      tags:
      - infra
  /infra/{id}/objects/{object_type}/:
    post:
      parameters:
      - description: Infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: The type of the object
        in: path
        name: object_type
        required: true
        schema:
          $ref: '#/components/schemas/ObjectType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of object id's
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    geographic:
                      $ref: '#/components/schemas/Geometry'
                      description: object's geographic in geojson format
                    railjson:
                      $ref: '#/components/schemas/Railjson'
                      description: Object properties in railjson format
                    schematic:
                      $ref: '#/components/schemas/Geometry'
                      description: object's schematic in geojson format
                  required:
                  - railjson
                  - geographic
                  - schematic
                  type: object
                type: array
          description: No content
      summary: Retrieve a list of specific objects in railjson format
      tags:
      - infra
  /infra/{id}/railjson/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RailjsonFile'
          description: The infra in railjson format
      summary: Serialize an infra to railjson
      tags:
      - infra
  /infra/{id}/speed_limit_tags/:
    get:
      parameters:
      - description: Infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - freight
                - heavy_load
                items:
                  type: string
                type: array
          description: Tags list
      summary: List all speed limit tags
      tags:
      - infra
  /infra/{id}/switch_types/:
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: A switch type following Railjson spec
                  example:
                    groups:
                      LEFT:
                        dst: LEFT
                        src: BASE
                      RIGHT:
                        dst: RIGHT
                        src: BASE
                    id: Point
                    ports:
                    - LEFT
                    - RIGHT
                    - BASE
                  type: object
                type: array
          description: A list of switch types
      summary: Retrieve a list of switch types
      tags:
      - infra
  /infra/{id}/unlock/:
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Unlock an infra from edition
      tags:
      - infra
  /infra/{id}/voltages/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: include rolling stocks modes or not
        in: query
        name: include_rolling_stock_modes
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - 750V
                - 1500V
                - 2500.5V
                items:
                  type: string
                type: array
          description: Voltages list
      summary: List all voltages
      tags:
      - infra
  /infra/{infra_id}/attached/{track_id}/:
    get:
      description: Retrieve all objects attached to a given track
      parameters:
      - description: An infra ID
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      - description: A track section ID
        in: path
        name: track_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: All objects attached to the given track (arranged by types)
      summary: Retrieve all objects attached to a given track
      tags:
      - infra
  /infra/{infra_id}/auto_fixes/:
    get:
      description: Retrieve a list of operations to fix infra issues
      parameters:
      - description: The ID of the infra to fix
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Operation'
                type: array
          description: The list of suggested operations
      summary: Retrieve a list of operations to fix infra issues
      tags:
      - infra
  /infra/{infra_id}/lines/{line_code}/bbox/:
    get:
      description: Returns the BBoxes (geo and schematic) of a line
      parameters:
      - description: The ID of the infra to fix
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      - description: A line code
        in: path
        name: line_code
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: The BBox of the line
      summary: Returns the BBoxes (geo and schematic) of a line
      tags:
      - infra
  /infra/{infra_id}/pathfinding/:
    post:
      description: This endpoint search path between starting and ending track locations
      parameters:
      - description: The ID of the infra to fix
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: number
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathfindingInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathfindingOutput'
                type: array
          description: A list of shortest paths between starting and ending track locations
      summary: This endpoint search path between starting and ending track locations
      tags:
      - infra
      - pathfinding
  /infra/{infra_id}/routes/nodes/:
    post:
      description: Return all routes that depend on the position of the specified nodes
      parameters:
      - description: The ID of the infra to fix
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                nullable: true
                type: string
              type: object
        description: A mapping node_id -> node_state | null
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: A list of routes IDs
      summary: Return all routes that depend on the position of the specified nodes
      tags:
      - infra
      - routes
  /infra/{infra_id}/routes/track_ranges/:
    get:
      description: Compute the track ranges through which routes passes.
      parameters:
      - description: The ID of the infra to fix
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      - description: A list of comma-separated route ids
        in: query
        name: routes
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                  - properties:
                      track_ranges:
                        items:
                          $ref: '#/components/schemas/DirectionalTrackRange'
                        type: array
                      type:
                        enum:
                        - Computed
                        type: string
                    required:
                    - type
                    - track_ranges
                    type: object
                  - properties:
                      type:
                        enum:
                        - NotFound
                        type: string
                    required:
                    - type
                    type: object
                  - properties:
                      type:
                        enum:
                        - CantComputePath
                        type: string
                    required:
                    - type
                    type: object
                type: array
          description: Foreach route, all the track ranges in it or an error
      summary: Compute the track ranges through which routes passes.
      tags:
      - infra
      - routes
  /infra/{infra_id}/routes/{waypoint_type}/{waypoint_id}/:
    get:
      description: Retrieve all routes that starting and ending by the given waypoint (detector or buffer stop)
      parameters:
      - description: Infra ID
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Type of the waypoint
        in: path
        name: waypoint_type
        required: true
        schema:
          enum:
          - Detector
          - BufferStop
          type: string
      - description: Waypoint ID
        in: path
        name: waypoint_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ending:
                    items:
                      type: string
                    type: array
                  starting:
                    items:
                      type: string
                    type: array
                required:
                - starting
                - ending
                type: object
          description: All routes that starting and ending by the given waypoint
      summary: Retrieve all routes that starting and ending by the given waypoint (detector or buffer stop)
      tags:
      - infra
      - routes
  /layers/layer/{layer_slug}/mvt/{view_slug}/:
    get:
      description: Returns layer view metadata to query tiles
      parameters:
      - in: query
        name: infra
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: layer_slug
        required: true
        schema:
          type: string
      - in: path
        name: view_slug
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  attribution:
                    type: string
                  maxzoom:
                    example: 15
                    format: int64
                    minimum: 0
                    type: integer
                  minzoom:
                    format: int64
                    minimum: 0
                    type: integer
                  name:
                    example: track_sections
                    type: string
                  promoteId:
                    additionalProperties:
                      type: string
                    type: object
                  scheme:
                    example: xyz
                    type: string
                  tiles:
                    example:
                    - http://localhost:7070/tile/track_sections/geo/{z}/{x}/{y}/?infra=1
                    items:
                      type: string
                    type: array
                  type:
                    type: string
                required:
                - type
                - name
                - promoteId
                - scheme
                - tiles
                - attribution
                - minzoom
                - maxzoom
                type: object
          description: Successful Response
      summary: Returns layer view metadata to query tiles
      tags:
      - layers
  /layers/tile/{layer_slug}/{view_slug}/{z}/{x}/{y}/:
    get:
      description: Mvt tile from the cache if possible, otherwise gets data from the database and caches it in redis
      parameters:
      - in: query
        name: infra
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: layer_slug
        required: true
        schema:
          type: string
      - in: path
        name: view_slug
        required: true
        schema:
          type: string
      - in: path
        name: x
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      - in: path
        name: y
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      - in: path
        name: z
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Mvt tile from the cache if possible, otherwise gets data from the database and caches it in redis
      tags:
      - layers
  /light_rolling_stock/:
    get:
      description: Paginated list of rolling stock with a lighter response
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfLightRollingStockWithLiveries'
          description: ''
      summary: Paginated list of rolling stock with a lighter response
      tags:
      - rolling_stock
  /light_rolling_stock/{rolling_stock_id}/:
    get:
      description: Retrieve a rolling stock's light representation
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightRollingStockWithLiveries'
          description: The rolling stock with their simplified effort curves
      summary: Retrieve a rolling stock's light representation
      tags:
      - rolling_stock
  /pathfinding/:
    post:
      description: Run a pathfinding between waypoints and store the resulting path in the DB
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathfindingRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathResponse'
          description: The created path
      summary: Run a pathfinding between waypoints and store the resulting path in the DB
      tags:
      - pathfinding
  /pathfinding/{pathfinding_id}/:
    delete:
      description: Deletes a stored path
      parameters:
      - description: A stored path ID
        in: path
        name: pathfinding_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The path was deleted
      summary: Deletes a stored path
      tags:
      - pathfinding
    get:
      description: Retrieves a stored path
      parameters:
      - description: A stored path ID
        in: path
        name: pathfinding_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathResponse'
          description: The requested path
      summary: Retrieves a stored path
      tags:
      - pathfinding
    put:
      description: Updates an existing path with the result of a new pathfinding run
      parameters:
      - description: A stored path ID
        in: path
        name: pathfinding_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathfindingRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathResponse'
          description: The updated path
      summary: Updates an existing path with the result of a new pathfinding run
      tags:
      - pathfinding
  /pathfinding/{pathfinding_id}/electrical_profiles/:
    get:
      description: Retrieve the electrical profiles along a path, as seen by the rolling stock specified
      parameters:
      - description: A stored path ID
        in: path
        name: pathfinding_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilesOnPathResponse'
          description: ''
      summary: Retrieve the electrical profiles along a path, as seen by the rolling stock specified
      tags:
      - electrical_profiles
  /pathfinding/{pathfinding_id}/electrifications/:
    get:
      description: Retrieve the electrification modes along a path, as seen by the rolling stock specified
      parameters:
      - description: A stored path ID
        in: path
        name: pathfinding_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectrificationsOnPathResponse'
          description: ''
      summary: Retrieve the electrification modes along a path, as seen by the rolling stock specified
      tags:
      - infra
  /projects/:
    get:
      description: Returns a paginated list of projects
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfProjectWithStudies'
          description: The list of projects
      summary: Returns a paginated list of projects
      tags:
      - projects
    post:
      description: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateForm'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
          description: The created project
      summary: Create a new project
      tags:
      - projects
  /projects/{project_id}/:
    delete:
      description: Delete a project
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The project was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested project was not found
      summary: Delete a project
      tags:
      - projects
    get:
      description: Retrieve a project
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
          description: The requested project
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested project was not found
      summary: Retrieve a project
      tags:
      - projects
    patch:
      description: Update a project
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchForm'
        description: The fields to update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
          description: The updated project
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested project was not found
      summary: Update a project
      tags:
      - projects
  /projects/{project_id}/studies/:
    get:
      description: Return a list of studies
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfStudyWithScenarios'
          description: The list of studies
      summary: Return a list of studies
      tags:
      - studies
    post:
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyCreateForm'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResponse'
          description: The created study
      tags:
      - studies
  /projects/{project_id}/studies/{study_id}/:
    delete:
      description: Delete a study
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The study was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested study was not found
      summary: Delete a study
      tags:
      - studies
    get:
      description: Return a specific study
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResponse'
          description: The requested study
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested study was not found
      summary: Return a specific study
      tags:
      - studies
    patch:
      description: Update a study
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyPatchForm'
        description: The fields to update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResponse'
          description: The updated study
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested study was not found
      summary: Update a study
      tags:
      - studies
  /projects/{project_id}/studies/{study_id}/scenarios/:
    get:
      description: Return a list of scenarios
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfScenarioWithCountTrains'
          description: The list of scenarios
      summary: Return a list of scenarios
      tags:
      - scenarios
    post:
      description: Create a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioCreateForm'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
          description: The created scenario
      summary: Create a scenario
      tags:
      - scenarios
  /projects/{project_id}/studies/{study_id}/scenarios/{scenario_id}/:
    delete:
      description: Delete a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The scenario was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Delete a scenario
      tags:
      - scenarios
    get:
      description: Return a specific scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
          description: The requested scenario
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Return a specific scenario
      tags:
      - scenarios
    patch:
      description: Update a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioPatchForm'
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
          description: The scenario was updated successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Update a scenario
      tags:
      - scenarios
  /rolling_stock/:
    post:
      description: Create a rolling stock
      parameters:
      - in: query
        name: locked
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Create a rolling stock
      tags:
      - rolling_stock
  /rolling_stock/power_restrictions/:
    get:
      description: Returns the set of power restrictions for all rolling_stocks modes.
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Retrieve the power restrictions list
      summary: Returns the set of power restrictions for all rolling_stocks modes.
      tags:
      - rolling_stock
  /rolling_stock/{rolling_stock_id}/:
    delete:
      description: Delete a rolling_stock and all entities linked to it
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      - description: force the deletion even if itâ€™s used
        in: query
        name: force
        required: false
        schema:
          type: boolean
      responses:
        '204':
          description: The rolling stock was deleted successfully
        '404':
          description: The requested rolling stock was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockError'
          description: The requested rolling stock is used
      summary: Delete a rolling_stock and all entities linked to it
      tags:
      - rolling_stock
    get:
      description: Get a rolling stock by Id
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockWithLiveries'
          description: The requested rolling stock
      summary: Get a rolling stock by Id
      tags:
      - rolling_stock
    patch:
      description: Patch a rolling stock
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Patch a rolling stock
      tags:
      - rolling_stock
  /rolling_stock/{rolling_stock_id}/livery/:
    post:
      description: Create a rolling stock livery
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockLiveryCreateForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockLivery'
          description: The created rolling stock
        '404':
          description: The requested rolling stock was not found
      summary: Create a rolling stock livery
      tags:
      - rolling_stock
      - rolling_stock_livery
  /rolling_stock/{rolling_stock_id}/locked/:
    patch:
      description: Update rolling_stock locked field
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockLockedUpdateForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Update rolling_stock locked field
      tags:
      - rolling_stock
  /search/:
    post:
      description: |-
        Returns all infra objects of some type according to a hierarchical query.

        # Payload

        {
        "object": string,
        "query": query,
        "dry": boolean, # default: false
        }

        Where:
        - `object` can be any search object declared in `search.yml`
        - `query` is a JSON document which can be deserialized into a [SearchAst].
        Check out examples below.

        # Response

        The response structure depends on the `object`.

        # Query language

        The query itself is defined using a language made up of nested JSON arrays.
        It will be parsed and transformed into a PostgreSQL WHERE statement.
        The language consist of a single boolean expression of comparison statements
        in prefix notation. For example, the query `["like", ["name"], "%ari%"]`
        will generate a WHERE statement like `WHERE "name" LIKE '%ari%'`.
        For more information on the query language itself, check out examples below.

        # Available functions

        See [create_processing_context()].

        # A few query examples

        * The railway station PNO: `["=", ["trigram"], "pno"]`
        * The railway stations with either "Paris" or "Lyon" (or both) in their name:
        `["or", ["search", ["name"], "Paris"], ["search", ["name"], "Lyon"]]`
        * All railway stations with "Paris" in their name but not PNO :
        `["and", ["search", ["name"], "Paris"], ["not", ["=", ["trigram"], "pno"]]]`

        See [SearchAst] for a more detailed view of the query language.
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchResultItem'
                type: array
          description: The search results
      summary: Returns all infra objects of some type according to a hierarchical query.
      tags:
      - search
  /single_simulation/:
    post:
      description: Runs a simulation with a single train, does not write anything to the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleSimulationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSimulationResponse'
          description: Data about the simulation produced
      summary: Runs a simulation with a single train, does not write anything to the database
  /sprites/signaling_systems/:
    get:
      description: This endpoint returns the list of supported signaling systems
      responses:
        '200':
          content:
            application/json:
              example:
              - BAL
              - TVM300
              schema:
                items:
                  type: string
                type: array
          description: List of supported signaling systems
      summary: This endpoint returns the list of supported signaling systems
      tags:
      - sprites
  /sprites/{signaling_system}/{file_name}/:
    get:
      description: This endpoint is used by map libre to retrieve the atlas of each signaling system
      parameters:
      - description: Signaling system name
        in: path
        name: signaling_system
        required: true
        schema:
          type: string
      - description: File name (json, png or svg)
        in: path
        name: file_name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Atlas image of config
        '404':
          description: Signaling system not found
      summary: This endpoint is used by map libre to retrieve the atlas of each signaling system
      tags:
      - sprites
  /stdcm/:
    post:
      description: Compute a STDCM and return the simulation result
      requestBody:
        content:
          application/json:
            schema:
              description: An STDCM request
              properties:
                comfort:
                  $ref: '#/components/schemas/RollingStockComfortType'
                end_time:
                  format: double
                  nullable: true
                  type: number
                infra_id:
                  format: int64
                  type: integer
                margin_after:
                  description: |-
                    Margin after the train passage in seconds

                    Enforces that the path used by the train should be free and
                    available at least that many seconds after its passage.
                  format: double
                  type: number
                margin_before:
                  description: |-
                    Margin before the train passage in seconds

                    Enforces that the path used by the train should be free and
                    available at least that many seconds before its passage.
                  format: double
                  type: number
                maximum_departure_delay:
                  default: 7200.0
                  description: By how long we can shift the departure time in seconds
                  format: double
                  type: number
                maximum_run_time:
                  default: 43200.0
                  description: Specifies how long the total run time can be in seconds
                  format: double
                  type: number
                rolling_stock_id:
                  format: int64
                  type: integer
                speed_limit_tags:
                  description: Train categories for speed limits
                  nullable: true
                  type: string
                standard_allowance:
                  allOf:
                  - $ref: '#/components/schemas/AllowanceValue'
                  nullable: true
                start_time:
                  format: double
                  nullable: true
                  type: number
                steps:
                  items:
                    $ref: '#/components/schemas/PathfindingStep'
                  type: array
                timetable_id:
                  format: int64
                  type: integer
              required:
              - infra_id
              - timetable_id
              - steps
              - rolling_stock_id
              - comfort
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                description: The response issued after an STDCM calculation
                properties:
                  path:
                    $ref: '#/components/schemas/PathResponse'
                  path_payload:
                    $ref: '#/components/schemas/PathfindingPayload'
                  simulation:
                    $ref: '#/components/schemas/SimulationReport'
                required:
                - path
                - path_payload
                - simulation
                type: object
          description: The simulation result
      summary: Compute a STDCM and return the simulation result
      tags:
      - stdcm
  /timetable/{id}/:
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableWithSchedulesDetails'
          description: Timetable with schedules
        '404':
          description: Timetable not found
      summary: Return a specific timetable with its associated schedules
      tags:
      - timetable
    post:
      description: |-
        Import a timetable
        Returns data about the import for each train imported
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TimetableImportItem'
              type: array
        description: ''
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/TrainImportReport'
                type: object
          description: Import report
      summary: Import a timetable
      tags:
      - timetable
  /timetable/{id}/conflicts/:
    get:
      description: |-
        Compute spacing conflicts for a given timetable
        TODO: This should compute itinary conflicts too
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Conflict'
                type: array
          description: Spacing conflicts
      summary: Compute spacing conflicts for a given timetable
      tags:
      - timetable
  /train_schedule/:
    delete:
      description: Delete multiple train schedules at once
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  items:
                    format: int64
                    type: integer
                  type: array
              required:
              - ids
              type: object
        required: true
      responses:
        '204':
          description: The train schedules have been deleted
      summary: Delete multiple train schedules at once
      tags:
      - train_schedule
      - timetable
    patch:
      description: Update multiple train schedules at once and re-run simulations accordingly
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TrainSchedulePatch'
              type: array
        required: true
      responses:
        '204':
          description: The train schedules have been updated
      summary: Update multiple train schedules at once and re-run simulations accordingly
      tags:
      - train_schedule
      - timetable
  /train_schedule/results/:
    post:
      description: Retrieve the simulation result of multiple train schedules
      requestBody:
        content:
          application/json:
            schema:
              properties:
                path_id:
                  description: A path ID to project the simulation results onto. If not provided, the path of the first train will be used.
                  format: int64
                  nullable: true
                  type: integer
                train_ids:
                  description: The IDs of the trains to simulate
                  items:
                    format: int64
                    type: integer
                  type: array
              required:
              - train_ids
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainSimulationResponse'
          description: The train schedule simulations results and a list of invalid train_ids
      summary: Retrieve the simulation result of multiple train schedules
      tags:
      - train_schedule
  /train_schedule/standalone_simulation/:
    post:
      description: Create a batch of train schedule and run simulations accordingly
      requestBody:
        content:
          application/json:
            schema:
              description: The list of train schedules to simulate
              properties:
                path:
                  format: int64
                  type: integer
                schedules:
                  items:
                    $ref: '#/components/schemas/TrainScheduleBatchItem'
                  minItems: 1
                  type: array
                timetable:
                  format: int64
                  type: integer
              required:
              - timetable
              - path
              - schedules
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  format: int64
                  type: integer
                type: array
          description: The ids of the train_schedules created
      summary: Create a batch of train schedule and run simulations accordingly
      tags:
      - train_schedule
  /train_schedule/{id}/:
    delete:
      description: Delete a train schedule and its result
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The train schedule has been deleted
      summary: Delete a train schedule and its result
      tags:
      - train_schedule
      - timetable
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainSchedule'
          description: The train schedule
      summary: Return a specific timetable with its associated schedules
      tags:
      - train_schedule
  /train_schedule/{id}/result/:
    get:
      description: Retrieve a simulation result
      parameters:
      - in: query
        name: path_id
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationReport'
          description: The train schedule result
      summary: Retrieve a simulation result
      tags:
      - train_schedule
  /v2/infra/{infra_id}/path_properties/:
    post:
      description: Compute path properties
      parameters:
      - description: The infra id
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPropertiesInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathProperties'
          description: Path properties
      summary: Compute path properties
      tags:
      - pathfindingv2
  /v2/infra/{infra_id}/pathfinding/blocks/:
    post:
      description: Compute a pathfinding
      parameters:
      - description: The infra id
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathfindingInputV2'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathfindingResult'
          description: Pathfinding Result
      summary: Compute a pathfinding
      tags:
      - pathfindingv2
  /v2/projects/{project_id}/studies/{study_id}/scenarios/:
    get:
      description: Return a list of scenarios
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfScenarioWithDetails'
          description: The list of scenarios
      summary: Return a list of scenarios
      tags:
      - scenariosv2
    post:
      description: Create a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioCreateFormV2'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponseV2'
          description: The created scenario
      summary: Create a scenario
      tags:
      - scenariosv2
  /v2/projects/{project_id}/studies/{study_id}/scenarios/{scenario_id}/:
    delete:
      description: Delete a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The scenario was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Delete a scenario
      tags:
      - scenariosv2
    get:
      description: Return a specific scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponseV2'
          description: The requested scenario
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Return a specific scenario
      tags:
      - scenariosv2
    patch:
      description: Update a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioPatchFormV2'
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponseV2'
          description: The scenario was updated successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Update a scenario
      tags:
      - scenariosv2
  /v2/timetable/:
    get:
      description: Return all timetables
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfTimetable'
          description: List timetables
      summary: Return all timetables
      tags:
      - timetablev2
    post:
      description: Return a specific timetable with its associated schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimetableForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableResult'
          description: Timetable with train schedules ids
        '404':
          description: Timetable not found
      summary: Return a specific timetable with its associated schedules
      tags:
      - timetablev2
  /v2/timetable/{id}/:
    delete:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: A timetable ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: No content
        '404':
          description: Timetable not found
      summary: Return a specific timetable with its associated schedules
      tags:
      - timetablev2
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: A timetable ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableDetailedResult'
          description: Timetable with train schedules ids
        '404':
          description: Timetable not found
      summary: Return a specific timetable with its associated schedules
      tags:
      - timetablev2
    put:
      description: Update a specific timetable with its associated schedules
      parameters:
      - description: A timetable ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimetableForm'
        description: ''
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableDetailedResult'
          description: Timetable with train schedules ids
        '404':
          description: Timetable not found
      summary: Update a specific timetable with its associated schedules
      tags:
      - timetablev2
  /v2/timetable/{id}/conflicts/:
    get:
      description: Retrieve the list of conflict of the timetable (invalid trains are ignored)
      parameters:
      - description: The timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: The infra id
        in: query
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConflictV2'
                type: array
          description: list of conflict
      summary: Retrieve the list of conflict of the timetable (invalid trains are ignored)
      tags:
      - timetablev2
  /v2/train_schedule/:
    delete:
      description: Delete a train schedule and its result
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  items:
                    format: int64
                    type: integer
                  type: array
                  uniqueItems: true
              required:
              - ids
              type: object
        required: true
      responses:
        '204':
          description: All train schedules have been deleted
      summary: Delete a train schedule and its result
      tags:
      - train_schedulev2
    post:
      description: Create train schedule by batch
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TrainScheduleForm'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrainScheduleResult'
                type: array
          description: The train schedule
      summary: Create train schedule by batch
      tags:
      - train_schedulev2
  /v2/train_schedule/project_path/:
    post:
      description: |-
        Projects the space time curves and paths of a number of train schedules onto a given path
        Params are the infra_id and a list of train_ids
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ProjectPathResult'
                type: object
          description: Project Path Output
      summary: Projects the space time curves and paths of a number of train schedules onto a given path
      tags:
      - train_schedulev2
  /v2/train_schedule/simulation_summary/:
    get:
      description: |-
        Retrieve simulation information for a given train list.
        Useful for finding out whether pathfinding/simulation was successful.
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/SimulationSummaryResultResponse'
                type: object
          description: Project Path Output
      summary: Retrieve simulation information for a given train list.
      tags:
      - train_schedulev2
  /v2/train_schedule/{id}/:
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainScheduleResult'
          description: The train schedule
      summary: Return a specific timetable with its associated schedules
      tags:
      - train_schedulev2
    put:
      description: Update  train schedule at once
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainScheduleForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainScheduleResult'
          description: The train schedule have been updated
      summary: Update  train schedule at once
      tags:
      - train_schedulev2
      - timetable
  /v2/train_schedule/{id}/path/:
    get:
      description: Get a path from a trainschedule given an infrastructure id and a train schedule id
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathfindingResult'
          description: The path
        '404':
          description: Infrastructure or Train schedule not found
      summary: Get a path from a trainschedule given an infrastructure id and a train schedule id
      tags:
      - train_schedulev2
      - pathfindingv2
  /v2/train_schedule/{id}/simulation/:
    get:
      description: Retrieve the space, speed and time curve of a given train
      parameters:
      - description: The timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: The infra id
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationOutput'
          description: Simulation Output
      summary: Retrieve the space, speed and time curve of a given train
      tags:
      - train_schedulev2
  /version/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Return the service version
  /version/core/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Return the core service version
tags:
- description: Infra
  name: infra
- description: Operations related to infra routes
  name: routes
- description: Timetable
  name: timetable
- description: Pathfinding operations
  name: pathfinding
- description: Map layers
  name: layers
- description: Electrical profiles
  name: electrical_profiles
- description: Train Schedule
  name: train_schedule
