components:
  schemas:
    Allowance:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/EngineeringAllowance'
        - properties:
            allowance_type:
              enum:
              - engineering
              type: string
          required:
          - allowance_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/StandardAllowance'
        - properties:
            allowance_type:
              enum:
              - standard
              type: string
          required:
          - allowance_type
          type: object
    AllowanceDistribution:
      enum:
      - MARECO
      - LINEAR
      type: string
    AllowanceValue:
      oneOf:
      - properties:
          minutes:
            format: double
            type: number
          value_type:
            enum:
            - time_per_distance
            type: string
        required:
        - minutes
        - value_type
        type: object
      - properties:
          seconds:
            format: double
            type: number
          value_type:
            enum:
            - time
            type: string
        required:
        - seconds
        - value_type
        type: object
      - properties:
          percentage:
            format: double
            type: number
          value_type:
            enum:
            - percentage
            type: string
        required:
        - percentage
        - value_type
        type: object
    BoundingBox:
      description: A bounding box
      items:
        items:
          type: integer
        maxItems: 2
        minItems: 2
        type: array
      maxItems: 2
      minItems: 2
      type: array
    CatenariesOnPathResponse:
      description: |-
        A list of ranges associated to catenary modes. When a profile overlapping another is found,
        a warning is added to the list
      properties:
        catenary_ranges:
          items:
            $ref: '#/components/schemas/RangedValue'
          type: array
        warnings:
          items:
            $ref: '#/components/schemas/InternalError'
          type: array
      required:
      - catenary_ranges
      - warnings
      type: object
    Comfort:
      default: STANDARD
      description: Train comfort that will be used for the simulation
      enum:
      - AC
      - HEATING
      - STANDARD
      type: string
    ConditionalEffortCurve:
      properties:
        cond:
          $ref: '#/components/schemas/EffortCurveConditions'
        curve:
          $ref: '#/components/schemas/EffortCurve'
      required:
      - cond
      - curve
      type: object
    Conflict:
      properties:
        conflict_type:
          $ref: '#/components/schemas/ConflictType'
        end_time:
          format: int64
          minimum: 0
          type: integer
        start_time:
          format: int64
          minimum: 0
          type: integer
        train_ids:
          items:
            format: int64
            type: integer
          type: array
        train_names:
          items:
            type: string
          type: array
      required:
      - train_ids
      - train_names
      - start_time
      - end_time
      - conflict_type
      type: object
    ConflictType:
      enum:
      - Spacing
      - Routing
      type: string
    DeleteOperation:
      properties:
        obj_id:
          example: bd840b06-84ba-4566-98c1-ccf0196c5f16
          type: string
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        operation_type:
          enum:
          - DELETE
          type: string
      required:
      - operation_type
      - obj_type
      - obj_id
    DeleteRollingStockQueryParams:
      properties:
        force:
          description: force the deletion even if itâ€™s used
          type: boolean
      type: object
    Direction:
      enum:
      - START_TO_STOP
      - STOP_TO_START
      type: string
    DirectionalTrackRange:
      description: Track range associated with a direction
      properties:
        begin:
          format: float
          type: number
        direction:
          $ref: '#/components/schemas/Direction'
        end:
          example: 100.0
          format: float
          type: number
        track:
          example: 01234567-89ab-cdef-0123-456789abcdef
          type: string
      required:
      - track
      - begin
      - end
      - direction
      type: object
    EffortCurve:
      properties:
        max_efforts:
          example:
          - 23500.0
          - 23200.0
          - 21200.0
          items:
            format: double
            type: number
          minItems: 2
          type: array
        speeds:
          example:
          - 0.0
          - 2.958
          - 46.719
          items:
            format: double
            type: number
          minItems: 2
          type: array
      required:
      - speeds
      - max_efforts
      type: object
    EffortCurveConditions:
      properties:
        comfort:
          allOf:
          - $ref: '#/components/schemas/RollingStockComfortType'
          nullable: true
        electrical_profile_level:
          nullable: true
          type: string
        power_restriction_code:
          nullable: true
          type: string
      required:
      - comfort
      - electrical_profile_level
      - power_restriction_code
      type: object
    EffortCurves:
      properties:
        default_mode:
          type: string
        modes:
          additionalProperties:
            $ref: '#/components/schemas/ModeEffortCurves'
          type: object
      required:
      - modes
      - default_mode
      type: object
    ElectricalProfile:
      properties:
        power_class:
          example: '1'
          type: string
        track_ranges:
          items:
            $ref: '#/components/schemas/TrackRange'
          type: array
        value:
          example: A
          type: string
      required:
      - value
      - power_class
      - track_ranges
      type: object
    ElectricalProfileSet:
      properties:
        data:
          $ref: '#/components/schemas/ElectricalProfileSetData'
        id:
          format: int64
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
      required:
      - data
      type: object
    ElectricalProfileSetData:
      properties:
        level_order:
          additionalProperties:
            $ref: '#/components/schemas/LevelValues'
          type: object
        levels:
          items:
            $ref: '#/components/schemas/ElectricalProfile'
          type: array
      required:
      - levels
      - level_order
      type: object
    ElectrificationRange:
      properties:
        electrificationUsage:
          discriminator:
            propertyName: object_type
          oneOf:
          - $ref: '#/components/schemas/Electrified'
          - $ref: '#/components/schemas/Neutral'
          - $ref: '#/components/schemas/NonElectrified'
        start:
          format: double
          type: number
        stop:
          format: double
          type: number
      required:
      - start
      - stop
      - is_electrified
      - electrificationUsage
    Electrified:
      properties:
        mode:
          type: string
        mode_handled:
          type: boolean
        object_type:
          enum:
          - Electrified
          type: string
        profile:
          nullable: true
          type: string
        profile_handled:
          type: boolean
      required:
      - mode
      - mode_handled
      - object_type
      - profile_handled
    EnergySource:
      description: energy source of a rolling stock
      oneOf:
      - description: energy source for a rolling stock representing a catenary
        properties:
          efficiency:
            format: double
            maximum: 1
            minimum: 0
            type: number
          energy_source_type:
            enum:
            - Catenary
            type: string
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
        required:
        - max_input_power
        - max_output_power
        - efficiency
        - energy_source_type
        type: object
      - properties:
          efficiency:
            format: double
            maximum: 1
            minimum: 0
            type: number
          energy_source_type:
            enum:
            - PowerPack
            type: string
          energy_storage:
            $ref: '#/components/schemas/EnergyStorage'
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
        required:
        - max_input_power
        - max_output_power
        - energy_storage
        - efficiency
        - energy_source_type
        type: object
      - description: energy source for a rolling stock representing a battery
        properties:
          efficiency:
            format: double
            maximum: 1
            minimum: 0
            type: number
          energy_source_type:
            enum:
            - Battery
            type: string
          energy_storage:
            $ref: '#/components/schemas/EnergyStorage'
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
        required:
        - max_input_power
        - max_output_power
        - energy_storage
        - efficiency
        - energy_source_type
        type: object
    EnergyStorage:
      description: energy storage of an energy source (of a rolling stock, can be a electrical battery or a hydrogen/fuel powerPack)
      properties:
        capacity:
          format: double
          type: number
        refill_law:
          allOf:
          - $ref: '#/components/schemas/RefillLaw'
          nullable: true
        soc:
          format: double
          maximum: 1
          minimum: 0
          type: number
        soc_max:
          format: double
          maximum: 1
          minimum: 0
          type: number
        soc_min:
          format: double
          maximum: 1
          minimum: 0
          type: number
      required:
      - capacity
      - soc
      - soc_min
      - soc_max
      - refill_law
      type: object
    EngineeringAllowance:
      allOf:
      - $ref: '#/components/schemas/RangeAllowance'
      - properties:
          capacity_speed_limit:
            default: -1.0
            format: double
            type: number
          distribution:
            $ref: '#/components/schemas/AllowanceDistribution'
        required:
        - distribution
        type: object
    Gamma:
      properties:
        type:
          type: string
        value:
          format: double
          type: number
      required:
      - type
      - value
      type: object
    GeoJson:
      description: A GeoJSON geometry item
      oneOf:
      - $ref: '#/components/schemas/GeoJsonPoint'
      - $ref: '#/components/schemas/GeoJsonMultiPoint'
      - $ref: '#/components/schemas/GeoJsonLineString'
      - $ref: '#/components/schemas/GeoJsonMultiLineString'
      - $ref: '#/components/schemas/GeoJsonPolygon'
      - $ref: '#/components/schemas/GeoJsonMultiPolygon'
    GeoJsonLineString:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonLineStringValue'
          type:
            enum:
            - LineString
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonLineStringValue:
      items:
        $ref: '#/components/schemas/GeoJsonPointValue'
      type: array
    GeoJsonMultiLineString:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiLineStringValue'
          type:
            enum:
            - MultiLineString
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonMultiLineStringValue:
      items:
        $ref: '#/components/schemas/GeoJsonLineStringValue'
      type: array
    GeoJsonMultiPoint:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiPointValue'
          type:
            enum:
            - MultiPoint
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonMultiPointValue:
      items:
        $ref: '#/components/schemas/GeoJsonPointValue'
      type: array
    GeoJsonMultiPolygon:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiPolygonValue'
          type:
            enum:
            - MultiPolygon
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonMultiPolygonValue:
      items:
        $ref: '#/components/schemas/GeoJsonPolygonValue'
      type: array
    GeoJsonObject:
      description: GeoJson format
      properties:
        coordinates:
          items:
            items:
              format: float
              type: number
            type: array
          type: array
        type:
          type: string
      required:
      - coordinates
      - type
      type: object
    GeoJsonPoint:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonPointValue'
          type:
            enum:
            - Point
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonPointValue:
      items:
        format: double
        type: number
      type: array
    GeoJsonPolygon:
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonPolygonValue'
          type:
            enum:
            - Polygon
            type: string
        required:
        - type
        - coordinates
        type: object
    GeoJsonPolygonValue:
      items:
        $ref: '#/components/schemas/GeoJsonLineStringValue'
      type: array
    GeoJsonPosition:
      properties:
        coordinates:
          items:
            format: float
            type: number
          maxItems: 2
          minItems: 2
          type: array
        type:
          type: string
      required:
      - coordinates
      - type
      type: object
    Geometry:
      description: Definition of a GeoJSON geometry
      oneOf:
      - $ref: '#/components/schemas/Point'
      - $ref: '#/components/schemas/LineString'
      - $ref: '#/components/schemas/Polygon'
      - $ref: '#/components/schemas/MultiPoint'
      - $ref: '#/components/schemas/MultiLineString'
      - $ref: '#/components/schemas/MultiPolygon'
      type: object
    Infra:
      properties:
        created:
          format: date
          type: string
        generated_version:
          example: '1'
          nullable: true
          type: string
        id:
          type: integer
        locked:
          type: boolean
        modified:
          format: date
          type: string
        name:
          type: string
        railjson_version:
          example: 3.3.1
          type: string
        state:
          enum:
          - NOT_LOADED
          - INITIALIZING
          - DOWNLOADING
          - PARSING_JSON
          - PARSING_INFRA
          - ADAPTING_KOTLIN
          - LOADING_SIGNALS
          - BUILDING_BLOCKS
          - CACHED
          - TRANSIENT_ERROR
          - ERROR
          type: string
        version:
          example: '1'
          type: string
      required:
      - id
      - name
      - version
      - railjson_version
      - generated_version
      - created
      - modified
      - locked
      - state
    InfraError:
      description: An infra error or warning
      properties:
        geographic:
          $ref: '#/components/schemas/Geometry'
          description: Geojson of the geographic geometry of the error
          nullable: true
        information:
          description: Information about the error (check schema documentation for more details)
          properties:
            error_type:
              $ref: '#/components/schemas/InfraErrorType'
            field:
              type: string
            is_warning:
              type: boolean
            obj_id:
              type: string
            obj_type:
              enum:
              - TrackSection
              - Signal
              - BufferStop
              - Detector
              - Switch
              - Route
              type: string
          required:
          - obj_id
          - obj_type
          - error_type
          - is_warning
          type: object
        schematic:
          description: Geojson of the schematic geometry of the error
          nullable: true
          type: object
      required:
      - information
      type: object
    InfraErrorType:
      description: Type of the infra error
      enum:
      - duplicated_group
      - empty_object
      - invalid_group
      - invalid_reference
      - invalid_route
      - invalid_switch_ports
      - missing_route
      - missing_buffer_stop
      - object_out_of_path
      - odd_buffer_stop_location
      - out_of_range
      - overlapping_speed_sections
      - overlapping_switches
      - overlapping_catenaries
      - unknown_port_name
      - unused_port
      type: string
    InternalError:
      properties:
        context:
          additionalProperties: {}
          type: object
        message:
          type: string
        status:
          format: int32
          maximum: 599
          minimum: 100
          type: integer
        type:
          type: string
      required:
      - type
      - context
      - message
      type: object
    LevelValues:
      items:
        type: string
      type: array
    LightEffortCurves:
      properties:
        default_mode:
          type: string
        modes:
          additionalProperties:
            $ref: '#/components/schemas/LightModeEffortCurves'
          type: object
      required:
      - modes
      - default_mode
      type: object
    LightElectricalProfileSet:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    LightModeEffortCurves:
      properties:
        is_electric:
          type: boolean
      required:
      - is_electric
      type: object
    LightRollingStock:
      properties:
        base_power_class:
          nullable: true
          type: string
        comfort_acceleration:
          format: double
          type: number
        effort_curves:
          $ref: '#/components/schemas/LightEffortCurves'
        energy_sources:
          items:
            $ref: '#/components/schemas/EnergySource'
          type: array
        features:
          items:
            type: string
          type: array
        gamma:
          $ref: '#/components/schemas/Gamma'
        id:
          format: int64
          type: integer
        inertia_coefficient:
          format: double
          type: number
        length:
          format: double
          type: number
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        locked:
          type: boolean
        mass:
          format: double
          type: number
        max_speed:
          format: double
          type: number
        metadata:
          $ref: '#/components/schemas/RollingStockMetadata'
        name:
          type: string
        power_restrictions:
          additionalProperties:
            type: string
          type: object
        railjson_version:
          type: string
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          format: double
          type: number
        startup_time:
          format: double
          type: number
      required:
      - id
      - name
      - railjson_version
      - locked
      - effort_curves
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - features
      - mass
      - rolling_resistance
      - loading_gauge
      - metadata
      - power_restrictions
      - energy_sources
      type: object
    LightRollingStockWithLiveries:
      allOf:
      - $ref: '#/components/schemas/LightRollingStock'
      - properties:
          liveries:
            items:
              $ref: '#/components/schemas/RollingStockLiveryMetadata'
            type: array
        required:
        - liveries
        type: object
    LightTrainSchedule:
      description: Returns the timetable with the main information about a train
      properties:
        departure_time:
          format: double
          type: number
        id:
          format: int64
          type: integer
        train_name:
          type: string
        train_path:
          format: int64
          type: integer
      required:
      - id
      - train_name
      - departure_time
      - train_path
      type: object
    LineString:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Point3D'
          type: array
        type:
          enum:
          - LineString
          type: string
      required:
      - type
      - coordinates
      type: object
    LoadingGaugeType:
      enum:
      - G1
      - G2
      - GA
      - GB
      - GB1
      - GC
      - FR3.3
      - FR3.3/GB/G2
      - GLOTT
      type: string
    MechanicalEnergyConsumedBaseEco:
      properties:
        base:
          format: double
          type: number
        eco:
          format: double
          nullable: true
          type: number
      required:
      - base
      type: object
    ModeEffortCurves:
      properties:
        curves:
          items:
            $ref: '#/components/schemas/ConditionalEffortCurve'
          type: array
        default_curve:
          $ref: '#/components/schemas/EffortCurve'
        is_electric:
          type: boolean
      required:
      - curves
      - default_curve
      - is_electric
      type: object
    MultiLineString:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/Point3D'
            type: array
          type: array
        type:
          enum:
          - MultiLineString
          type: string
      required:
      - type
      - coordinates
      type: object
    MultiPoint:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Point3D'
          type: array
        type:
          enum:
          - MultiPoint
          type: string
      required:
      - type
      - coordinates
      type: object
    MultiPolygon:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            items:
              items:
                $ref: '#/components/schemas/Point3D'
              type: array
            type: array
          type: array
        type:
          enum:
          - MultiPolygon
          type: string
      required:
      - type
      - coordinates
      type: object
    Neutral:
      properties:
        lower_pantograph:
          type: boolean
        object_type:
          enum:
          - Neutral
          type: string
      required:
      - lower_pantograph
      - object_type
    NewDocumentResponse:
      properties:
        document_key:
          format: int64
          type: integer
      required:
      - document_key
      type: object
    NonElectrified:
      properties:
        object_type:
          enum:
          - NonElectrified
          type: string
      required:
      - object_type
    ObjectType:
      description: Type of the object
      enum:
      - TrackSection
      - Signal
      - SpeedSection
      - Detector
      - Switch
      - SwitchType
      - BufferStop
      - Route
      - OperationalPoint
      - Catenary
      type: string
    Operation:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/RailjsonObject'
        - properties:
            operation_type:
              enum:
              - CREATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/UpdateOperation'
        - properties:
            operation_type:
              enum:
              - UPDATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/DeleteOperation'
        - properties:
            operation_type:
              enum:
              - DELETE
              type: string
          required:
          - operation_type
          type: object
    OperationObject:
      properties:
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        operation_type:
          enum:
          - CREATE
          - UPDATE
          type: string
        railjson:
          $ref: '#/components/schemas/Railjson'
      required:
      - operation_type
      - obj_type
      - railjson
    OperationResult:
      oneOf:
      - $ref: '#/components/schemas/DeleteOperation'
      - $ref: '#/components/schemas/OperationObject'
    Ordering:
      enum:
      - NameAsc
      - NameDesc
      - CreationDateAsc
      - CreationDateDesc
      - LastModifiedDesc
      - LastModifiedAsc
      type: string
    PaginatedResponseOfLightRollingStockWithLiveries:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/LightRollingStockWithLiveries'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfProjectWithStudies:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/ProjectWithStudies'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfScenarioWithCountTrains:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/ScenarioWithCountTrains'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedResponseOfStudyWithScenarios:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/StudyWithScenarios'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    Patch:
      description: A JSONPatch document as defined by RFC 6902
      properties:
        from:
          description: A string containing a JSON Pointer value.
          type: string
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          type: string
        path:
          description: A JSON-Pointer
          type: string
        value:
          description: The value to be used within the operations.
          type: object
      required:
      - op
      - path
    Patches:
      description: A list of Patch
      items:
        $ref: '#/components/schemas/Patch'
      type: array
    Path:
      properties:
        created:
          format: date-time
          type: string
        curves:
          description: Curves on the path
          items:
            properties:
              position:
                format: float
                type: number
              radius:
                format: float
                type: number
            required:
            - radius
            - position
            type: object
          type: array
        geographic:
          $ref: '#/components/schemas/GeoJsonObject'
        id:
          type: integer
        length:
          description: Length of the path
          format: float
          type: number
        owner:
          format: uuid
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonObject'
        slopes:
          description: Slopes on the path
          items:
            properties:
              gradient:
                format: float
                type: number
              position:
                format: float
                type: number
            required:
            - gradient
            - position
            type: object
          type: array
        steps:
          items:
            $ref: '#/components/schemas/PathStep'
          type: array
      required:
      - id
      - owner
      - created
      - length
      - geographic
      - schematic
      - slopes
      - curves
      - steps
    PathQuery:
      properties:
        infra:
          type: number
        rolling_stocks:
          description: List of rolling stocks that must be able to use this path
          items:
            type: integer
          type: array
        steps:
          items:
            properties:
              duration:
                format: float
                type: number
              waypoints:
                items:
                  $ref: '#/components/schemas/PathWaypoint'
                type: array
            required:
            - duration
            - waypoints
            type: object
          minItems: 2
          type: array
      required:
      - infra
      - steps
      - rolling_stocks
      type: object
    PathStep:
      properties:
        duration:
          format: float
          type: number
        geo:
          $ref: '#/components/schemas/GeoJsonPosition'
        id:
          type: string
        location:
          $ref: '#/components/schemas/TrackSectionLocation'
        name:
          type: string
        path_offset:
          description: Offset of the step in the path
          format: float
          type: number
        sch:
          $ref: '#/components/schemas/GeoJsonPosition'
        suggestion:
          type: boolean
      required:
      - suggestion
      - duration
      - path_offset
      - location
      - sch
      - geo
      type: object
    PathWaypoint:
      properties:
        geo_coordinate:
          items:
            format: float
            type: number
          maxItems: 2
          minItems: 2
          type: array
        offset:
          type: number
        track_section:
          description: track section ID of the waypoint
          type: string
      required:
      - track_section
      - geo_cordinate
      type: object
    Point:
      description: GeoJSon geometry
      properties:
        coordinates:
          $ref: '#/components/schemas/Point3D'
        type:
          enum:
          - Point
          type: string
      required:
      - type
      - coordinates
      type: object
    Point3D:
      description: Point in 3D space
      items:
        type: number
      maxItems: 3
      minItems: 2
      type: array
    Polygon:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/Point3D'
            type: array
          type: array
        type:
          enum:
          - Polygon
          type: string
      required:
      - type
      - coordinates
      type: object
    PowerRestriction:
      properties:
        power_restriction:
          type: string
      required:
      - power_restriction
      type: object
    PowerRestrictionRange:
      description: A range along the train path where a power restriction is applied.
      example:
        begin_position: 0.0
        end_position: 1000.0
        power_restriction_code: C1US
      properties:
        begin_position:
          description: Offset from the start of the path, in meters.
          format: float
          type: number
        end_position:
          description: Offset from the start of the path, in meters.
          format: float
          type: number
        power_restriction_code:
          description: The power restriction code to apply.
          type: string
      required:
      - begin_position
      - end_position
      - power_restriction_code
      type: object
    PowerRestrictionRangeItem:
      properties:
        code:
          type: string
        handled:
          type: boolean
        start:
          format: double
          type: number
        stop:
          format: double
          type: number
      required:
      - start
      - stop
      - code
      - handled
    ProfilesOnPathResponse:
      description: |-
        A list of ranges associated to electrical profile values. When a profile overlapping another is found,
        a warning is added to the list
      properties:
        electrical_profile_ranges:
          items:
            $ref: '#/components/schemas/RangedValue'
          type: array
        warnings:
          items:
            $ref: '#/components/schemas/InternalError'
          type: array
      required:
      - electrical_profile_ranges
      - warnings
      type: object
    Project:
      properties:
        budget:
          format: int32
          type: integer
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        funders:
          type: string
        id:
          format: int64
          type: integer
        image:
          format: int64
          nullable: true
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        objectives:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - name
      - objectives
      - description
      - funders
      - budget
      - creation_date
      - last_modification
      - tags
      type: object
    ProjectCreateForm:
      description: Creation form for a project
      properties:
        budget:
          format: int32
          type: integer
        description:
          maxLength: 1024
          type: string
        funders:
          maxLength: 1024
          type: string
        image:
          description: The id of the image document
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 128
          type: string
        objectives:
          maxLength: 4096
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - name
      type: object
    ProjectPatchForm:
      description: Patch form for a project
      properties:
        budget:
          format: int32
          nullable: true
          type: integer
        description:
          maxLength: 1024
          nullable: true
          type: string
        funders:
          maxLength: 1024
          nullable: true
          type: string
        image:
          description: The id of the image document
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 128
          nullable: true
          type: string
        objectives:
          maxLength: 4096
          nullable: true
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          nullable: true
          type: array
      type: object
    ProjectWithStudies:
      allOf:
      - $ref: '#/components/schemas/Project'
      - properties:
          studies_count:
            format: int64
            type: integer
        required:
        - studies_count
        type: object
    Railjson:
      additionalProperties: true
      description: This field follows railjson format
      example:
        curves: []
        geo:
          coordinates:
          - - 1.0
            - 41.0
          - - 2.0
            - 42.0
          type: LineString
        id: bd840b06-84ba-4566-98c1-ccf0196c5f16
        length: 1000
        line_code: 1
        line_name: my line
        navigability: BOTH
        sch:
          coordinates:
          - - 1.0
            - 41.0
          - - 2.0
            - 42.0
          type: LineString
        slopes:
        - begin: 250
          end: 500
          gradient: -1
        track_name: track name
        track_number: 1
      properties:
        id:
          type: string
      required:
      - id
      type: object
    RailjsonFile:
      properties:
        buffer_stops:
          type: array
        catenaries:
          type: array
        detectors:
          type: array
        operational_points:
          type: array
        routes:
          type: array
        signals:
          type: array
        speed_sections:
          type: array
        switch_types:
          type: array
        switches:
          type: array
        track_sections:
          type: array
        version:
          type: string
    RailjsonObject:
      properties:
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        operation_type:
          enum:
          - CREATE
          type: string
        railjson:
          $ref: '#/components/schemas/Railjson'
      required:
      - operation_type
      - obj_type
      - railjson
    RangeAllowance:
      properties:
        begin_position:
          format: double
          type: number
        end_position:
          format: double
          type: number
        value:
          $ref: '#/components/schemas/AllowanceValue'
      required:
      - begin_position
      - end_position
      - value
      type: object
    RangedValue:
      description: A struct to represent range maps in responses
      properties:
        begin:
          example: 0.0
          format: double
          type: number
        end:
          example: 10.0
          format: double
          type: number
        value:
          example: '25000'
          type: string
      required:
      - begin
      - end
      - value
      type: object
    RefillLaw:
      description: physical law defining how the storage can be refilled
      properties:
        soc_ref:
          format: double
          maximum: 1
          minimum: 0
          type: number
        tau:
          format: double
          minimum: 0
          type: number
      required:
      - tau
      - soc_ref
      type: object
    RollingResistance:
      properties:
        A:
          format: double
          type: number
        B:
          format: double
          type: number
        C:
          format: double
          type: number
        type:
          type: string
      required:
      - type
      - A
      - B
      - C
      type: object
    RollingStock:
      allOf:
      - $ref: '#/components/schemas/RollingStockCommon'
      - properties:
          id:
            format: int64
            type: integer
          locked:
            description: Whether the rolling stock can be edited/deleted or not.
            type: boolean
          metadata:
            $ref: '#/components/schemas/RollingStockMetadata'
          railjson_version:
            type: string
        required:
        - id
        - railjson_version
        - locked
        - metadata
        type: object
    RollingStockComfortType:
      enum:
      - STANDARD
      - AC
      - HEATING
      type: string
    RollingStockCommon:
      properties:
        base_power_class:
          example: '5'
          nullable: true
          type: string
        comfort_acceleration:
          format: double
          type: number
        effort_curves:
          $ref: '#/components/schemas/EffortCurves'
        electrical_power_startup_time:
          description: The time the train takes before actually using electrical power (in seconds). Is null if the train is not electric.
          example: 5.0
          format: double
          nullable: true
          type: number
        energy_sources:
          items:
            $ref: '#/components/schemas/EnergySource'
          type: array
        features:
          items:
            type: string
          type: array
        gamma:
          $ref: '#/components/schemas/Gamma'
        inertia_coefficient:
          format: double
          type: number
        length:
          format: double
          type: number
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        mass:
          format: double
          type: number
        max_speed:
          format: double
          type: number
        name:
          type: string
        power_restrictions:
          additionalProperties:
            type: string
          description: Mapping of power restriction code to power class
          type: object
        raise_pantograph_time:
          description: The time it takes to raise this train's pantograph in seconds. Is null if the train is not electric.
          example: 15.0
          format: double
          nullable: true
          type: number
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          format: double
          type: number
        startup_time:
          format: double
          type: number
      required:
      - name
      - effort_curves
      - base_power_class
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - features
      - mass
      - rolling_resistance
      - loading_gauge
      - power_restrictions
      type: object
    RollingStockError:
      oneOf:
      - enum:
        - CannotReadImage
        type: string
      - enum:
        - CannotCreateCompoundImage
        type: string
      - properties:
          NotFound:
            properties:
              rolling_stock_id:
                format: int64
                type: integer
            required:
            - rolling_stock_id
            type: object
        required:
        - NotFound
        type: object
      - properties:
          NameAlreadyUsed:
            properties:
              name:
                type: string
            required:
            - name
            type: object
        required:
        - NameAlreadyUsed
        type: object
      - properties:
          RollingStockIsLocked:
            properties:
              rolling_stock_id:
                format: int64
                type: integer
            required:
            - rolling_stock_id
            type: object
        required:
        - RollingStockIsLocked
        type: object
      - properties:
          RollingStockIsUsed:
            properties:
              rolling_stock_id:
                format: int64
                type: integer
              usage:
                items:
                  $ref: '#/components/schemas/TrainScheduleScenarioStudyProject'
                type: array
            required:
            - rolling_stock_id
            - usage
            type: object
        required:
        - RollingStockIsUsed
        type: object
      - enum:
        - BasePowerClassEmpty
        type: string
    RollingStockForm:
      allOf:
      - $ref: '#/components/schemas/RollingStockCommon'
      - properties:
          locked:
            nullable: true
            type: boolean
          metadata:
            $ref: '#/components/schemas/RollingStockMetadata'
        required:
        - metadata
        type: object
    RollingStockLivery:
      properties:
        compound_image_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
        rolling_stock_id:
          format: int64
          type: integer
      required:
      - id
      - name
      - rolling_stock_id
      type: object
    RollingStockLiveryCreateForm:
      properties:
        images:
          items:
            format: binary
            type: string
          type: array
        name:
          type: string
      required:
      - name
      - images
      type: object
    RollingStockLiveryMetadata:
      properties:
        compound_image_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    RollingStockLockedUpdateForm:
      properties:
        locked:
          description: New locked value
          type: boolean
      required:
      - locked
      type: object
    RollingStockMetadata:
      properties:
        detail:
          type: string
        family:
          type: string
        grouping:
          type: string
        number:
          type: string
        reference:
          type: string
        series:
          type: string
        subseries:
          type: string
        type:
          type: string
        unit:
          type: string
      required:
      - detail
      - family
      - type
      - grouping
      - series
      - subseries
      - unit
      - number
      - reference
      type: object
    RollingStockWithLiveries:
      allOf:
      - $ref: '#/components/schemas/RollingStock'
      - properties:
          liveries:
            items:
              $ref: '#/components/schemas/RollingStockLiveryMetadata'
            type: array
        required:
        - liveries
        type: object
    RouteTrackRangesCantComputePathError:
      description: Error when the route path couldn't be computed
      properties:
        type:
          enum:
          - CantComputePath
          type: string
      required:
      - type
      type: object
    RouteTrackRangesComputed:
      description: Route track ranges successfully computed
      properties:
        track_ranges:
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
          type: array
        type:
          enum:
          - Computed
          type: string
      required:
      - type
      - track_ranges
      type: object
    RouteTrackRangesNotFoundError:
      description: Error when the route id couldn't be found
      properties:
        type:
          enum:
          - NotFound
          type: string
      required:
      - type
      type: object
    Scenario:
      properties:
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        electrical_profile_set_id:
          format: int64
          nullable: true
          type: integer
        id:
          format: int64
          type: integer
        infra_id:
          format: int64
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          format: int64
          type: integer
        tags:
          items:
            type: string
          type: array
        timetable_id:
          format: int64
          type: integer
      required:
      - id
      - name
      - description
      - creation_date
      - last_modification
      - tags
      - infra_id
      - timetable_id
      - study_id
      type: object
    ScenarioCreateForm:
      description: This structure is used by the post endpoint to create a scenario
      properties:
        description:
          type: string
        electrical_profile_set_id:
          format: int64
          nullable: true
          type: integer
        infra_id:
          format: int64
          type: integer
        name:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - name
      - infra_id
      type: object
    ScenarioPatchForm:
      description: This structure is used by the patch endpoint to patch a study
      properties:
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ScenarioWithCountTrains:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - properties:
          infra_name:
            type: string
          trains_count:
            format: int64
            type: integer
        required:
        - trains_count
        - infra_name
        type: object
    ScenarioWithDetails:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - properties:
          electrical_profile_set_name:
            nullable: true
            type: string
          infra_name:
            type: string
          train_schedules:
            items:
              $ref: '#/components/schemas/LightTrainSchedule'
            type: array
          trains_count:
            format: int64
            type: integer
        required:
        - infra_name
        - train_schedules
        - trains_count
        type: object
    ScheduledPoint:
      properties:
        path_offset:
          format: double
          type: number
        time:
          format: double
          type: number
      required:
      - path_offset
      - time
      type: object
    SearchPayload:
      description: The payload of a search request
      example:
        object: operationalpoint
        query:
        - and
        - - =
          - - infra_id
          - 2
        - - search
          - - name
          - plop
      properties:
        dry:
          description: Whether to return the SQL query instead of executing it
          type: boolean
        object:
          description: The object kind to query - run `editoast search list` to get all possible values
          type: string
        query:
          $ref: '#/components/schemas/SearchQuery'
      required:
      - object
      - query
      type: object
    SearchQuery:
      description: A search query
      example:
      - and
      - - =
        - - infra_id
        - 2
      - - search
        - - name
        - plop
      oneOf:
      - type: boolean
      - format: double
        type: number
      - format: int64
        type: integer
      - type: string
      - items:
          allOf:
          - $ref: '#/components/schemas/SearchQuery'
          nullable: true
        type: array
    SearchResultItem:
      description: A search result item that depends on the query's `object`
      oneOf:
      - $ref: '#/components/schemas/SearchResultItemTrack'
      - $ref: '#/components/schemas/SearchResultItemOperationalPoint'
      - $ref: '#/components/schemas/SearchResultItemSignal'
      - $ref: '#/components/schemas/SearchResultItemProject'
      - $ref: '#/components/schemas/SearchResultItemStudy'
      - $ref: '#/components/schemas/SearchResultItemScenario'
    SearchResultItemOperationalPoint:
      description: A search result item for a query with `object = "operationalpoint"`
      properties:
        ch:
          type: string
        geographic:
          $ref: '#/components/schemas/GeoJsonPoint'
        infra_id:
          format: int64
          type: integer
        name:
          type: string
        obj_id:
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonPoint'
        track_sections:
          items:
            properties:
              position:
                format: double
                type: number
              track:
                type: string
            required:
            - track
            - position
            type: object
          type: array
        trigram:
          type: string
        uic:
          format: int64
          type: integer
      required:
      - obj_id
      - infra_id
      - uic
      - name
      - trigram
      - ch
      - geographic
      - schematic
      - track_sections
      type: object
    SearchResultItemProject:
      description: A search result item for a query with `object = "project"`
      properties:
        description:
          type: string
        id:
          format: int64
          minimum: 0
          type: integer
        image:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        studies_count:
          format: int64
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - image
      - name
      - studies_count
      - description
      - last_modification
      - tags
      type: object
    SearchResultItemScenario:
      description: A search result item for a query with `object = "scenario"`
      properties:
        description:
          type: string
        electrical_profile_set_id:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        id:
          format: int64
          minimum: 0
          type: integer
        infra_id:
          format: int64
          minimum: 0
          type: integer
        infra_name:
          type: string
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          format: int64
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
        trains_count:
          format: int64
          minimum: 0
          type: integer
      required:
      - id
      - study_id
      - name
      - electrical_profile_set_id
      - infra_id
      - infra_name
      - trains_count
      - description
      - last_modification
      - tags
      type: object
    SearchResultItemSignal:
      description: A search result item for a query with `object = "signal"`
      properties:
        geographic:
          $ref: '#/components/schemas/GeoJsonPoint'
        infra_id:
          format: int64
          type: integer
        label:
          type: string
        line_code:
          format: int64
          minimum: 0
          type: integer
        line_name:
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonPoint'
        settings:
          items:
            type: string
          type: array
        signaling_systems:
          items:
            type: string
          type: array
        sprite:
          nullable: true
          type: string
        sprite_signaling_system:
          nullable: true
          type: string
      required:
      - infra_id
      - label
      - signaling_systems
      - settings
      - line_code
      - line_name
      - geographic
      - schematic
      type: object
    SearchResultItemStudy:
      description: A search result item for a query with `object = "study"`
      properties:
        description:
          type: string
        id:
          format: int64
          minimum: 0
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        project_id:
          format: int64
          minimum: 0
          type: integer
        scenarios_count:
          format: int64
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - project_id
      - name
      - scenarios_count
      - description
      - last_modification
      - tags
      type: object
    SearchResultItemTrack:
      description: A search result item for a query with `object = "track"`
      properties:
        infra_id:
          format: int64
          type: integer
        line_code:
          format: int64
          type: integer
        line_name:
          type: string
      required:
      - infra_id
      - line_name
      - line_code
      type: object
    SimulationReport:
      properties:
        base:
          $ref: '#/components/schemas/SimulationReportByTrain'
        curves:
          items:
            properties:
              position:
                type: number
              radius:
                type: number
            required:
            - position
            - radius
            type: object
          minItems: 2
          type: array
        eco:
          $ref: '#/components/schemas/SimulationReportByTrain'
        electrification_ranges:
          description: A list of ranges which should be contiguous and which describe the electrification on the path and if it is handled by the train
          items:
            $ref: '#/components/schemas/ElectrificationRange'
          minItems: 1
          type: array
        id:
          type: integer
        labels:
          items:
            type: string
          type: array
        name:
          type: string
        path:
          description: id of the path used for projection
          type: integer
        power_restriction_ranges:
          description: The list of ranges where power restrictions are applied
          items:
            $ref: '#/components/schemas/PowerRestrictionRangeItem'
          type: array
        slopes:
          items:
            properties:
              gradient:
                type: number
              position:
                type: number
            required:
            - position
            - gradient
            type: object
          minItems: 2
          type: array
        speed_limit_tags:
          type: string
        vmax:
          items:
            properties:
              position:
                type: number
              speed:
                type: number
            required:
            - position
            - speed
            type: object
          minItems: 2
          type: array
      required:
      - id
      - name
      - labels
      - path
      - vmax
      - slopes
      - curves
      - base
      - electrification_ranges
      - power_restriction_ranges
    SimulationReportByTrain:
      properties:
        head_positions:
          items:
            items:
              $ref: '#/components/schemas/SpaceTimePosition'
            minItems: 1
            type: array
          minItems: 1
          type: array
        mechanical_energy_consumed:
          format: float
          type: number
        route_aspects:
          items:
            properties:
              aspect_label:
                description: label of the new signal aspect
                type: string
              blinking:
                description: true if the signal is blinking
                type: boolean
              color:
                description: color of the aspect (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are blue)
                format: float
                type: number
              position_end:
                description: the route ends at this position on the train path
                format: float
                type: number
              position_start:
                description: the route starts at this position on the train path
                format: float
                type: number
              route_id:
                description: id of the affected route on the train path
                type: string
              signal_id:
                description: id of the updated signal
                type: string
              time_end:
                description: the aspect stops being displayed at this time
                format: float
                type: number
              time_start:
                description: the aspect starts being displayed at this time
                format: float
                type: number
            required:
            - signal_id
            - route_id
            - time_start
            - time_end
            - position_start
            - position_end
            - color
            - blinking
            - aspect_label
            type: object
          type: array
        signals:
          items:
            properties:
              aspects:
                items:
                  type: string
                type: array
              geo_position:
                items:
                  format: float
                  type: number
                maxItems: 2
                minItems: 2
                type: array
              schema_position:
                items:
                  format: float
                  type: number
                maxItems: 2
                minItems: 2
                type: array
              signal_id:
                type: integer
            required:
            - signal_id
            - aspects
            - geo_position
            - schema_position
            type: object
          type: array
        speeds:
          items:
            allOf:
            - $ref: '#/components/schemas/SpaceTimePosition'
            - properties:
                speed:
                  format: float
                  type: number
              required:
              - speed
              type: object
          minItems: 1
          type: array
        stops:
          items:
            properties:
              duration:
                format: float
                type: number
              id:
                description: Can be null if it's not an operational point
                nullable: true
                type: string
              line_code:
                type: number
              line_name:
                type: string
              name:
                description: Can be 'Unknown' if it's not an operational point
                type: string
              position:
                format: float
                type: number
              time:
                format: float
                type: number
              track_name:
                type: string
              track_number:
                type: number
            required:
            - id
            - name
            - time
            - position
            - duration
            - line_code
            - track_number
            - line_name
            - track_name
            type: object
          type: array
        tail_positions:
          items:
            items:
              $ref: '#/components/schemas/SpaceTimePosition'
            minItems: 1
            type: array
          minItems: 1
          type: array
      required:
      - speeds
      - head_positions
      - tail_positions
      - stops
      - route_aspects
      - signals
      - mechanical_energy_consumed
    SingleSimulationRequest:
      properties:
        allowances:
          default: []
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/Comfort'
        electrical_profile_set_id:
          type: integer
        initial_speed:
          default: 0
          format: float
          type: number
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          type: integer
        power_restriction_ranges:
          description: A list of ranges along the train path where power restrictions apply.
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          type: integer
        scheduled_points:
          default: []
          items:
            properties:
              path_offset:
                description: Offset in meters from the start of the path at which the train must be.
                format: float
                type: number
              time:
                description: Time in seconds (elapsed since the train's departure) at which the train must be.
                format: float
                type: number
            required:
            - path_offset
            - time
            type: object
          type: array
        stops:
          default: []
          items:
            properties:
              duration:
                format: float
                type: number
              location:
                $ref: '#/components/schemas/TrackLocation'
              position:
                format: float
                type: number
            type: object
          type: array
        tag:
          type: string
      required:
      - rolling_stock_id
      - path_id
      type: object
    SingleSimulationResponse:
      properties:
        base_simulation:
          $ref: '#/components/schemas/SimulationReportByTrain'
        eco_simulation:
          allOf:
          - $ref: '#/components/schemas/SimulationReportByTrain'
          nullable: true
        electrification_ranges:
          description: A list of ranges which should be contiguous and which describe the electrification on the path and if it is handled by the train
          items:
            $ref: '#/components/schemas/ElectrificationRange'
          minItems: 1
          type: array
        power_restriction_ranges:
          description: The list of ranges where power restrictions are applied
          items:
            $ref: '#/components/schemas/PowerRestrictionRangeItem'
          type: array
        speed_limits:
          items:
            properties:
              position:
                type: number
              speed:
                type: number
            required:
            - position
            - speed
            type: object
          minItems: 2
          type: array
        warnings:
          items:
            type: string
          type: array
      required:
      - base_simulation
      - eco_simulation
      - speed_limits
      - warnings
      - electrification_ranges
      - power_restriction_ranges
      type: object
    SpaceTimePosition:
      properties:
        position:
          format: float
          type: number
        time:
          format: float
          type: number
      required:
      - time
      - position
      - speed
      type: object
    SpeedDependantPower:
      description: power-speed curve (in an energy source)
      properties:
        powers:
          items:
            format: double
            type: number
          type: array
        speeds:
          items:
            format: double
            type: number
          type: array
      required:
      - speeds
      - powers
      type: object
    StandardAllowance:
      properties:
        capacity_speed_limit:
          format: double
          type: number
        default_value:
          $ref: '#/components/schemas/AllowanceValue'
        distribution:
          $ref: '#/components/schemas/AllowanceDistribution'
        ranges:
          items:
            $ref: '#/components/schemas/RangeAllowance'
          type: array
      required:
      - default_value
      - ranges
      - distribution
      type: object
    Study:
      properties:
        actual_end_date:
          format: date
          nullable: true
          type: string
        budget:
          format: int32
          type: integer
        business_code:
          type: string
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        expected_end_date:
          format: date
          nullable: true
          type: string
        id:
          format: int64
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        project_id:
          format: int64
          type: integer
        service_code:
          type: string
        start_date:
          format: date
          nullable: true
          type: string
        state:
          type: string
        study_type:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - name
      - description
      - business_code
      - service_code
      - creation_date
      - last_modification
      - budget
      - tags
      - state
      - study_type
      - project_id
      type: object
    StudyCreateForm:
      description: This structure is used by the post endpoint to create a study
      properties:
        actual_end_date:
          format: date
          nullable: true
          type: string
        budget:
          format: int32
          type: integer
        business_code:
          type: string
        description:
          type: string
        expected_end_date:
          format: date
          nullable: true
          type: string
        name:
          type: string
        service_code:
          type: string
        start_date:
          format: date
          nullable: true
          type: string
        state:
          type: string
        study_type:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - name
      type: object
    StudyPatchForm:
      description: This structure is used by the patch endpoint to patch a study
      properties:
        actual_end_date:
          format: date
          nullable: true
          type: string
        budget:
          format: int32
          nullable: true
          type: integer
        business_code:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        expected_end_date:
          format: date
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        service_code:
          nullable: true
          type: string
        start_date:
          format: date
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        study_type:
          nullable: true
          type: string
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    StudyWithScenarios:
      allOf:
      - $ref: '#/components/schemas/Study'
      - properties:
          scenarios_count:
            format: int64
            type: integer
        required:
        - scenarios_count
        type: object
    Timetable:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    TimetableImportItem:
      properties:
        path:
          items:
            $ref: '#/components/schemas/TimetableImportPathStep'
          type: array
        rolling_stock:
          example: 2TGV2N2
          type: string
        trains:
          items:
            $ref: '#/components/schemas/TimetableImportTrain'
          type: array
      required:
      - rolling_stock
      - path
      - trains
      type: object
    TimetableImportPathLocation:
      oneOf:
      - properties:
          offset:
            format: double
            type: number
          track_section:
            type: string
          type:
            enum:
            - track_offset
            type: string
        required:
        - track_section
        - offset
        - type
        type: object
      - properties:
          type:
            enum:
            - operational_point
            type: string
          uic:
            format: int64
            type: integer
        required:
        - uic
        - type
        type: object
    TimetableImportPathSchedule:
      properties:
        arrival_time:
          format: date-time
          type: string
        departure_time:
          format: date-time
          type: string
      required:
      - arrival_time
      - departure_time
      type: object
    TimetableImportPathStep:
      properties:
        location:
          $ref: '#/components/schemas/TimetableImportPathLocation'
        schedule:
          additionalProperties:
            $ref: '#/components/schemas/TimetableImportPathSchedule'
          example:
            '7015':
              arrival_time: 2023-08-17T09:46:00+02:00
              departure_time: 2023-08-17T09:56:00+02:00
          type: object
      required:
      - location
      type: object
    TimetableImportTrain:
      properties:
        departure_time:
          example: 2023-08-17T08:46:00+02:00
          format: date-time
          type: string
        name:
          example: '7015'
          type: string
      required:
      - name
      - departure_time
      type: object
    TimetableWithSchedulesDetails:
      allOf:
      - $ref: '#/components/schemas/Timetable'
      - properties:
          train_schedule_summaries:
            items:
              $ref: '#/components/schemas/TrainScheduleSummary'
            type: array
        required:
        - train_schedule_summaries
        type: object
    TrackLocation:
      description: A track location (track section and offset)
      properties:
        offset:
          description: The offset on the track section
          example: 42.0
          format: float
          type: number
        track:
          description: The track section ID
          example: 61205924-6667-11e3-81ff-01f464e0362d
          type: string
      type: object
    TrackRange:
      properties:
        begin:
          format: double
          type: number
        end:
          format: double
          type: number
        track:
          example: 01234567-89ab-cdef-0123-456789abcdef
          type: string
      required:
      - track
      - begin
      - end
      type: object
    TrackSectionLocation:
      description: A track location (track section and offset)
      properties:
        offset:
          description: The offset on the track section
          example: 42.0
          format: float
          type: number
        track_section:
          description: The track section ID
          example: 61205924-6667-11e3-81ff-01f464e0362d
          type: string
      required:
      - track_section
      - offset
      type: object
    TrainSchedule:
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/RollingStockComfortType'
        departure_time:
          format: double
          type: number
        id:
          format: int64
          type: integer
        initial_speed:
          format: double
          type: number
        labels:
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          format: int64
          type: integer
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          format: int64
          type: integer
        scheduled_points:
          items:
            $ref: '#/components/schemas/ScheduledPoint'
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        timetable_id:
          format: int64
          type: integer
        train_name:
          type: string
      required:
      - id
      - train_name
      - labels
      - departure_time
      - initial_speed
      - allowances
      - comfort
      - speed_limit_tags
      - power_restriction_ranges
      - options
      - path_id
      - rolling_stock_id
      - timetable_id
      - scheduled_points
      type: object
    TrainScheduleBatchItem:
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/RollingStockComfortType'
        departure_time:
          format: double
          type: number
        initial_speed:
          format: double
          type: number
        labels:
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          format: int64
          type: integer
        scheduled_points:
          items:
            $ref: '#/components/schemas/ScheduledPoint'
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        train_name:
          type: string
      required:
      - train_name
      - departure_time
      - initial_speed
      - rolling_stock_id
      type: object
    TrainScheduleOptions:
      description: Options for the standalone simulation
      properties:
        ignore_electrical_profiles:
          description: Whether to ignore the electrical profile of the train for simulation
          nullable: true
          type: boolean
      type: object
    TrainSchedulePatch:
      description: A patch of a train schedule
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          nullable: true
          type: array
        comfort:
          allOf:
          - $ref: '#/components/schemas/RollingStockComfortType'
          nullable: true
        departure_time:
          format: double
          nullable: true
          type: number
        id:
          format: int64
          type: integer
        initial_speed:
          format: double
          nullable: true
          type: number
        labels:
          items:
            type: string
          nullable: true
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          format: int64
          nullable: true
          type: integer
        power_restriction_ranges:
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          format: int64
          nullable: true
          type: integer
        scheduled_points:
          items:
            $ref: '#/components/schemas/ScheduledPoint'
          nullable: true
          type: array
        speed_limit_tags:
          nullable: true
          type: string
        train_name:
          nullable: true
          type: string
      required:
      - id
      type: object
    TrainScheduleScenarioStudyProject:
      properties:
        project_id:
          format: int64
          type: integer
        project_name:
          type: string
        scenario_id:
          format: int64
          type: integer
        scenario_name:
          type: string
        study_id:
          format: int64
          type: integer
        study_name:
          type: string
        train_name:
          type: string
        train_schedule_id:
          format: int64
          type: integer
      required:
      - train_schedule_id
      - train_name
      - project_id
      - project_name
      - study_id
      - study_name
      - scenario_id
      - scenario_name
      type: object
    TrainScheduleSummary:
      allOf:
      - $ref: '#/components/schemas/TrainSchedule'
      - properties:
          arrival_time:
            format: double
            type: number
          invalid_reasons:
            items:
              $ref: '#/components/schemas/TrainScheduleValidation'
            type: array
          mechanical_energy_consumed:
            $ref: '#/components/schemas/MechanicalEnergyConsumedBaseEco'
          path_length:
            format: double
            type: number
          stops_count:
            format: int64
            type: integer
        required:
        - arrival_time
        - mechanical_energy_consumed
        - stops_count
        - path_length
        - invalid_reasons
        type: object
      description: Returns the timetable with the train's important route information (distance travelled, arrival time, etc.)
    TrainScheduleValidation:
      enum:
      - NewerRollingStock
      - NewerInfra
      type: string
    UpdateOperation:
      properties:
        obj_id:
          example: bd840b06-84ba-4566-98c1-ccf0196c5f16
          type: string
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        operation_type:
          enum:
          - UPDATE
          type: string
        railjson_patch:
          $ref: '#/components/schemas/Patches'
      required:
      - operation_type
      - obj_type
      - railjson_patch
    Version:
      properties:
        git_describe:
          nullable: true
          type: string
      required:
      - git_describe
      type: object
    Waypoint:
      items:
        properties:
          geo_coordinate:
            items:
              format: float
              type: number
            maxItems: 2
            minItems: 2
            type: array
          track_section:
            type: string
        type: object
      type: array
    Zone:
      properties:
        geo:
          $ref: '#/components/schemas/BoundingBox'
        sch:
          $ref: '#/components/schemas/BoundingBox'
      type: object
info:
  description: OSRD Edition service description
  title: OSRD Editoast
  version: 0.1.0
openapi: 3.0.2
paths:
  /documents/:
    post:
      description: Post a new document (content_type by header + binary data)
      parameters:
      - description: The document's content type
        in: header
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewDocumentResponse'
          description: The document was created
      summary: Post a new document (content_type by header + binary data)
      tags:
      - documents
  /documents/{document_key}/:
    delete:
      description: Delete an existing document
      parameters:
      - description: The document's key
        in: path
        name: document_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The document was deleted
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Document not found
      summary: Delete an existing document
      tags:
      - documents
    get:
      description: Returns a document of any type
      parameters:
      - description: The document's key
        in: path
        name: document_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The document's binary content
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Document not found
      summary: Returns a document of any type
      tags:
      - documents
  /electrical_profile_set/:
    get:
      description: Retrieve the list of ids and names of electrical profile sets available
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LightElectricalProfileSet'
                type: array
          description: The list of ids and names of electrical profile sets available
      summary: Retrieve the list of ids and names of electrical profile sets available
      tags:
      - electrical_profiles
    post:
      description: import a new electrical profile set
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricalProfileSetData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfileSet'
          description: The list of ids and names of electrical profile sets available
      summary: import a new electrical profile set
      tags:
      - electrical_profiles
  /electrical_profile_set/{electrical_profile_set_id}/:
    delete:
      description: Delete an electrical profile set
      parameters:
      - in: path
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The electrical profile was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested electrical profie was not found
      summary: Delete an electrical profile set
      tags:
      - electrical_profiles
    get:
      description: Return a specific set of electrical profiles
      parameters:
      - in: path
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfileSetData'
          description: The list of electrical profiles in the set
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested electrical profile set was not found
      summary: Return a specific set of electrical profiles
      tags:
      - electrical_profiles
  /electrical_profile_set/{electrical_profile_set_id}/level_order/:
    get:
      description: Return the electrical profile value order for this set
      parameters:
      - in: path
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                '1500':
                - A
                - B
                - C
                '25000':
                - '25000'
                - '22500'
                - '20000'
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/LevelValues'
                type: object
          description: A dictionary mapping catenary modes to a list of electrical profiles ordered by decreasing strength
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested electrical profile set was not found
      summary: Return the electrical profile value order for this set
      tags:
      - electrical_profiles
  /health/:
    get:
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Check if Editoast is running correctly
  /infra/:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          default: 1
          minimum: 1
          type: integer
      - description: Number of elements by page
        in: query
        name: page_size
        schema:
          default: 25
          maximum: 10000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: number
                  next: {}
                  previous: {}
                  results:
                    items:
                      $ref: '#/components/schemas/Infra'
                    type: array
                required:
                - count
                - next
                - previous
                type: object
          description: The infras list
      summary: Paginated list of all available infras
      tags:
      - infra
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Name of the infra to create
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
          description: The created infra
      summary: Create an infra
      tags:
      - infra
  /infra/railjson/:
    post:
      parameters:
      - description: Infra name
        in: query
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: generate_data
        schema:
          default: false
          description: whether the layer should be generated or no
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RailjsonFile'
        description: Railjson infra
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                type: object
          description: The imported infra id
      summary: Import an infra from railjson
      tags:
      - infra
  /infra/refresh/:
    post:
      parameters:
      - description: A list of infra ID
        in: query
        name: infras
        schema:
          default: []
          items:
            type: integer
          type: array
      - description: Force the refresh of the layers
        in: query
        name: force
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: integer
                type: array
          description: A list thats contains the ID of the infras that were refreshed*
      summary: Refresh the layers
      tags:
      - infra
  /infra/voltages/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - '750'
                - '1500'
                - '2500.5'
                items:
                  type: string
                type: array
          description: Voltages list
      summary: List all voltages of all infras
      tags:
      - infra
      - rolling_stock
  /infra/{id}/:
    delete:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Delete an infra and all entities linked to it
      tags:
      - infra
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
          description: Information about the retrieved infra
      summary: Retrieve a specific infra
      tags:
      - infra
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
        description: Operations to do on the infra
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationResult'
                type: array
          description: An array containing infos about the operations processed
      summary: Update/Create/Delete an object of the infra
      tags:
      - infra
    put:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        description: the name we want to give to the infra
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
          description: The updated infra
      summary: Update an infrastructure name
      tags:
      - infra
  /infra/{id}/attached/{track_id}/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Track ID
        in: path
        name: track_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    description: Object IDs
                    type: string
                  type: array
                example:
                  BufferStop: []
                  Detector:
                  - detector.0
                  Switch:
                  - switch.0
                  - switch.1
                type: object
          description: All objects attached to the given track (arranged by types)
      summary: Retrieve all objects attached to a given track
  /infra/{id}/clone/:
    post:
      parameters:
      - description: Infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: New infra name
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                type: object
          description: The duplicated infra id
      summary: Duplicate an infra
      tags:
      - infra
  /infra/{id}/errors/:
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: The page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: The number of item per page
        in: query
        name: page_size
        schema:
          default: 25
          minimum: 10
          type: integer
      - description: The type of error to filter on
        in: query
        name: error_type
        schema:
          $ref: '#/components/schemas/InfraErrorType'
      - description: errors and warnings that only part of a given object
        in: query
        name: object_id
        schema:
          type: string
      - description: Whether the response should include errors or warnings
        in: query
        name: level
        schema:
          default: all
          enum:
          - errors
          - warnings
          - all
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of elements
                    example: 1
                    type: integer
                  next:
                    description: The index of the following page (null if no more pages available)
                    example: null
                    nullable: true
                    type: integer
                  previous:
                    description: The index of the previous page (null if requesting the first page)
                    example: null
                    nullable: true
                    type: integer
                  results:
                    items:
                      $ref: '#/components/schemas/InfraError'
                    type: array
                type: object
          description: A paginated list of errors
      summary: Retrieve a paginated list of errors
      tags:
      - infra
  /infra/{id}/lines/{line_code}/bbox/:
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: a line code
        in: path
        name: line_code
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: The BBox of the line
      summary: Returns the BBoxes (geo and schematic) of a line
      tags:
      - infra
  /infra/{id}/load/:
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: No content
      summary: Load an infra if not loaded
      tags:
      - infra
  /infra/{id}/lock/:
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Lock an infra from edition
      tags:
      - infra
  /infra/{id}/objects/{object_type}/:
    post:
      parameters:
      - description: Infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: The type of the object
        in: path
        name: object_type
        required: true
        schema:
          $ref: '#/components/schemas/ObjectType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of object id's
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    geographic:
                      $ref: '#/components/schemas/Geometry'
                      description: object's geographic in geojson format
                    railjson:
                      $ref: '#/components/schemas/Railjson'
                      description: Object properties in railjson format
                    schematic:
                      $ref: '#/components/schemas/Geometry'
                      description: object's schematic in geojson format
                  required:
                  - railjson
                  - geographic
                  - schematic
                  type: object
                type: array
          description: No content
      summary: Retrieve a list of specific objects in railjson format
      tags:
      - infra
  /infra/{id}/pathfinding/:
    post:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Maximum number of paths to return
        in: query
        name: number
        schema:
          default: 5
          format: integer
          maximum: 5
          minimum: 1
          type: number
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ending:
                  $ref: '#/components/schemas/TrackLocation'
                starting:
                  allOf:
                  - $ref: '#/components/schemas/TrackLocation'
                  - properties:
                      direction:
                        $ref: '#/components/schemas/Direction'
                    type: object
              type: object
        description: Starting and ending track location
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    detectors:
                      items:
                        example: detector1
                        type: string
                      type: array
                    switches_directions:
                      additionalProperties:
                        type: string
                      example:
                        switch1: left
                        switch2: right
                      type: object
                    track_ranges:
                      items:
                        $ref: '#/components/schemas/DirectionalTrackRange'
                      minItems: 1
                      type: array
                  required:
                  - track_ranges
                  - detectors
                  - switches_directions
                  type: object
                type: array
          description: Paths, containing track ranges, detectors and switches with their directions. If no path is found, an empty list is returned.
      summary: Compute paths given starting and ending track location. Return shortest paths.
      tags:
      - infra
      - pathfinding
  /infra/{id}/railjson/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RailjsonFile'
          description: The infra in railjson format
      summary: Serialize an infra to railjson
      tags:
      - infra
  /infra/{id}/routes/track_ranges/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - in: query
        name: routes
        required: true
        schema:
          description: A list of routes seperated by comma
          example: route1,route2,route3
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                  - $ref: '#/components/schemas/RouteTrackRangesNotFoundError'
                  - $ref: '#/components/schemas/RouteTrackRangesCantComputePathError'
                  - $ref: '#/components/schemas/RouteTrackRangesComputed'
                type: array
          description: Foreach route, the track ranges through which it passes or an error
      summary: Compute the track ranges through which routes passes.
      tags:
      - infra
      - routes
  /infra/{id}/routes/{waypoint_type}/{waypoint_id}/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Type of the waypoint
        in: path
        name: waypoint_type
        required: true
        schema:
          enum:
          - Detector
          - BufferStop
          type: string
      - description: The waypoint id
        in: path
        name: waypoint_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ending:
                    example:
                    - route3
                    - route4
                    items:
                      type: string
                    type: array
                  starting:
                    example:
                    - route1
                    - route2
                    items:
                      type: string
                    type: array
                required:
                - starting
                - ending
                type: object
          description: All routes that starting and ending by the given waypoint
      summary: Retrieve all routes that starting and ending by the given waypoint (detector or buffer stop)
      tags:
      - infra
      - routes
  /infra/{id}/speed_limit_tags/:
    get:
      parameters:
      - description: Infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - freight
                - heavy_load
                items:
                  type: string
                type: array
          description: Tags list
      summary: List all speed limit tags
      tags:
      - infra
  /infra/{id}/switch_types/:
    get:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: A switch type following Railjson spec
                  example:
                    groups:
                      LEFT:
                        dst: LEFT
                        src: BASE
                      RIGHT:
                        dst: RIGHT
                        src: BASE
                    id: Point
                    ports:
                    - LEFT
                    - RIGHT
                    - BASE
                  type: object
                type: array
          description: A list of switch types
      summary: Retrieve a list of switch types
      tags:
      - infra
  /infra/{id}/unlock/:
    post:
      parameters:
      - description: infra id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Unlock an infra from edition
      tags:
      - infra
  /infra/{id}/voltages/:
    get:
      parameters:
      - description: Infra ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: include rolling stocks modes or not
        in: query
        name: include_rolling_stock_modes
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - '750'
                - '1500'
                - '2500.5'
                items:
                  type: string
                type: array
          description: Voltages list
      summary: List all voltages
      tags:
      - infra
  /infra/{infra_id}/auto_fixes/:
    get:
      description: Retrieve a list of operations to fix infra issues
      parameters:
      - description: The ID of the infra to fix
        in: path
        name: infra_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Operation'
                type: array
          description: The list of suggested operations
      summary: Retrieve a list of operations to fix infra issues
      tags:
      - infra
  /layers/layer/{layer_slug}/mvt/{view_slug}/:
    get:
      description: Returns layer view metadata to query tiles
      parameters:
      - in: query
        name: infra
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: layer_slug
        required: true
        schema:
          type: string
      - in: path
        name: view_slug
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  attribution:
                    type: string
                  maxzoom:
                    example: 15
                    format: int64
                    minimum: 0
                    type: integer
                  minzoom:
                    format: int64
                    minimum: 0
                    type: integer
                  name:
                    example: track_sections
                    type: string
                  promoteId:
                    type: object
                  scheme:
                    example: xyz
                    type: string
                  tiles:
                    example:
                    - http://localhost:7070/tile/track_sections/geo/{z}/{x}/{y}/?infra=1
                    items:
                      type: string
                    type: array
                  type:
                    type: string
                required:
                - type
                - name
                - promoteId
                - scheme
                - tiles
                - attribution
                - minzoom
                - maxzoom
                type: object
          description: Successful Response
      summary: Returns layer view metadata to query tiles
      tags:
      - layers
  /layers/tile/{layer_slug}/{view_slug}/{z}/{x}/{y}/:
    get:
      description: Mvt tile from the cache if possible, otherwise gets data from the database and caches it in redis
      parameters:
      - in: query
        name: infra
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: layer_slug
        required: true
        schema:
          type: string
      - in: path
        name: view_slug
        required: true
        schema:
          type: string
      - in: path
        name: x
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      - in: path
        name: y
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      - in: path
        name: z
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Mvt tile from the cache if possible, otherwise gets data from the database and caches it in redis
      tags:
      - layers
  /light_rolling_stock/:
    get:
      description: Paginated list of rolling stock with a lighter response
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfLightRollingStockWithLiveries'
          description: ''
      summary: Paginated list of rolling stock with a lighter response
      tags:
      - rolling_stock
  /light_rolling_stock/{rolling_stock_id}/:
    get:
      description: Retrieve a rolling stock's light representation
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightRollingStockWithLiveries'
          description: The rolling stock with their simplified effort curves
      summary: Retrieve a rolling stock's light representation
      tags:
      - rolling_stock
  /pathfinding/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathQuery'
        description: Path information
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: The created Path
      summary: Create a Path
  /pathfinding/{id}/:
    delete:
      parameters:
      - description: Path ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Delete a path
      tags:
      - pathfinding
    get:
      parameters:
      - description: Path ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: The retrieved path
      summary: Retrieve a Path
      tags:
      - pathfinding
    put:
      parameters:
      - description: Path ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathQuery'
        description: Updated Path
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Path'
                type: array
          description: The updated path
      summary: Update a path
      tags:
      - pathfinding
  /pathfinding/{path_id}/catenaries/:
    get:
      description: Retrieve the catenary modes along a path, as seen by the rolling stock specified
      parameters:
      - description: The path's id
        in: path
        name: path_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatenariesOnPathResponse'
          description: ''
      summary: Retrieve the catenary modes along a path, as seen by the rolling stock specified
      tags:
      - infra
  /pathfinding/{path_id}/electrical_profiles/:
    get:
      description: Retrieve the electrical profiles along a path, as seen by the rolling stock specified
      parameters:
      - description: The path's id
        in: path
        name: path_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: electrical_profile_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilesOnPathResponse'
          description: ''
      summary: Retrieve the electrical profiles along a path, as seen by the rolling stock specified
      tags:
      - electrical_profiles
  /projects/:
    get:
      description: Returns a paginated list of projects
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfProjectWithStudies'
          description: The list of projects
      summary: Returns a paginated list of projects
      tags:
      - projects
    post:
      description: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateForm'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
          description: The created project
      summary: Create a new project
      tags:
      - projects
  /projects/{project_id}/:
    delete:
      description: Delete a project
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The project was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested project was not found
      summary: Delete a project
      tags:
      - projects
    get:
      description: Retrieve a project
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
          description: The requested project
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested project was not found
      summary: Retrieve a project
      tags:
      - projects
    patch:
      description: Update a project
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchForm'
        description: The fields to update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
          description: The updated project
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested project was not found
      summary: Update a project
      tags:
      - projects
  /projects/{project_id}/studies/:
    get:
      description: Return a list of studies
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfStudyWithScenarios'
          description: The list of studies
      summary: Return a list of studies
      tags:
      - studies
    post:
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyCreateForm'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyWithScenarios'
          description: The created study
      tags:
      - studies
  /projects/{project_id}/studies/{study_id}/:
    delete:
      description: Delete a study
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The study was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested study was not found
      summary: Delete a study
      tags:
      - studies
    get:
      description: Return a specific study
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyWithScenarios'
          description: The requested study
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested study was not found
      summary: Return a specific study
      tags:
      - studies
    patch:
      description: Update a study
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyPatchForm'
        description: The fields to update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyWithScenarios'
          description: The updated study
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested study was not found
      summary: Update a study
      tags:
      - studies
  /projects/{project_id}/studies/{study_id}/scenarios/:
    get:
      description: Return a list of scenarios
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      - in: query
        name: ordering
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfScenarioWithCountTrains'
          description: The list of scenarios
      summary: Return a list of scenarios
      tags:
      - scenarios
    post:
      description: Create a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioCreateForm'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioWithDetails'
          description: The created scenario
      summary: Create a scenario
      tags:
      - scenarios
  /projects/{project_id}/studies/{study_id}/scenarios/{scenario_id}/:
    delete:
      description: Delete a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The scenario was deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Delete a scenario
      tags:
      - scenarios
    get:
      description: Return a specific scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioWithDetails'
          description: The requested scenario
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Return a specific scenario
      tags:
      - scenarios
    patch:
      description: Update a scenario
      parameters:
      - description: The id of a project
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: scenario_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioPatchForm'
        required: true
      responses:
        '204':
          description: The scenario was updated successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: The requested scenario was not found
      summary: Update a scenario
      tags:
      - scenarios
  /rolling_stock/:
    post:
      description: Create a rolling stock
      parameters:
      - in: query
        name: locked
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Create a rolling stock
      tags:
      - rolling_stock
  /rolling_stock/power_restrictions/:
    get:
      description: Returns the set of power restrictions for all rolling_stocks modes.
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Retrieve the power restrictions list
      summary: Returns the set of power restrictions for all rolling_stocks modes.
      tags:
      - rolling_stock
  /rolling_stock/{rolling_stock_id}/:
    delete:
      description: Delete a rolling_stock and all entities linked to it
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      - description: force the deletion even if itâ€™s used
        in: query
        name: force
        required: false
        schema:
          type: boolean
      responses:
        '204':
          description: The rolling stock was deleted successfully
        '404':
          description: The requested rolling stock was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockError'
          description: The requested rolling stock is used
      summary: Delete a rolling_stock and all entities linked to it
      tags:
      - rolling_stock
    get:
      description: Get a rolling stock by Id
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockWithLiveries'
          description: The requested rolling stock
      summary: Get a rolling stock by Id
      tags:
      - rolling_stock
    patch:
      description: Patch a rolling stock
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Patch a rolling stock
      tags:
      - rolling_stock
  /rolling_stock/{rolling_stock_id}/livery/:
    post:
      description: Create a rolling stock livery
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockLiveryCreateForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockLivery'
          description: The created rolling stock
        '404':
          description: The requested rolling stock was not found
      summary: Create a rolling stock livery
      tags:
      - rolling_stock
      - rolling_stock_livery
  /rolling_stock/{rolling_stock_id}/locked/:
    patch:
      description: Update rolling_stock locked field
      parameters:
      - in: path
        name: rolling_stock_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockLockedUpdateForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Update rolling_stock locked field
      tags:
      - rolling_stock
  /search/:
    post:
      description: |-
        Returns all infra objects of some type according to a hierarchical query.

        # Payload

        {
        "object": string,
        "query": query,
        "dry": boolean, # default: false
        }

        Where:
        - `object` can be any search object declared in `search.yml`
        - `query` is a JSON document which can be deserialized into a [SearchAst].
        Check out examples below.

        # Response

        The response structure depends on the `object`.

        # Query language

        The query itself is defined using a language made up of nested JSON arrays.
        It will be parsed and transformed into a PostgreSQL WHERE statement.
        The language consist of a single boolean expression of comparison statements
        in prefix notation. For example, the query `["like", ["name"], "%ari%"]`
        will generate a WHERE statement like `WHERE "name" LIKE '%ari%'`.
        For more information on the query language itself, check out examples below.

        # Available functions

        See [create_processing_context()].

        # A few query examples

        * The railway station PNO: `["=", ["trigram"], "pno"]`
        * The railway stations with either "Paris" or "Lyon" (or both) in their name:
        `["or", ["search", ["name"], "Paris"], ["search", ["name"], "Lyon"]]`
        * All railway stations with "Paris" in their name but not PNO :
        `["and", ["search", ["name"], "Paris"], ["not", ["=", ["trigram"], "pno"]]]`

        See [SearchAst] for a more detailed view of the query language.
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 25
          format: int64
          minimum: 1
          nullable: true
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchResultItem'
                type: array
          description: The search results
      summary: Returns all infra objects of some type according to a hierarchical query.
      tags:
      - search
  /single_simulation/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleSimulationRequest'
        description: The details of the simulation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSimulationResponse'
          description: Data about the simulation produced
      summary: Runs a simulation with a single train, does not write anything to the database
  /sprites/signaling_systems/:
    get:
      description: This endpoint returns the list of supported signaling systems
      responses:
        '200':
          content:
            application/json:
              example:
              - BAL
              - TVM
              schema:
                items:
                  type: string
                type: array
          description: List of supported signaling systems
      summary: This endpoint returns the list of supported signaling systems
      tags:
      - sprites
  /sprites/{signaling_system}/{file_name}/:
    get:
      description: This endpoint is used by map libre to retrieve the atlas of each signaling system
      parameters:
      - description: Signaling system name
        in: path
        name: signaling_system
        required: true
        schema:
          type: string
      - description: File name (json, png or svg)
        in: path
        name: file_name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Atlas image of config
        '404':
          description: Signaling system not found
      summary: This endpoint is used by map libre to retrieve the atlas of each signaling system
      tags:
      - sprites
  /stdcm/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comfort:
                  $ref: '#/components/schemas/Comfort'
                end_time:
                  format: double
                  type: number
                infra_id:
                  type: integer
                margin_after:
                  default: 0
                  description: |
                    Margin of y seconds after the train passage, which means that the path used by the train should
                    be free and available at least y seconds after its passage.
                  format: double
                  type: number
                margin_before:
                  default: 0
                  description: |
                    Margin of x seconds before the train passage, which means that the path used by the train should
                    be free and available at least x seconds before its passage.
                  format: double
                  type: number
                maximum_departure_delay:
                  description: By how long we can shift the departure time (s). Defaults to 2h if unspecified.
                  format: double
                  type: number
                maximum_run_time:
                  description: |
                    Specifies how long the total run time can be in seconds.
                    Defaults to 43200s if unspecified, meaning that the result can't exceed 12h.
                  format: double
                  type: number
                rolling_stock_id:
                  type: integer
                rolling_stocks:
                  items:
                    type: integer
                  type: array
                speed_limit_tags:
                  description: Train category for speed limits
                  type: string
                standard_allowance:
                  $ref: '#/components/schemas/AllowanceValue'
                start_time:
                  format: double
                  type: number
                steps:
                  items:
                    properties:
                      duration:
                        format: float
                        type: number
                      waypoints:
                        $ref: '#/components/schemas/Waypoint'
                    required:
                    - duration
                    - waypoints
                    type: object
                  minItems: 2
                  type: array
                timetable_id:
                  description: timetable ID
                  type: integer
              required:
              - infra_id
              - timetable_id
              - steps
              - rolling_stocks
              - rolling_stock_id
              - comfort
              - maximum_departure_delay
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - properties:
                    path:
                      $ref: '#/components/schemas/Path'
                    simulation:
                      $ref: '#/components/schemas/SimulationReport'
                  required:
                  - simulation
                  - path
                - properties:
                    error:
                      description: Error message
                      example: No path could be found
                      type: string
                  type: object
          description: Simulation result
        '400':
          description: The request body is invalid
      summary: Find a stdcm and return a simulation result
      tags:
      - stdcm
  /timetable/{id}/:
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableWithSchedulesDetails'
          description: Timetable with schedules
        '404':
          description: Timetable not found
      summary: Return a specific timetable with its associated schedules
      tags:
      - timetable
    post:
      description: Import a timetable
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TimetableImportItem'
              type: array
        description: ''
        required: true
      responses:
        '204':
          description: Timetable was successfully imported
      summary: Import a timetable
      tags:
      - timetable
  /timetable/{id}/conflicts/:
    get:
      description: |-
        Compute spacing conflicts for a given timetable
        TODO: This should compute itinary conflicts too
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Conflict'
                type: array
          description: Spacing conflicts
      summary: Compute spacing conflicts for a given timetable
      tags:
      - timetable
  /train_schedule/:
    delete:
      description: Delete multiple train schedules at once
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  items:
                    format: int64
                    type: integer
                  type: array
              required:
              - ids
              type: object
        required: true
      responses:
        '204':
          description: The train schedules have been deleted
      summary: Delete multiple train schedules at once
      tags:
      - train_schedule
      - timetable
    patch:
      description: Update multiple train schedules at once and re-run simulations accordingly
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TrainSchedulePatch'
              type: array
        required: true
      responses:
        '204':
          description: The train schedules have been updated
      summary: Update multiple train schedules at once and re-run simulations accordingly
      tags:
      - train_schedule
      - timetable
  /train_schedule/results/:
    get:
      description: Retrieve the simulation result of multiple train schedules
      parameters:
      - description: The ID of the path that was used to project the train path
        in: query
        name: path_id
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
      - description: The timetable ID
        in: query
        name: timetable_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SimulationReport'
                type: array
          description: The train schedule results
      summary: Retrieve the simulation result of multiple train schedules
      tags:
      - train_schedule
  /train_schedule/standalone_simulation/:
    post:
      description: Create a batch of train schedule and run simulations accordingly
      requestBody:
        content:
          application/json:
            schema:
              description: The list of train schedules to simulate
              properties:
                path:
                  format: int64
                  type: integer
                schedules:
                  items:
                    $ref: '#/components/schemas/TrainScheduleBatchItem'
                  minItems: 1
                  type: array
                timetable:
                  format: int64
                  type: integer
              required:
              - timetable
              - path
              - schedules
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  format: int64
                  type: integer
                type: array
          description: The ids of the train_schedules created
      summary: Create a batch of train schedule and run simulations accordingly
      tags:
      - train_schedule
  /train_schedule/{id}/:
    delete:
      description: Delete a train schedule and its result
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: The train schedule has been deleted
      summary: Delete a train schedule and its result
      tags:
      - train_schedule
      - timetable
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainSchedule'
          description: The train schedule
      summary: Return a specific timetable with its associated schedules
      tags:
      - train_schedule
  /train_schedule/{id}/result/:
    get:
      description: Retrieve a simulation result
      parameters:
      - in: query
        name: path_id
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
      - description: A train schedule ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationReport'
          description: The train schedule result
      summary: Retrieve a simulation result
      tags:
      - train_schedule
  /version/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Return the service version
  /version/core/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Return the core service version
tags:
- description: Infra
  name: infra
- description: Operations related to infra routes
  name: routes
- description: Timetable
  name: timetable
- description: Pathfinding operations
  name: pathfinding
- description: Map layers
  name: layers
- description: Electrical profiles
  name: electrical_profiles
- description: Train Schedule
  name: train_schedule

