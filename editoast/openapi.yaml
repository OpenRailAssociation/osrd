components:
  schemas:
    Allowance:
      discriminator:
        propertyName: allowance_type
      oneOf:
      - $ref: '#/components/schemas/EngineeringAllowance'
      - $ref: '#/components/schemas/StandardAllowance'
    AllowancePercentValue:
      properties:
        percentage:
          example: 15.0
          type: number
        value_type:
          enum:
          - percentage
          type: string
      required:
      - value_type
      - percentage
    AllowanceTimePerDistanceValue:
      properties:
        minutes:
          description: Minutes per 100k
          example: 5.0
          type: number
        value_type:
          enum:
          - time_per_distance
          type: string
      required:
      - value_type
      - minutes
    AllowanceTimeValue:
      properties:
        seconds:
          example: 180.0
          type: number
        value_type:
          enum:
          - time
          type: string
      required:
      - value_type
      - seconds
    AllowanceValue:
      discriminator:
        propertyName: value_type
      oneOf:
      - $ref: '#/components/schemas/AllowanceTimePerDistanceValue'
      - $ref: '#/components/schemas/AllowanceTimeValue'
      - $ref: '#/components/schemas/AllowancePercentValue'
    ApplicableDirections:
      enum:
      - START_TO_STOP
      - STOP_TO_START
      - BOTH
      type: string
    ApplicableDirectionsTrackRange:
      properties:
        applicable_directions:
          $ref: '#/components/schemas/ApplicableDirections'
        begin:
          format: double
          type: number
        end:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - track
      - begin
      - end
      - applicable_directions
      type: object
    AttachedObjects:
      allOf:
      - additionalProperties: false
        type: object
      - type: object
      description: Objects attached to a track section, grouped by type
    Battery:
      description: energy source for a rolling stock representing a battery
      properties:
        efficiency:
          format: float
          maximum: 1
          minimum: 0
          type: number
        energy_source_type:
          enum:
          - Battery
          type: string
        energy_storage:
          $ref: '#/components/schemas/EnergyStorage'
        max_input_power:
          $ref: '#/components/schemas/SpeedDependantPower'
        max_output_power:
          $ref: '#/components/schemas/SpeedDependantPower'
      required:
      - energy_source_type
      - max_input_power
      - max_output_power
      - energy_storage
      - efficiency
      type: object
    BoundingBox:
      description: A bounding box represented by its top-left and bottom-right corners
      items:
        description: A bounding box represented by its top-left and bottom-right corners
        items:
          allOf:
          - format: double
            type: number
          - format: double
            type: number
        type: array
      maxItems: 2
      minItems: 2
      type: array
    BufferStop:
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        position:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - id
      - track
      - position
      type: object
    Catenary:
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        track_ranges:
          items:
            $ref: '#/components/schemas/ApplicableDirectionsTrackRange'
          type: array
        voltage:
          $ref: '#/components/schemas/NonBlankString'
      required:
      - id
      - voltage
      - track_ranges
      type: object
    CatenaryRange:
      properties:
        begin:
          example: 0.0
          format: float
          type: number
        end:
          example: 100.0
          format: float
          type: number
        mode:
          example: '25000'
          type: string
      required:
      - begin
      - end
      - mode
      type: object
    Comfort:
      default: STANDARD
      description: Train comfort that will be used for the simulation
      enum:
      - AC
      - HEATING
      - STANDARD
      type: string
    ConditionalEffortCurve:
      properties:
        cond:
          nullable: true
          properties:
            comfort:
              $ref: '#/components/schemas/Comfort'
              nullable: true
            electrical_profile_level:
              nullable: true
              type: string
            power_restriction_code:
              nullable: true
              type: string
          type: object
        curve:
          $ref: '#/components/schemas/EffortCurve'
      type: object
    Conflict:
      properties:
        conflict_type:
          $ref: '#/components/schemas/ConflictType'
        end_time:
          format: int64
          minimum: 0
          type: integer
        start_time:
          format: int64
          minimum: 0
          type: integer
        train_ids:
          items:
            format: int64
            type: integer
          type: array
        train_names:
          items:
            type: string
          type: array
      required:
      - train_ids
      - train_names
      - start_time
      - end_time
      - conflict_type
      type: object
    ConflictType:
      enum:
      - Spacing
      - Routing
      type: string
    Curve:
      properties:
        begin:
          format: double
          type: number
        end:
          format: double
          type: number
        radius:
          format: double
          type: number
      required:
      - radius
      - begin
      - end
      type: object
    DeleteOperation:
      description: A delete operation. Contains same information as a object ref but has another serialization.
      properties:
        obj_id:
          type: string
        obj_type:
          $ref: '#/components/schemas/ObjectType'
      required:
      - obj_id
      - obj_type
      type: object
    Detector:
      properties:
        applicable_directions:
          $ref: '#/components/schemas/ApplicableDirections'
        id:
          $ref: '#/components/schemas/Identifier'
        position:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - id
      - track
      - position
      - applicable_directions
      type: object
    Direction:
      enum:
      - START_TO_STOP
      - STOP_TO_START
      type: string
    DirectionalTrackRange:
      properties:
        begin:
          format: double
          type: number
        direction:
          $ref: '#/components/schemas/Direction'
        end:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - track
      - begin
      - end
      - direction
      type: object
    EffortCurve:
      properties:
        max_efforts:
          example:
          - 23500.0
          - 23200.0
          - 21200.0
          items:
            format: float
            type: number
          minItems: 2
          type: array
        speeds:
          example:
          - 0.0
          - 2.958
          - 46.719
          items:
            format: float
            type: number
          minItems: 2
          type: array
      type: object
    ElectricalProfile:
      properties:
        power_class:
          example: '1'
          type: string
        track_ranges:
          items:
            $ref: '#/components/schemas/TrackRange'
          type: array
        value:
          example: A
          type: string
      type: object
    ElectrificationRange:
      properties:
        electrificationUsage:
          discriminator:
            propertyName: object_type
          oneOf:
          - $ref: '#/components/schemas/Electrified'
          - $ref: '#/components/schemas/Neutral'
          - $ref: '#/components/schemas/NonElectrified'
        start:
          format: double
          type: number
        stop:
          format: double
          type: number
      required:
      - start
      - stop
      - is_electrified
      - electrificationUsage
    Electrified:
      properties:
        mode:
          type: string
        mode_handled:
          type: boolean
        object_type:
          enum:
          - Electrified
          type: string
        profile:
          nullable: true
          type: string
        profile_handled:
          type: boolean
      required:
      - mode
      - mode_handled
      - object_type
      - profile_handled
    Endpoint:
      enum:
      - BEGIN
      - END
      type: string
    EnergySource:
      description: enery source of a rolling stock
      discriminator:
        propertyName: energy_source_type
      oneOf:
      - $ref: '#/components/schemas/Catenary'
      - $ref: '#/components/schemas/PowerPack'
      - $ref: '#/components/schemas/Battery'
    EnergyStorage:
      description: energy storage of an energy source (of a rolling stock, can be a electrical battery or a hydrogen/fuel powerPack)
      properties:
        capacity:
          format: float
          type: number
        refill_law:
          description: physical law defining how the storage can be refilled
          nullable: true
          properties:
            soc_ref:
              format: float
              maximum: 1
              minimum: 0
              type: number
            tau:
              format: float
              minimum: 0
              type: number
          required:
          - tau
          - soc_ref
          type: object
        soc:
          format: float
          maximum: 1
          minimum: 0
          type: number
        soc_max:
          format: float
          maximum: 1
          minimum: 0
          type: number
        soc_min:
          format: float
          maximum: 1
          minimum: 0
          type: number
      required:
      - capacity
      - soc
      - soc_min
      - soc_max
      - refill_law
      type: object
    EngineeringAllowance:
      allOf:
      - properties:
          allowance_type:
            enum:
            - engineering
            type: string
          capacity_speed_limit:
            default: -1
            format: double
            type: number
          distribution:
            enum:
            - MARECO
            - LINEAR
            type: string
        required:
        - allowance_type
        - distribution
        type: object
      - $ref: '#/components/schemas/RangeAllowance'
    GeoJsonObject:
      description: GeoJson format
      properties:
        coordinates:
          items:
            items:
              format: float
              type: number
            type: array
          type: array
        type:
          type: string
      required:
      - coordinates
      - type
      type: object
    GeoJsonPosition:
      properties:
        coordinates:
          items:
            format: float
            type: number
          maxItems: 2
          minItems: 2
          type: array
        type:
          type: string
      required:
      - coordinates
      - type
      type: object
    GeometryValue:
      description: A GeoJSON geometry item
      oneOf:
      - properties:
          coordinates:
            $ref: '#/components/schemas/PointValue'
          type:
            enum:
            - Point
            type: string
        required:
        - type
        - coordinates
        type: object
      - properties:
          coordinates:
            $ref: '#/components/schemas/MultiPointValue'
          type:
            enum:
            - MultiPoint
            type: string
        required:
        - type
        - coordinates
        type: object
      - properties:
          coordinates:
            $ref: '#/components/schemas/LineStringValue'
          type:
            enum:
            - LineString
            type: string
        required:
        - type
        - coordinates
        type: object
      - properties:
          coordinates:
            $ref: '#/components/schemas/MultiLineStringValue'
          type:
            enum:
            - MultiLineString
            type: string
        required:
        - type
        - coordinates
        type: object
      - properties:
          coordinates:
            $ref: '#/components/schemas/PolygonValue'
          type:
            enum:
            - Polygon
            type: string
        required:
        - type
        - coordinates
        type: object
      - properties:
          coordinates:
            $ref: '#/components/schemas/MultiPolygonValue'
          type:
            enum:
            - MultiPolygon
            type: string
        required:
        - type
        - coordinates
        type: object
    Identifier:
      description: A wrapper around a String that ensures that the string is not empty and not longer than 255 characters.
      type: string
    Infra:
      properties:
        created:
          format: date-time
          type: string
        generated_version:
          example: '1'
          nullable: true
          type: string
        id:
          format: int64
          type: integer
        locked:
          type: boolean
        modified:
          format: date-time
          type: string
        name:
          type: string
        railjson_version:
          example: 3.3.1
          type: string
        version:
          example: '1'
          type: string
      required:
      - id
      - name
      - railjson_version
      - version
      - generated_version
      - locked
      - created
      - modified
      type: object
    InfraError:
      allOf:
      - $ref: '#/components/schemas/InfraErrorType'
      - properties:
          field:
            nullable: true
            type: string
          is_warning:
            type: boolean
          obj_id:
            type: string
          obj_type:
            $ref: '#/components/schemas/ObjectType'
        required:
        - obj_id
        - obj_type
        - is_warning
        type: object
    InfraErrorType:
      oneOf:
      - properties:
          error_type:
            enum:
            - duplicated_group
            type: string
          original_group_path:
            type: string
        required:
        - original_group_path
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - empty_object
            type: string
        required:
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - invalid_group
            type: string
          group:
            type: string
          switch_type:
            type: string
        required:
        - group
        - switch_type
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - invalid_reference
            type: string
          reference:
            $ref: '#/components/schemas/ObjectRef'
        required:
        - reference
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - invalid_route
            type: string
        required:
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - invalid_switch_ports
            type: string
        required:
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - missing_route
            type: string
        required:
        - error_type
        type: object
      - properties:
          endpoint:
            $ref: '#/components/schemas/Endpoint'
          error_type:
            enum:
            - missing_buffer_stop
            type: string
        required:
        - endpoint
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - object_out_of_path
            type: string
          reference:
            $ref: '#/components/schemas/ObjectRef'
        required:
        - reference
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - odd_buffer_stop_location
            type: string
        required:
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - out_of_range
            type: string
          expected_range:
            items:
              format: double
              type: number
            type: array
          position:
            format: double
            type: number
        required:
        - position
        - expected_range
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - overlapping_catenaries
            type: string
          reference:
            $ref: '#/components/schemas/ObjectRef'
        required:
        - reference
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - overlapping_speed_sections
            type: string
          reference:
            $ref: '#/components/schemas/ObjectRef'
        required:
        - reference
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - overlapping_switches
            type: string
          reference:
            $ref: '#/components/schemas/ObjectRef'
        required:
        - reference
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - overlapping_track_links
            type: string
          reference:
            $ref: '#/components/schemas/ObjectRef'
        required:
        - reference
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - unknown_port_name
            type: string
          port_name:
            type: string
        required:
        - port_name
        - error_type
        type: object
      - properties:
          error_type:
            enum:
            - unused_port
            type: string
          port_name:
            type: string
        required:
        - port_name
        - error_type
        type: object
    InfraForm:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    InfraPatchForm:
      description: Patch form for a project
      properties:
        name:
          nullable: true
          type: string
      type: object
    InfraState:
      enum:
      - NOT_LOADED
      - INITIALIZING
      - DOWNLOADING
      - PARSING_JSON
      - PARSING_INFRA
      - ADAPTING_KOTLIN
      - LOADING_SIGNALS
      - BUILDING_BLOCKS
      - CACHED
      - TRANSIENT_ERROR
      - ERROR
      type: string
    InfraStateResponse:
      properties:
        last_status:
          allOf:
          - $ref: '#/components/schemas/InfraState'
          nullable: true
        status:
          $ref: '#/components/schemas/InfraState'
      required:
      - status
      type: object
    InfraWithState:
      allOf:
      - $ref: '#/components/schemas/Infra'
      - properties:
          state:
            $ref: '#/components/schemas/InfraState'
        required:
        - state
        type: object
    InvalidTrainValues:
      enum:
      - NewerRollingStock
      - NewerInfra
      type: string
    Level:
      enum:
      - warnings
      - errors
      - all
      type: string
    LightRollingStock:
      allOf:
      - $ref: '#/components/schemas/RollingStockBase'
      - properties:
          effort_curves:
            properties:
              default_mode:
                type: string
              modes:
                additionalProperties:
                  properties:
                    is_electric:
                      type: boolean
                  required:
                  - is_electric
                  type: object
                type: object
            required:
            - default_mode
            - modes
            type: object
          id:
            type: number
          liveries:
            items:
              $ref: '#/components/schemas/RollingStockLivery'
            type: array
          railjson_version:
            example: '3.2'
            type: string
        required:
        - railjson_version
        - id
        - liveries
        - effort_curves
        type: object
    LineStringValue:
      items:
        items:
          format: double
          type: number
        type: array
      type: array
    LoadingGaugeLimit:
      properties:
        begin:
          format: double
          type: number
        category:
          $ref: '#/components/schemas/LoadingGaugeType'
        end:
          format: double
          type: number
      required:
      - category
      - begin
      - end
      type: object
    LoadingGaugeType:
      enum:
      - G1
      - G2
      - GA
      - GB
      - GB1
      - GC
      - FR3.3
      - FR3.3/GB/G2
      - GLOTT
      type: string
    LogicalSignal:
      properties:
        next_signaling_systems:
          items:
            type: string
          type: array
        settings:
          additionalProperties:
            $ref: '#/components/schemas/NonBlankString'
          type: object
        signaling_system:
          type: string
      required:
      - signaling_system
      - next_signaling_systems
      - settings
      type: object
    MultiLineStringValue:
      items:
        $ref: '#/components/schemas/LineStringValue'
      type: array
    MultiPoint:
      description: GeoJSon geometry
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Point3D'
          type: array
        type:
          enum:
          - MultiPoint
          type: string
      required:
      - type
      - coordinates
      type: object
    MultiPointValue:
      items:
        $ref: '#/components/schemas/PointValue'
      type: array
    MultiPolygonValue:
      items:
        $ref: '#/components/schemas/PolygonValue'
      type: array
    Neutral:
      properties:
        lower_pantograph:
          type: boolean
        object_type:
          enum:
          - Neutral
          type: string
      required:
      - lower_pantograph
      - object_type
    NeutralSection:
      description: |-
        Neutral sections are portions of track where trains aren't allowed to pull power from catenaries. They have to rely on inertia to cross such sections.

        In practice, neutral sections are delimited by signs. In OSRD, neutral sections are directional to allow accounting for different sign placement depending on the direction.

        For more details see [the documentation](https://osrd.fr/en/docs/explanation/neutral_sections/).
      properties:
        announcement_track_ranges:
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
          type: array
        id:
          $ref: '#/components/schemas/Identifier'
        lower_pantograph:
          type: boolean
        track_ranges:
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
          type: array
      required:
      - id
      - announcement_track_ranges
      - track_ranges
      - lower_pantograph
      type: object
    NonBlankString:
      description: A wrapper around a String that ensures that the string is not empty.
      type: string
    NonElectrified:
      properties:
        object_type:
          enum:
          - NonElectrified
          type: string
      required:
      - object_type
    ObjectRef:
      properties:
        obj_id:
          type: string
        type:
          $ref: '#/components/schemas/ObjectType'
      required:
      - type
      - obj_id
      type: object
    ObjectType:
      enum:
      - TrackSection
      - Signal
      - SpeedSection
      - Detector
      - NeutralSection
      - TrackSectionLink
      - Switch
      - SwitchType
      - BufferStop
      - Route
      - OperationalPoint
      - Catenary
      type: string
    Operation:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/RailjsonObject'
        - properties:
            operation_type:
              enum:
              - CREATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/UpdateOperation'
        - properties:
            operation_type:
              enum:
              - UPDATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/DeleteOperation'
        - properties:
            operation_type:
              enum:
              - DELETE
              type: string
          required:
          - operation_type
          type: object
    OperationResult:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/RailjsonObject'
        - properties:
            operation_type:
              enum:
              - CREATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/RailjsonObject'
        - properties:
            operation_type:
              enum:
              - UPDATE
              type: string
          required:
          - operation_type
          type: object
      - allOf:
        - $ref: '#/components/schemas/ObjectRef'
        - properties:
            operation_type:
              enum:
              - DELETE
              type: string
          required:
          - operation_type
          type: object
    OperationalPoint:
      properties:
        extensions:
          $ref: '#/components/schemas/OperationalPointExtensions'
        id:
          $ref: '#/components/schemas/Identifier'
        parts:
          items:
            $ref: '#/components/schemas/OperationalPointPart'
          type: array
      required:
      - id
      - parts
      type: object
    OperationalPointExtensions:
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/OperationalPointIdentifierExtension'
          nullable: true
        sncf:
          allOf:
          - $ref: '#/components/schemas/OperationalPointSncfExtension'
          nullable: true
      type: object
    OperationalPointIdentifierExtension:
      properties:
        name:
          $ref: '#/components/schemas/NonBlankString'
        uic:
          format: int64
          type: integer
      required:
      - name
      - uic
      type: object
    OperationalPointLocation:
      properties:
        type:
          enum:
          - operational_point
          type: string
        uic:
          format: int64
          type: integer
      required:
      - uic
      - type
      type: object
    OperationalPointPart:
      properties:
        position:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - track
      - position
      type: object
    OperationalPointSncfExtension:
      properties:
        ch:
          type: string
        ch_long_label:
          $ref: '#/components/schemas/NonBlankString'
        ch_short_label:
          $ref: '#/components/schemas/NonBlankString'
        ci:
          format: int64
          type: integer
        trigram:
          type: string
      required:
      - ci
      - ch
      - ch_short_label
      - ch_long_label
      - trigram
      type: object
    PaginatedInfraErrors:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/InfraError'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedInfraWithState:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/InfraWithState'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    PaginatedInfras:
      description: A paginated response
      properties:
        count:
          description: The total number of items
          format: int64
          type: integer
        next:
          description: The next page number
          format: int64
          nullable: true
          type: integer
        previous:
          description: The previous page number
          format: int64
          nullable: true
          type: integer
        results:
          description: The list of results
          items:
            $ref: '#/components/schemas/InfraWithState'
          type: array
      required:
      - count
      - previous
      - next
      - results
      type: object
    Panel:
      properties:
        angle_geo:
          format: double
          type: number
        angle_sch:
          format: double
          type: number
        position:
          format: double
          type: number
        side:
          $ref: '#/components/schemas/Side'
        track:
          $ref: '#/components/schemas/Identifier'
        type:
          $ref: '#/components/schemas/NonBlankString'
        value:
          allOf:
          - $ref: '#/components/schemas/NonBlankString'
          nullable: true
      required:
      - track
      - position
      - angle_geo
      - angle_sch
      - side
      - type
      type: object
    Path:
      properties:
        created:
          format: date-time
          type: string
        curves:
          description: Curves on the path
          items:
            properties:
              position:
                format: float
                type: number
              radius:
                format: float
                type: number
            required:
            - radius
            - position
            type: object
          type: array
        geographic:
          $ref: '#/components/schemas/GeoJsonObject'
        id:
          type: integer
        length:
          description: Length of the path
          format: float
          type: number
        owner:
          format: uuid
          type: string
        schematic:
          $ref: '#/components/schemas/GeoJsonObject'
        slopes:
          description: Slopes on the path
          items:
            properties:
              gradient:
                format: float
                type: number
              position:
                format: float
                type: number
            required:
            - gradient
            - position
            type: object
          type: array
        steps:
          items:
            $ref: '#/components/schemas/PathStep'
          type: array
      required:
      - id
      - owner
      - created
      - length
      - geographic
      - schematic
      - slopes
      - curves
      - steps
    PathQuery:
      properties:
        infra:
          type: number
        rolling_stocks:
          description: List of rolling stocks that must be able to use this path
          items:
            type: integer
          type: array
        steps:
          items:
            properties:
              duration:
                format: float
                type: number
              waypoints:
                items:
                  $ref: '#/components/schemas/PathWaypoint'
                type: array
            required:
            - duration
            - waypoints
            type: object
          minItems: 2
          type: array
      required:
      - infra
      - steps
      - rolling_stocks
      type: object
    PathStep:
      properties:
        duration:
          format: float
          type: number
        geo:
          $ref: '#/components/schemas/GeoJsonPosition'
        id:
          type: string
        location:
          $ref: '#/components/schemas/TrackSectionLocation'
        name:
          type: string
        path_offset:
          description: Offset of the step in the path
          format: float
          type: number
        sch:
          $ref: '#/components/schemas/GeoJsonPosition'
        suggestion:
          type: boolean
      required:
      - suggestion
      - duration
      - path_offset
      - location
      - sch
      - geo
      type: object
    PathWaypoint:
      properties:
        geo_coordinate:
          items:
            format: float
            type: number
          maxItems: 2
          minItems: 2
          type: array
        offset:
          type: number
        track_section:
          description: track section ID of the waypoint
          type: string
      required:
      - track_section
      - geo_cordinate
      type: object
    PathfindingInput:
      properties:
        ending:
          $ref: '#/components/schemas/PathfindingTrackLocationInput'
        starting:
          $ref: '#/components/schemas/PathfindingTrackLocationDirInput'
      required:
      - starting
      - ending
      type: object
    PathfindingOutput:
      properties:
        detectors:
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        switches_directions:
          additionalProperties:
            $ref: '#/components/schemas/Identifier'
          type: object
        track_ranges:
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
          type: array
      required:
      - track_ranges
      - detectors
      - switches_directions
      type: object
    PathfindingTrackLocationDirInput:
      properties:
        direction:
          $ref: '#/components/schemas/Direction'
        position:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - track
      - position
      - direction
      type: object
    PathfindingTrackLocationInput:
      properties:
        position:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - track
      - position
      type: object
    Point:
      description: GeoJSon geometry
      properties:
        coordinates:
          $ref: '#/components/schemas/Point3D'
        type:
          enum:
          - Point
          type: string
      required:
      - type
      - coordinates
      type: object
    Point3D:
      description: Point in 3D space
      items:
        type: number
      maxItems: 3
      minItems: 2
      type: array
    PointValue:
      items:
        format: double
        type: number
      type: array
    PolygonValue:
      items:
        items:
          items:
            format: double
            type: number
          type: array
        type: array
      type: array
    PowerPack:
      description: energy source for a rolling stock representing a power pack (hydrogen, fuel...)
      properties:
        efficiency:
          format: float
          maximum: 1
          minimum: 0
          type: number
        energy_source_type:
          enum:
          - PowerPack
          type: string
        energy_storage:
          $ref: '#/components/schemas/EnergyStorage'
        max_input_power:
          $ref: '#/components/schemas/SpeedDependantPower'
        max_output_power:
          $ref: '#/components/schemas/SpeedDependantPower'
      required:
      - energy_source_type
      - max_input_power
      - max_output_power
      - energy_storage
      - efficiency
      type: object
    PowerRestrictionRange:
      description: A range along the train path where a power restriction is applied.
      example:
        begin_position: 0.0
        end_position: 1000.0
        power_restriction_code: C1US
      properties:
        begin_position:
          description: Offset from the start of the path, in meters.
          format: float
          type: number
        end_position:
          description: Offset from the start of the path, in meters.
          format: float
          type: number
        power_restriction_code:
          description: The power restriction code to apply.
          type: string
      required:
      - begin_position
      - end_position
      - power_restriction_code
      type: object
    PowerRestrictionRangeItem:
      properties:
        code:
          type: string
        handled:
          type: boolean
        start:
          format: double
          type: number
        stop:
          format: double
          type: number
      required:
      - start
      - stop
      - code
      - handled
    ProjectCreateRequest:
      properties:
        budget:
          type: integer
        description:
          default: ''
          maxLength: 1024
          type: string
        funders:
          default: ''
          maxLength: 1024
          type: string
        image:
          description: The id of the image in the document table
          type: integer
        name:
          maxLength: 128
          type: string
        objectives:
          default: ''
          maxLength: 4096
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - name
    ProjectPatchRequest:
      properties:
        budget:
          type: integer
        description:
          maxLength: 1024
          type: string
        funders:
          maxLength: 1024
          type: string
        image:
          description: The id of the image in the document table
          type: integer
        name:
          maxLength: 128
          type: string
        objectives:
          maxLength: 4096
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          type: array
    ProjectResult:
      properties:
        budget:
          type: integer
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        funders:
          type: string
        id:
          type: integer
        image:
          description: the image id
          nullable: true
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        objectives:
          type: string
        studies_count:
          type: integer
        tags:
          items:
            type: string
          type: array
    RailJson:
      properties:
        buffer_stops:
          items:
            $ref: '#/components/schemas/BufferStop'
          type: array
        catenaries:
          items:
            $ref: '#/components/schemas/Catenary'
          type: array
        detectors:
          items:
            $ref: '#/components/schemas/Detector'
          type: array
        neutral_sections:
          items:
            $ref: '#/components/schemas/NeutralSection'
          type: array
        operational_points:
          items:
            $ref: '#/components/schemas/OperationalPoint'
          type: array
        routes:
          items:
            $ref: '#/components/schemas/Route'
          type: array
        signals:
          items:
            $ref: '#/components/schemas/Signal'
          type: array
        speed_sections:
          items:
            $ref: '#/components/schemas/SpeedSection'
          type: array
        switch_types:
          items:
            $ref: '#/components/schemas/SwitchType'
          type: array
        switches:
          items:
            $ref: '#/components/schemas/Switch'
          type: array
        track_section_links:
          items:
            $ref: '#/components/schemas/TrackSectionLink'
          type: array
        track_sections:
          items:
            $ref: '#/components/schemas/TrackSection'
          type: array
        version:
          type: string
      required:
      - version
      - operational_points
      - routes
      - switch_types
      - switches
      - track_section_links
      - track_sections
      - speed_sections
      - neutral_sections
      - catenaries
      - signals
      - buffer_stops
      - detectors
      type: object
    RailjsonObject:
      oneOf:
      - properties:
          obj_type:
            enum:
            - TrackSection
            type: string
          railjson:
            $ref: '#/components/schemas/TrackSection'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - Signal
            type: string
          railjson:
            $ref: '#/components/schemas/Signal'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - NeutralSection
            type: string
          railjson:
            $ref: '#/components/schemas/NeutralSection'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - SpeedSection
            type: string
          railjson:
            $ref: '#/components/schemas/SpeedSection'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - TrackSectionLink
            type: string
          railjson:
            $ref: '#/components/schemas/TrackSectionLink'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - Switch
            type: string
          railjson:
            $ref: '#/components/schemas/Switch'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - SwitchType
            type: string
          railjson:
            $ref: '#/components/schemas/SwitchType'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - Detector
            type: string
          railjson:
            $ref: '#/components/schemas/Detector'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - BufferStop
            type: string
          railjson:
            $ref: '#/components/schemas/BufferStop'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - Route
            type: string
          railjson:
            $ref: '#/components/schemas/Route'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - OperationalPoint
            type: string
          railjson:
            $ref: '#/components/schemas/OperationalPoint'
        required:
        - railjson
        - obj_type
        type: object
      - properties:
          obj_type:
            enum:
            - Catenary
            type: string
          railjson:
            $ref: '#/components/schemas/Catenary'
        required:
        - railjson
        - obj_type
        type: object
    RangeAllowance:
      properties:
        begin_position:
          type: number
        end_position:
          example: 1000.0
          type: number
        value:
          $ref: '#/components/schemas/AllowanceValue'
      required:
      - begin_position
      - end_position
      - value
    RefreshResponse:
      properties:
        infra_refreshed:
          items:
            format: int64
            type: integer
          type: array
      required:
      - infra_refreshed
      type: object
    RollingStock:
      allOf:
      - $ref: '#/components/schemas/RollingStockUpsertPayload'
      - properties:
          id:
            type: number
          liveries:
            items:
              $ref: '#/components/schemas/RollingStockLivery'
            type: array
          railjson_version:
            example: '3.2'
            type: string
        required:
        - railjson_version
        - id
        - liveries
        type: object
    RollingStockBase:
      properties:
        base_power_class:
          example: '5'
          type: string
        comfort_acceleration:
          format: float
          type: number
        electrical_power_startup_time:
          description: The time the train takes before actually using electrical power (in seconds). Is null if the train is not electric.
          example: 5.0
          format: float
          nullable: true
          type: number
        energy_sources:
          items:
            $ref: '#/components/schemas/EnergySource'
          type: array
        features:
          items:
            type: string
          type: array
        gamma:
          properties:
            type:
              enum:
              - CONST
              - MAX
              type: string
            value:
              format: float
              type: number
          required:
          - type
          - value
          type: object
        inertia_coefficient:
          format: float
          type: number
        length:
          format: float
          type: number
        loading_gauge:
          enum:
          - G1
          - G2
          - GA
          - GB
          - GB1
          - GC
          - FR3.3
          - FR3.3/GB/G2
          - GLOTT
          type: string
        locked:
          default: false
          description: Whether the rolling stock can be edited/deleted or not.
          type: boolean
        mass:
          format: float
          type: number
        max_speed:
          format: float
          type: number
        metadata:
          example:
            detail: BB 7200
            family: LOCOMOTIVES
            grouping: Locomotives électriques courant continu
            number: '1'
            reference: '7200'
            series: BB 7200
            subseries: GV
            type: Locomotives électriques
            unit: US
          properties:
            detail:
              type: string
            family:
              type: string
            grouping:
              type: string
            number:
              type: string
            reference:
              type: string
            series:
              type: string
            subseries:
              type: string
            type:
              type: string
            unit:
              type: string
          required:
          - detail
          - family
          - grouping
          - number
          - reference
          - series
          - subseries
          - type
          - unit
          type: object
        name:
          type: string
        power_restrictions:
          additionalProperties:
            type: string
          description: Mapping of power restriction code to power class
          example:
            C1US: '4'
            C2US: '3'
          type: object
        raise_pantograph_time:
          description: The time it takes to raise this train's pantograph in seconds. Is null if the train is not electric.
          example: 15.0
          format: float
          nullable: true
          type: number
        rolling_resistance:
          properties:
            A:
              type: number
            B:
              type: number
            C:
              type: number
            type:
              enum:
              - davis
              type: string
          required:
          - A
          - B
          - C
          - type
          type: object
        startup_acceleration:
          format: float
          type: number
        startup_time:
          format: float
          type: number
      required:
      - name
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - features
      - mass
      - rolling_resistance
      - loading_gauge
      - base_power_class
      - power_restrictions
      - metadata
      - energy_sources
      - electrical_power_startup_time
      - raise_pantograph_time
    RollingStockLivery:
      properties:
        compound_image_id:
          nullable: true
          type: number
        id:
          type: number
        name:
          type: string
      required:
      - id
      - name
      - compound_image_id
    RollingStockUpsertPayload:
      allOf:
      - $ref: '#/components/schemas/RollingStockBase'
      - properties:
          effort_curves:
            properties:
              default_mode:
                type: string
              modes:
                additionalProperties:
                  properties:
                    curves:
                      items:
                        $ref: '#/components/schemas/ConditionalEffortCurve'
                      type: array
                    default_curve:
                      $ref: '#/components/schemas/EffortCurve'
                    is_electric:
                      type: boolean
                  required:
                  - curves
                  - default_curve
                  - is_electric
                  type: object
                type: object
            required:
            - default_mode
            - modes
            type: object
        required:
        - effort_curves
        type: object
    RollingStockUsage:
      properties:
        rolling_stock_id:
          type: integer
        usage:
          properties:
            project_id:
              type: integer
            project_name:
              type: string
            scenario_id:
              type: integer
            scenario_name:
              type: string
            study_id:
              type: integer
            study_name:
              type: string
            train_name:
              type: string
            train_schedule_id:
              type: integer
          required:
          - train_schedule_id
          - train_name
          - project_id
          - project_name
          - study_id
          - study_name
          - scenario_id
          - scenario_name
          type: object
      required:
      - rolling_stock_id
      - usage
      type: object
    Route:
      properties:
        entry_point:
          $ref: '#/components/schemas/Waypoint'
        entry_point_direction:
          $ref: '#/components/schemas/Direction'
        exit_point:
          $ref: '#/components/schemas/Waypoint'
        id:
          $ref: '#/components/schemas/Identifier'
        release_detectors:
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        switches_directions:
          additionalProperties:
            $ref: '#/components/schemas/Identifier'
          type: object
      required:
      - id
      - entry_point
      - entry_point_direction
      - exit_point
      - release_detectors
      - switches_directions
      type: object
    RouteTrackRangesResult:
      oneOf:
      - properties:
          track_ranges:
            items:
              $ref: '#/components/schemas/DirectionalTrackRange'
            type: array
          type:
            enum:
            - Computed
            type: string
        required:
        - type
        - track_ranges
        type: object
      - properties:
          type:
            enum:
            - NotFound
            type: string
        required:
        - type
        type: object
      - properties:
          type:
            enum:
            - CantComputePath
            type: string
        required:
        - type
        type: object
    ScenarioListResult:
      properties:
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        electrical_profile_set_id:
          nullable: true
          type: integer
        electrical_profile_set_name:
          nullable: true
          type: string
        id:
          type: integer
        infra_id:
          type: integer
        infra_name:
          type: string
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          type: integer
        tags:
          items:
            type: string
          type: array
        timetable_id:
          type: integer
        trains_count:
          type: integer
    ScenarioPatchRequest:
      properties:
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 128
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          type: array
    ScenarioRequest:
      properties:
        description:
          maxLength: 1024
          type: string
        electrical_profile_set_id:
          description: Electrical profile set id (if any)
          type: number
        infra_id:
          type: integer
        name:
          maxLength: 128
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - name
      - infra_id
    ScenarioResult:
      properties:
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        electrical_profile_set_id:
          nullable: true
          type: integer
        electrical_profile_set_name:
          nullable: true
          type: string
        id:
          type: integer
        infra_id:
          type: integer
        infra_name:
          type: string
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          type: integer
        tags:
          items:
            type: string
          type: array
        timetable_id:
          type: integer
        trains_count:
          type: integer
        trains_schedules:
          items:
            properties:
              departure_time:
                type: string
              id:
                type: integer
              train_name:
                type: string
              train_path:
                type: integer
            type: object
          type: array
    SearchOperationalPointResult:
      properties:
        ch:
          type: string
        geographic:
          $ref: '#/components/schemas/MultiPoint'
        infra_id:
          type: string
        name:
          type: string
        obj_id:
          type: string
        schematic:
          $ref: '#/components/schemas/MultiPoint'
        track_sections:
          items:
            properties:
              position:
                type: integer
              track:
                type: string
            required:
            - track
            - position
            type: object
          type: array
        trigram:
          type: string
        uic:
          type: integer
      required:
      - obj_id
      - name
      - geographic
      - ch
      - schematic
      - trigram
      - track_sections
    SearchProjectResult:
      properties:
        description:
          type: string
        id:
          type: integer
        image:
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        studies_count:
          type: integer
        tags:
          type: array
      required:
      - id
      - name
      - description
      - last_modification
    SearchQuery:
      example:
      - and
      - - or
        - - search
          - - name
          - mich st
        - - search
          - - trigram
          - null
      - - =
        - - infra_id
        - 2
      items:
        oneOf:
        - type: boolean
        - type: number
        - type: integer
        - type: string
        - $ref: '#/components/schemas/SearchQuery'
      minItems: 1
      nullable: true
      type: array
    SearchScenarioResult:
      properties:
        description:
          type: string
        electrical_profile_set_id:
          type: integer
        id:
          type: integer
        infra_id:
          type: integer
        infra_name:
          type: string
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        study_id:
          type: integer
        tags:
          items:
            type: string
          type: array
        trains_count:
          type: integer
      required:
      - id
      - name
      - study_id
      - last_modification
      - infra_id
      - timetable_id
    SearchSignalResult:
      properties:
        aspects:
          items:
            type: string
          type: array
        geographic:
          $ref: '#/components/schemas/Point'
        infra_id:
          type: integer
        label:
          type: string
        line_code:
          type: integer
        line_name:
          type: string
        schematic:
          $ref: '#/components/schemas/Point'
        systems:
          items:
            type: string
          type: array
        type:
          type: string
      required:
      - label
      - geographic
      - schematic
      - line_code
      - line_name
    SearchStudyResult:
      properties:
        description:
          type: string
        id:
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        project_id:
          type: integer
        scenarios_count:
          type: integer
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - name
      - project_id
      - last_modification
    SearchTrackResult:
      properties:
        infra_id:
          type: integer
        line_code:
          type: integer
        line_name:
          type: string
      required:
      - infra_id
      - line_code
      - line_name
    Side:
      enum:
      - LEFT
      - RIGHT
      - CENTER
      type: string
    Signal:
      properties:
        direction:
          $ref: '#/components/schemas/Direction'
        extensions:
          $ref: '#/components/schemas/SignalExtensions'
        id:
          $ref: '#/components/schemas/Identifier'
        linked_detector:
          nullable: true
          type: string
        logical_signals:
          items:
            $ref: '#/components/schemas/LogicalSignal'
          type: array
        position:
          format: double
          type: number
        sight_distance:
          format: double
          type: number
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - id
      - track
      - position
      - direction
      - sight_distance
      type: object
    SignalExtensions:
      properties:
        sncf:
          allOf:
          - $ref: '#/components/schemas/SignalSncfExtension'
          nullable: true
      type: object
    SignalSncfExtension:
      properties:
        aspects:
          items:
            type: string
          type: array
        comment:
          type: string
        default_aspect:
          type: string
        installation_type:
          type: string
        is_in_service:
          type: boolean
        is_lightable:
          type: boolean
        is_operational:
          type: boolean
        label:
          type: string
        side:
          $ref: '#/components/schemas/Side'
        support_type:
          type: string
        type_code:
          type: string
        value:
          type: string
      required:
      - aspects
      - comment
      - default_aspect
      - installation_type
      - is_in_service
      - is_lightable
      - is_operational
      - label
      - side
      - support_type
      - type_code
      - value
      type: object
    SimulationReport:
      properties:
        base:
          $ref: '#/components/schemas/SimulationReportByTrain'
        curves:
          items:
            properties:
              position:
                type: number
              radius:
                type: number
            required:
            - position
            - radius
            type: object
          minItems: 2
          type: array
        eco:
          $ref: '#/components/schemas/SimulationReportByTrain'
        electrification_ranges:
          description: A list of ranges which should be contiguous and which describe the electrification on the path and if it is handled by the train
          items:
            $ref: '#/components/schemas/ElectrificationRange'
          minItems: 1
          type: array
        id:
          type: integer
        labels:
          items:
            type: string
          type: array
        name:
          type: string
        path:
          description: id of the path used for projection
          type: integer
        power_restriction_ranges:
          description: The list of ranges where power restrictions are applied
          items:
            $ref: '#/components/schemas/PowerRestrictionRangeItem'
          type: array
        slopes:
          items:
            properties:
              gradient:
                type: number
              position:
                type: number
            required:
            - position
            - gradient
            type: object
          minItems: 2
          type: array
        speed_limit_tags:
          type: string
        vmax:
          items:
            properties:
              position:
                type: number
              speed:
                type: number
            required:
            - position
            - speed
            type: object
          minItems: 2
          type: array
      required:
      - id
      - name
      - labels
      - path
      - vmax
      - slopes
      - curves
      - base
      - electrification_ranges
      - power_restriction_ranges
    SimulationReportByTrain:
      properties:
        head_positions:
          items:
            items:
              $ref: '#/components/schemas/SpaceTimePosition'
            minItems: 1
            type: array
          minItems: 1
          type: array
        mechanical_energy_consumed:
          format: float
          type: number
        route_aspects:
          items:
            properties:
              aspect_label:
                description: label of the new signal aspect
                type: string
              blinking:
                description: true if the signal is blinking
                type: boolean
              color:
                description: color of the aspect (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are blue)
                format: float
                type: number
              position_end:
                description: the route ends at this position on the train path
                format: float
                type: number
              position_start:
                description: the route starts at this position on the train path
                format: float
                type: number
              route_id:
                description: id of the affected route on the train path
                type: string
              signal_id:
                description: id of the updated signal
                type: string
              time_end:
                description: the aspect stops being displayed at this time
                format: float
                type: number
              time_start:
                description: the aspect starts being displayed at this time
                format: float
                type: number
            required:
            - signal_id
            - route_id
            - time_start
            - time_end
            - position_start
            - position_end
            - color
            - blinking
            - aspect_label
            type: object
          type: array
        signals:
          items:
            properties:
              aspects:
                items:
                  type: string
                type: array
              geo_position:
                items:
                  format: float
                  type: number
                maxItems: 2
                minItems: 2
                type: array
              schema_position:
                items:
                  format: float
                  type: number
                maxItems: 2
                minItems: 2
                type: array
              signal_id:
                type: integer
            required:
            - signal_id
            - aspects
            - geo_position
            - schema_position
            type: object
          type: array
        speeds:
          items:
            allOf:
            - $ref: '#/components/schemas/SpaceTimePosition'
            - properties:
                speed:
                  format: float
                  type: number
              required:
              - speed
              type: object
          minItems: 1
          type: array
        stops:
          items:
            properties:
              duration:
                format: float
                type: number
              id:
                description: Can be null if it's not an operational point
                nullable: true
                type: string
              line_code:
                type: number
              line_name:
                type: string
              name:
                description: Can be 'Unknown' if it's not an operational point
                type: string
              position:
                format: float
                type: number
              time:
                format: float
                type: number
              track_name:
                type: string
              track_number:
                type: number
            required:
            - id
            - name
            - time
            - position
            - duration
            - line_code
            - track_number
            - line_name
            - track_name
            type: object
          type: array
        tail_positions:
          items:
            items:
              $ref: '#/components/schemas/SpaceTimePosition'
            minItems: 1
            type: array
          minItems: 1
          type: array
      required:
      - speeds
      - head_positions
      - tail_positions
      - stops
      - route_aspects
      - signals
      - mechanical_energy_consumed
    Slope:
      properties:
        begin:
          format: double
          type: number
        end:
          format: double
          type: number
        gradient:
          format: double
          type: number
      required:
      - gradient
      - begin
      - end
      type: object
    SpaceTimePosition:
      properties:
        position:
          format: float
          type: number
        time:
          format: float
          type: number
      required:
      - time
      - position
      - speed
      type: object
    SpeedDependantPower:
      description: power-speed curve (in an energy source)
      properties:
        powers:
          items:
            format: float
            type: number
          type: array
        speeds:
          items:
            format: float
            type: number
          type: array
      required:
      - speeds
      - powers
      type: object
    SpeedSection:
      properties:
        extensions:
          $ref: '#/components/schemas/SpeedSectionExtensions'
        id:
          $ref: '#/components/schemas/Identifier'
        speed_limit:
          format: double
          nullable: true
          type: number
        speed_limit_by_tag:
          additionalProperties:
            format: double
            type: number
          type: object
        track_ranges:
          items:
            $ref: '#/components/schemas/ApplicableDirectionsTrackRange'
          type: array
      required:
      - id
      - speed_limit_by_tag
      - track_ranges
      type: object
    SpeedSectionExtensions:
      properties:
        lpv_sncf:
          allOf:
          - $ref: '#/components/schemas/SpeedSectionLpvSncfExtension'
          nullable: true
      type: object
    SpeedSectionLpvSncfExtension:
      properties:
        announcement:
          items:
            $ref: '#/components/schemas/Panel'
          type: array
        r:
          items:
            $ref: '#/components/schemas/Panel'
          type: array
        z:
          $ref: '#/components/schemas/Panel'
      required:
      - announcement
      - z
      - r
      type: object
    StandardAllowance:
      properties:
        allowance_type:
          enum:
          - standard
          type: string
        capacity_speed_limit:
          default: -1
          format: double
          type: number
        default_value:
          $ref: '#/components/schemas/AllowanceValue'
        distribution:
          enum:
          - MARECO
          - LINEAR
          type: string
        ranges:
          items:
            $ref: '#/components/schemas/RangeAllowance'
          type: array
      required:
      - allowance_type
      - default_value
      - ranges
      - distribution
    StatePayload:
      properties:
        infra:
          format: int64
          nullable: true
          type: integer
      type: object
    StudyResult:
      properties:
        actual_end_date:
          format: date-time
          nullable: true
          type: string
        budget:
          type: integer
        business_code:
          type: string
        creation_date:
          format: date-time
          type: string
        description:
          type: string
        expected_end_date:
          format: date-time
          nullable: true
          type: string
        id:
          type: integer
        last_modification:
          format: date-time
          type: string
        name:
          type: string
        project_id:
          type: integer
        scenarios_count:
          type: integer
        service_code:
          type: string
        start_date:
          format: date-time
          nullable: true
          type: string
        state:
          enum:
          - started
          - inProgress
          - finish
          type: string
        study_type:
          enum:
          - timeTables
          - flowRate
          - parkSizing
          - garageRequirement
          - operationOrSizing
          - operability
          - strategicPlanning
          - chartStability
          - disturbanceTests
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - id
      - name
      - project_id
      - description
      - budget
      - tags
      - service_code
      - business_code
      - creation_date
      - last_modification
      - scenarios_count
      - start_date
      - expected_end_date
      - actual_end_date
    StudyUpsertRequest:
      properties:
        actual_end_date:
          format: date-time
          nullable: true
          type: string
        budget:
          type: integer
        business_code:
          maxLength: 128
          type: string
        description:
          maxLength: 1024
          type: string
        expected_end_date:
          format: date-time
          nullable: true
          type: string
        name:
          maxLength: 128
          type: string
        service_code:
          maxLength: 128
          type: string
        start_date:
          format: date-time
          nullable: true
          type: string
        state:
          enum:
          - started
          - inProgress
          - finish
          type: string
        study_type:
          enum:
          - timeTables
          - flowRate
          - parkSizing
          - garageRequirement
          - operationOrSizing
          - operability
          - strategicPlanning
          - chartStability
          - disturbanceTests
          type: string
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - name
      - tags
    Switch:
      properties:
        extensions:
          $ref: '#/components/schemas/SwitchExtensions'
        group_change_delay:
          format: double
          type: number
        id:
          $ref: '#/components/schemas/Identifier'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/TrackEndpoint'
          type: object
        switch_type:
          $ref: '#/components/schemas/Identifier'
      required:
      - id
      - switch_type
      - group_change_delay
      - ports
      type: object
    SwitchExtensions:
      properties:
        sncf:
          allOf:
          - $ref: '#/components/schemas/SwitchSncfExtension'
          nullable: true
      type: object
    SwitchPortConnection:
      properties:
        dst:
          type: string
        src:
          type: string
      required:
      - src
      - dst
      type: object
    SwitchSncfExtension:
      properties:
        label:
          $ref: '#/components/schemas/NonBlankString'
      required:
      - label
      type: object
    SwitchType:
      example:
        groups:
          LEFT:
            dst: LEFT
            src: BASE
          RIGHT:
            dst: RIGHT
            src: BASE
        id: Point
        ports:
        - LEFT
        - RIGHT
        - BASE
      properties:
        groups:
          additionalProperties: false
          type: object
        id:
          type: string
        ports:
          items:
            type: string
          type: array
      required:
      - id
      - ports
      - groups
      type: object
    TimetableImportItem:
      properties:
        path:
          items:
            $ref: '#/components/schemas/TimetableImportPathStep'
          type: array
        rolling_stock:
          example: 2TGV2N2
          type: string
        trains:
          items:
            $ref: '#/components/schemas/TimetableImportTrain'
          type: array
      required:
      - rolling_stock
      - path
      - trains
      type: object
    TimetableImportPathLocation:
      oneOf:
      - properties:
          offset:
            format: double
            type: number
          track_section:
            type: string
          type:
            enum:
            - track_offset
            type: string
        required:
        - track_section
        - offset
        - type
        type: object
      - properties:
          type:
            enum:
            - operational_point
            type: string
          uic:
            format: int64
            type: integer
        required:
        - uic
        - type
        type: object
    TimetableImportPathSchedule:
      properties:
        arrival_time:
          format: date-time
          type: string
        departure_time:
          format: date-time
          type: string
      required:
      - arrival_time
      - departure_time
      type: object
    TimetableImportPathStep:
      properties:
        location:
          $ref: '#/components/schemas/TimetableImportPathLocation'
        schedule:
          additionalProperties:
            $ref: '#/components/schemas/TimetableImportPathSchedule'
          example:
            '7015':
              arrival_time: 2023-08-17T09:46:00+02:00
              departure_time: 2023-08-17T09:56:00+02:00
          type: object
      required:
      - location
      type: object
    TimetableImportTrain:
      properties:
        departure_time:
          example: 2023-08-17T08:46:00+02:00
          format: date-time
          type: string
        name:
          example: '7015'
          type: string
      required:
      - name
      - departure_time
      type: object
    TimetableWithSchedulesDetails:
      properties:
        id:
          type: integer
        name:
          type: string
        train_schedule_summaries:
          items:
            $ref: '#/components/schemas/TrainScheduleSummary'
          type: array
      required:
      - id
      - name
      - train_schedule_summaries
      type: object
    TrackEndpoint:
      properties:
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        track:
          $ref: '#/components/schemas/Identifier'
      required:
      - endpoint
      - track
      type: object
    TrackOffsetLocation:
      properties:
        offset:
          format: double
          type: number
        track_section:
          type: string
        type:
          enum:
          - track_offset
          type: string
      required:
      - track_section
      - offset
      - type
      type: object
    TrackRange:
      description: Track range
      properties:
        begin:
          format: float
          type: number
        end:
          example: 100
          format: float
          type: number
        track:
          example: 01234567-89ab-cdef-0123-456789abcdef
          type: string
      type: object
    TrackSection:
      properties:
        curves:
          items:
            $ref: '#/components/schemas/Curve'
          type: array
        extensions:
          $ref: '#/components/schemas/TrackSectionExtensions'
        geo:
          $ref: '#/components/schemas/GeometryValue'
        id:
          $ref: '#/components/schemas/Identifier'
        length:
          format: double
          type: number
        loading_gauge_limits:
          items:
            $ref: '#/components/schemas/LoadingGaugeLimit'
          type: array
        sch:
          $ref: '#/components/schemas/GeometryValue'
        slopes:
          items:
            $ref: '#/components/schemas/Slope'
          type: array
      required:
      - id
      - length
      - slopes
      - curves
      - geo
      - sch
      type: object
    TrackSectionExtensions:
      properties:
        sncf:
          allOf:
          - $ref: '#/components/schemas/TrackSectionSncfExtension'
          nullable: true
      type: object
    TrackSectionLink:
      properties:
        dst:
          $ref: '#/components/schemas/TrackEndpoint'
        id:
          $ref: '#/components/schemas/Identifier'
        src:
          $ref: '#/components/schemas/TrackEndpoint'
      required:
      - id
      - src
      - dst
      type: object
    TrackSectionLocation:
      description: A track location (track section and offset)
      properties:
        offset:
          description: The offset on the track section
          example: 42.0
          format: float
          type: number
        track_section:
          description: The track section ID
          example: 61205924-6667-11e3-81ff-01f464e0362d
          type: string
      required:
      - track_section
      - offset
      type: object
    TrackSectionSncfExtension:
      properties:
        line_code:
          format: int32
          type: integer
        line_name:
          $ref: '#/components/schemas/NonBlankString'
        track_name:
          $ref: '#/components/schemas/NonBlankString'
        track_number:
          format: int32
          type: integer
      required:
      - line_code
      - line_name
      - track_number
      - track_name
      type: object
    TrainSchedule:
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/Comfort'
        departure_time:
          format: float
          type: number
        id:
          type: number
        initial_speed:
          format: float
          type: number
        labels:
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          type: integer
        power_restriction_ranges:
          description: A list of ranges along the train path where power restrictions apply.
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          type: integer
        scheduled_points:
          items:
            properties:
              path_offset:
                description: Offset in meters from the start of the path at which the train must be.
                format: float
                type: number
              time:
                description: Time in seconds (elapsed since the train's departure) at which the train must be.
                format: float
                type: number
            required:
            - path_offset
            - time
            type: object
          type: array
        speed_limit_tags:
          description: Train category for speed limits
          nullable: true
          type: string
        timetable_id:
          type: integer
        train_name:
          type: string
      required:
      - id
      - train_name
      - timetable_id
      - rolling_stock_id
      - departure_time
      - path_id
      - initial_speed
      - labels
      - scheduled_points
      - allowances
      - speed_limit_tags
      - comfort
      - options
      - power_restriction_ranges
      type: object
    TrainScheduleBatchItem:
      properties:
        allowances:
          default: []
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/Comfort'
        departure_time:
          format: float
          type: number
        initial_speed:
          format: float
          type: number
        labels:
          default: []
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        power_restriction_ranges:
          description: A list of ranges along the train path where power restrictions apply.
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          type: integer
        scheduled_points:
          default: []
          items:
            properties:
              path_offset:
                description: Offset in meters from the start of the path at which the train must be.
                format: float
                type: number
              time:
                description: Time in seconds (elapsed since the train's departure) at which the train must be.
                format: float
                type: number
            required:
            - path_offset
            - time
            type: object
          type: array
        speed_limit_tags:
          description: Train category for speed limits
          nullable: true
          type: string
        train_name:
          type: string
      required:
      - train_name
      - departure_time
      - initial_speed
      - rolling_stock_id
      type: object
    TrainScheduleOptions:
      description: Options for the standalone simulation
      properties:
        ignore_electrical_profiles:
          nullable: true
          type: boolean
      type: object
    TrainSchedulePatch:
      properties:
        allowances:
          items:
            $ref: '#/components/schemas/Allowance'
          type: array
        comfort:
          $ref: '#/components/schemas/Comfort'
        departure_time:
          format: float
          type: number
        id:
          type: integer
        initial_speed:
          format: float
          type: number
        labels:
          items:
            type: string
          type: array
        options:
          allOf:
          - $ref: '#/components/schemas/TrainScheduleOptions'
          nullable: true
        path_id:
          type: integer
        power_restriction_ranges:
          description: A list of ranges along the train path where power restrictions apply.
          items:
            $ref: '#/components/schemas/PowerRestrictionRange'
          nullable: true
          type: array
        rolling_stock_id:
          type: integer
        scheduled_points:
          items:
            properties:
              path_offset:
                description: Offset in meters from the start of the path at which the train must be.
                format: float
                type: number
              time:
                description: Time in seconds (elapsed since the train's departure) at which the train must be.
                format: float
                type: number
            required:
            - path_offset
            - time
            type: object
          type: array
        speed_limit_tags:
          description: Train category for speed limits
          type: string
        train_name:
          type: string
      required:
      - id
      type: object
    TrainScheduleSummary:
      allOf:
      - $ref: '#/components/schemas/TrainSchedule'
      - properties:
          arrival_time:
            type: number
          invalid_reasons:
            items:
              $ref: '#/components/schemas/InvalidTrainValues'
            type: array
          mechanical_energy_consumed:
            properties:
              base:
                type: number
              eco:
                nullable: true
                type: number
            required:
            - base
            - eco
            type: object
          path_length:
            type: integer
          stops_count:
            type: integer
        required:
        - arrival_time
        - mechanical_energy_consumed
        - stops_count
        - path_length
        - invalid_reasons
        type: object
    UpdateOperation:
      properties:
        obj_id:
          type: string
        obj_type:
          $ref: '#/components/schemas/ObjectType'
        railjson_patch:
          description: The partial Railjson object patch to apply
          type: object
      required:
      - obj_id
      - obj_type
      - railjson_patch
      type: object
    Version:
      properties:
        git_describe:
          nullable: true
          type: string
      required:
      - git_describe
      type: object
    ViewMetadata:
      properties:
        attribution:
          type: string
        maxzoom:
          example: 18
          type: integer
        minzoom:
          type: integer
        name:
          example: track_sections
          type: string
        promotedId:
          example:
            track_sections: id
          type: object
        scheme:
          example: xyz
          type: string
        tiles:
          items:
            example: http://localhost:7070/tile/track_sections/geo/{z}/{x}/{y}/?infra=1
            type: string
          type: array
        type:
          example: vector
          type: string
    Waypoint:
      oneOf:
      - properties:
          id:
            $ref: '#/components/schemas/Identifier'
          type:
            enum:
            - BufferStop
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            $ref: '#/components/schemas/Identifier'
          type:
            enum:
            - Detector
            type: string
        required:
        - id
        - type
        type: object
    WaypointType:
      enum:
      - Detector
      - BufferStop
      type: string
    Zone:
      description: Geographic and Schematic bounding boxes of a zone impacted by a list of operations
      properties:
        geo:
          $ref: '#/components/schemas/BoundingBox'
        sch:
          $ref: '#/components/schemas/BoundingBox'
      required:
      - geo
      - sch
      type: object
info:
  description: OSRD Edition service description
  title: OSRD Editoast
  version: 0.1.0
openapi: 3.0.2
paths:
  /documents/:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  document_key:
                    example: 42
                    type: integer
                type: object
          description: The key of the added document
      summary: Add a document
      tags:
      - documents
  /documents/{key}/:
    delete:
      parameters:
      - description: A key identifying the document
        in: path
        name: key
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Delete a document
      tags:
      - documents
    get:
      parameters:
      - description: A key identifying the document
        in: path
        name: key
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: A document of any type (can be an image, a pdf...)
      summary: Retrieve a document binary content
      tags:
      - documents
  /electrical_profile_set/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      example: France 2023
                      type: string
                  required:
                  - id
                  - name
                  type: object
                type: array
          description: The list of ids and names of electrical profile sets available
      summary: Retrieve the list of ids and names of electrical profile sets available
      tags:
      - electrical_profiles
    post:
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfile'
          description: The list of ids and names of electrical profile sets available
      summary: import a new electrical profile set
      tags:
      - electrical_profiles
  /electrical_profile_set/{id}/:
    get:
      parameters:
      - description: Electrical profile set ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ElectricalProfile'
                type: array
          description: The list of electrical profiles in the set
      summary: Retrieve the set of electrical profiles with the given id
      tags:
      - electrical_profiles
  /electrical_profile_set/{id}/level_order/:
    get:
      parameters:
      - description: Electrical profile set ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                example:
                  '1500':
                  - A
                  - B
                  - C
                  '25000':
                  - '25000'
                  - '22500'
                  - '20000'
                type: object
          description: A dictionary mapping catenary modes to a list of electrical profiles ordered by decreasing strength
      summary: Retrieve the order of strength of the electrical profiles in the set with the given id
      tags:
      - electrical_profiles
  /health/:
    get:
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Check if Editoast is running correctly
  /layers/layer/{layer_slug}/mvt/{view_slug}/:
    get:
      parameters:
      - in: path
        name: layer_slug
        required: true
        schema:
          title: Layer Slug
          type: string
      - in: path
        name: view_slug
        required: true
        schema:
          title: View Slug
          type: string
      - in: query
        name: infra
        required: true
        schema:
          title: Infra id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewMetadata'
          description: Successful Response
      summary: Mvt View Metadata
      tags:
      - layers
  /layers/tile/{layer_slug}/{view_slug}/{z}/{x}/{y}/:
    get:
      parameters:
      - in: path
        name: layer_slug
        required: true
        schema:
          title: Layer Slug
          type: string
      - in: path
        name: view_slug
        required: true
        schema:
          title: View Slug
          type: string
      - in: path
        name: z
        required: true
        schema:
          title: Z
          type: integer
      - in: path
        name: x
        required: true
        schema:
          title: X
          type: integer
      - in: path
        name: y
        required: true
        schema:
          title: Y
          type: integer
      - in: query
        name: infra
        required: true
        schema:
          title: Infra
          type: integer
      responses:
        '200':
          content:
            application/x-octet-stream:
              schema:
                type: string
          description: Successful Response
      summary: Mvt tile from the cache or the database, cache data in redis if needed
      tags:
      - layers
  /light_rolling_stock/:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          default: 1
          minimum: 1
          type: integer
      - description: Number of elements by page
        in: query
        name: page_size
        schema:
          default: 100
          maximum: 10000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: number
                  next: {}
                  previous: {}
                  results:
                    items:
                      $ref: '#/components/schemas/LightRollingStock'
                    type: array
                required:
                - results
                type: object
          description: The rolling stock list
      summary: Paginated list of rolling stock with a lighter response
      tags:
      - rolling_stock
  /light_rolling_stock/{id}/:
    get:
      parameters:
      - description: Rolling Stock ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightRollingStock'
          description: The rolling stock with their simplified effort curves
      summary: Retrieve a rolling stock's light representation
      tags:
      - rolling_stock
  /pathfinding/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathQuery'
        description: Path information
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: The created Path
      summary: Create a Path
  /pathfinding/{id}/:
    delete:
      parameters:
      - description: Path ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Delete a path
      tags:
      - pathfinding
    get:
      parameters:
      - description: Path ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: The retrieved path
      summary: Retrieve a Path
      tags:
      - pathfinding
    put:
      parameters:
      - description: Path ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathQuery'
        description: Updated Path
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Path'
                type: array
          description: The updated path
      summary: Update a path
      tags:
      - pathfinding
  /pathfinding/{path_id}/catenaries/:
    get:
      parameters:
      - description: The path's id
        in: path
        name: path_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  catenary_ranges:
                    items:
                      $ref: '#/components/schemas/CatenaryRange'
                    type: array
                  warnings:
                    items:
                      properties:
                        catenary_id:
                          type: string
                        overlapping_ranges:
                          items:
                            $ref: '#/components/schemas/TrackRange'
                          type: array
                        type:
                          enum:
                          - CatenaryOverlap
                          type: string
                      required:
                      - type
                      - catenary_id
                      - overlapping_ranges
                      type: object
                    type: array
                required:
                - catenary_ranges
                - warnings
                type: object
          description: A list of ranges associated to catenary modes. When a catenary overlapping another is found, a warning is added to the list.
      summary: Retrieve the modes of catenaries along a path
      tags:
      - infra
  /projects/:
    get:
      parameters:
      - in: query
        name: ordering
        schema:
          enum:
          - NameAsc
          - NameDesc
          - CreationDateAsc
          - CreationDateDesc
          - LastModifiedAsc
          - LastModifiedDesc
          type: string
      - description: Filter projects by name
        in: query
        name: name
        schema:
          type: string
      - description: Filter projects by description
        in: query
        name: description
        schema:
          type: string
      - description: Filter projects by tags
        in: query
        name: tags
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          minimum: 0
          type: integer
      - description: Number of elements by page
        in: query
        name: page_size
        schema:
          default: 100
          maximum: 10000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: number
                  next: {}
                  previous: {}
                  results:
                    items:
                      $ref: '#/components/schemas/ProjectResult'
                    type: array
                type: object
          description: the project list
      summary: Paginated list of projects
      tags:
      - projects
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResult'
          description: The created project
      summary: Create a new project
      tags:
      - projects
  /projects/{project_id}/:
    delete:
      parameters:
      - description: project id you want to delete
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: delete a project
      tags:
      - projects
    get:
      parameters:
      - description: project id you want to retrieve
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResult'
          description: The project info
      summary: Retrieve a project
      tags:
      - projects
    patch:
      parameters:
      - description: project id you want to update
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchRequest'
        description: The fields you want to update
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResult'
          description: The project updated
      summary: Update a project
      tags:
      - projects
  /projects/{project_id}/studies/:
    get:
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          enum:
          - NameAsc
          - NameDesc
          - CreationDateAsc
          - CreationDateDesc
          - LastModifiedAsc
          - LastModifiedDesc
          type: string
      - description: Filter operational studies by name
        in: query
        name: name
        schema:
          type: string
      - description: Filter operational studies by description
        in: query
        name: description
        schema:
          type: string
      - description: Filter operational studies by tags
        in: query
        name: tags
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          minimum: 0
          type: integer
      - description: Number of elements by page
        in: query
        name: page_size
        schema:
          default: 100
          maximum: 10000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: number
                  next: {}
                  previous: {}
                  results:
                    items:
                      $ref: '#/components/schemas/StudyResult'
                    type: array
                type: object
          description: the studies list
      summary: Paginated list of operational studies
      tags:
      - studies
    post:
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyUpsertRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResult'
          description: The created operational study
      summary: Create a new operational study
      tags:
      - studies
  /projects/{project_id}/studies/{study_id}/:
    delete:
      parameters:
      - description: project id refered to the operational study
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      - description: study id you want to delete
        in: path
        name: study_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: delete an operational study
      tags:
      - studies
    get:
      parameters:
      - description: project id refered to the operational study
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      - description: study id you want to retrieve
        in: path
        name: study_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResult'
          description: The operational study info
      summary: Retrieve an operational study
      tags:
      - studies
    patch:
      parameters:
      - description: project id refered to the study
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      - description: study id you want to retrieve
        in: path
        name: study_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyUpsertRequest'
        description: The fields you want to update
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResult'
          description: The operational study updated
      summary: update an operational study
      tags:
      - studies
  /projects/{project_id}/studies/{study_id}/scenarios/:
    get:
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          enum:
          - NameAsc
          - NameDesc
          - CreationDateAsc
          - CreationDateDesc
          - LastModifiedAsc
          - LastModifiedDesc
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          minimum: 0
          type: integer
      - description: Number of elements by page
        in: query
        name: page_size
        schema:
          default: 100
          maximum: 10000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: number
                  next: {}
                  previous: {}
                  results:
                    items:
                      $ref: '#/components/schemas/ScenarioListResult'
                    type: array
                type: object
          description: list of scenarios
      summary: Paginated list of scenarios
      tags:
      - scenarios
    post:
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResult'
          description: The created scenario
      summary: Create a new scenario
      tags:
      - scenarios
  /projects/{project_id}/studies/{study_id}/scenarios/{scenario_id}/:
    delete:
      parameters:
      - description: project id refered to the scenario
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      - description: study id refered to the scenario
        in: path
        name: study_id
        required: true
        schema:
          type: integer
      - description: scenario id you want to delete
        in: path
        name: scenario_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: delete a scenario
      tags:
      - scenarios
    get:
      parameters:
      - description: project id refered to the scenario
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      - in: path
        name: study_id
        required: true
        schema:
          type: integer
      - description: scenario id you want to retrieve
        in: path
        name: scenario_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResult'
          description: The operational study info
      summary: Retrieve a scenario
      tags:
      - scenarios
    patch:
      parameters:
      - description: project id refered to the scenario
        in: path
        name: project_id
        required: true
        schema:
          type: integer
      - description: study refered to the scenario
        in: path
        name: study_id
        required: true
        schema:
          type: integer
      - description: scenario you want to update
        in: path
        name: scenario_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioPatchRequest'
        description: The fields you want to update
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResult'
          description: The scenario updated
      summary: update a scenario
      tags:
      - scenarios
  /rolling_stock/:
    post:
      parameters:
      - description: whether or not the rolling_stock can be edited/deleted.
        in: query
        name: locked
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockUpsertPayload'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The created rolling stock
      summary: Create a rolling stock
      tags:
      - rolling_stock
  /rolling_stock/{id}/:
    delete:
      parameters:
      - description: rolling_stock id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: force the deletion even if it’s used
        in: query
        name: force
        schema:
          default: false
          type: boolean
      responses:
        '204':
          description: No content
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockUsage'
          description: Rolling stock is used in a train schedule.
      summary: Delete a rolling_stock and all entities linked to it
      tags:
      - rolling_stock
    get:
      parameters:
      - description: Rolling Stock ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The rolling stock information
      summary: Retrieve a rolling stock
      tags:
      - rolling_stock
    patch:
      parameters:
      - description: Rolling Stock ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockUpsertPayload'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
          description: The updated rolling stock
      summary: Patch a rolling stock
      tags:
      - rolling_stock
  /rolling_stock/{id}/livery/:
    post:
      parameters:
      - description: Rolling Stock ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                images:
                  items:
                    format: binary
                    type: string
                  type: array
                name:
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockLivery'
          description: The rolling stock livery
      summary: Create a rolling stock livery
      tags:
      - rolling_stock
      - rolling_stock_livery
  /rolling_stock/{id}/locked/:
    patch:
      parameters:
      - description: Rolling_stock id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                locked:
                  type: boolean
              type: object
        description: New locked value
        required: true
      responses:
        '204':
          description: No content
        '404':
          description: Not found
      summary: Update rolling_stock locked field
      tags:
      - rolling_stock
  /search/:
    post:
      parameters:
      - description: number of results
        in: query
        name: page_size
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                object:
                  example: operationalpoint
                  type: string
                page:
                  default: 1
                  type: integer
                page_size:
                  default: 25
                  type: integer
                query:
                  $ref: '#/components/schemas/SearchQuery'
              type: object
        description: Search query
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                  - $ref: '#/components/schemas/SearchTrackResult'
                  - $ref: '#/components/schemas/SearchOperationalPointResult'
                  - $ref: '#/components/schemas/SearchSignalResult'
                  - $ref: '#/components/schemas/SearchStudyResult'
                  - $ref: '#/components/schemas/SearchProjectResult'
                  - $ref: '#/components/schemas/SearchScenarioResult'
                type: array
          description: Search results, the structure of the returned objects depend on their type
      summary: Generic search endpoint
  /stdcm/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comfort:
                  $ref: '#/components/schemas/Comfort'
                end_time:
                  format: double
                  type: number
                infra_id:
                  type: integer
                margin_after:
                  description: |
                    Margin of y seconds after the train passage, which means that the path used by the train should
                    be free and available at least y seconds after its passage.
                  format: double
                  type: number
                margin_before:
                  description: |
                    Margin of x seconds before the train passage, which means that the path used by the train should
                    be free and available at least x seconds before its passage.
                  format: double
                  type: number
                maximum_departure_delay:
                  description: By how long we can shift the departure time (s). Defaults to 2h if unspecified.
                  format: double
                  type: number
                maximum_run_time:
                  description: |
                    Specifies how long the total run time can be in seconds.
                    Defaults to 43200s if unspecified, meaning that the result can't exceed 12h.
                  format: double
                  type: number
                rolling_stock_id:
                  type: integer
                rolling_stocks:
                  items:
                    type: integer
                  type: array
                speed_limit_tags:
                  description: Train category for speed limits
                  type: string
                standard_allowance:
                  $ref: '#/components/schemas/AllowanceValue'
                start_time:
                  format: double
                  type: number
                steps:
                  items:
                    properties:
                      duration:
                        format: float
                        type: number
                      waypoints:
                        $ref: '#/components/schemas/Waypoint'
                    required:
                    - duration
                    - waypoints
                    type: object
                  minItems: 2
                  type: array
                timetable_id:
                  description: timetable ID
                  type: integer
              required:
              - infra_id
              - timetable_id
              - steps
              - rolling_stocks
              - rolling_stock_id
              - comfort
              - standard_allowance
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - properties:
                    path:
                      $ref: '#/components/schemas/Path'
                    simulation:
                      $ref: '#/components/schemas/SimulationReport'
                  required:
                  - simulation
                  - path
                - properties:
                    error:
                      description: Error message
                      example: No path could be found
                      type: string
                  type: object
          description: Simulation result
        '400':
          description: The request body is invalid
      summary: Find a stdcm and return a simulation result
      tags:
      - stdcm
  /timetable/{id}/:
    get:
      description: Return a specific timetable with its associated schedules
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableWithSchedulesDetails'
          description: Timetable with schedules
        '404':
          description: Timetable not found
      summary: Return a specific timetable with its associated schedules
      tags:
      - timetable
    post:
      description: Import a timetable
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TimetableImportItem'
              type: array
        description: ''
        required: true
      responses:
        '204':
          description: Timetable was successfully imported
      summary: Import a timetable
      tags:
      - timetable
  /timetable/{id}/conflicts/:
    get:
      description: |-
        Compute spacing conflicts for a given timetable
        TODO: This should compute itinary conflicts too
      parameters:
      - description: Timetable id
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Conflict'
                type: array
          description: Spacing conflicts
      summary: Compute spacing conflicts for a given timetable
      tags:
      - timetable
  /train_schedule/:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  items:
                    type: integer
                  type: array
              required:
              - ids
              type: object
        required: true
      responses:
        '204':
          description: No content
      summary: Delete multiple train schedule
      tags:
      - train_schedule
    patch:
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TrainSchedulePatch'
              minimum: 1
              type: array
        description: A list of changes. Each changeset contains the corresponding train id
        required: true
      responses:
        '200':
          description: The train schedule was updated successfully
      summary: Update train schedules and run a simulation accordingly
      tags:
      - train_schedule
  /train_schedule/results/:
    get:
      parameters:
      - description: Path id used to project the train path
        in: query
        name: path_id
        required: true
        schema:
          type: integer
      - description: Timetable id
        in: query
        name: timetable_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SimulationReport'
                type: array
          description: The train schedules results
      summary: Retrieve the simulation result of multiple train schedules of the timetable
      tags:
      - train_schedule
  /train_schedule/standalone_simulation/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                path:
                  type: integer
                schedules:
                  items:
                    $ref: '#/components/schemas/TrainScheduleBatchItem'
                  minItems: 1
                  type: array
                timetable:
                  type: integer
              required:
              - timetable
              - path
              - schedules
              type: object
        description: The list of train schedules to simulate
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  format: integer
                  type: number
                minItems: 1
                type: array
          description: The ids of the train_schedules created
      summary: Create a batch of train schedule and run simulations accordingly
      tags:
      - train_schedule
  /train_schedule/{id}/:
    delete:
      parameters:
      - description: Train schedule ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No content
      summary: Delete a train schedule and its result
      tags:
      - train_schedule
    get:
      parameters:
      - description: Train schedule ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainSchedule'
          description: The train schedule info
      summary: Retrieve a train schedule
      tags:
      - train_schedule
  /train_schedule/{id}/result/:
    get:
      parameters:
      - description: Train schedule ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Path id used to project the train path
        in: query
        name: path_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationReport'
          description: The train schedule result
      summary: Retrieve a simulation result
      tags:
      - train_schedule
  /version/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Return the service version
  /version/core/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Return the core service version
tags:
- description: Infra
  name: infra
- description: Operations related to infra routes
  name: routes
- description: Timetable
  name: timetable
- description: Pathfinding operations
  name: pathfinding
- description: Map layers
  name: layers
- description: Electrical profiles
  name: electrical_profiles
- description: Train Schedule
  name: train_schedule

