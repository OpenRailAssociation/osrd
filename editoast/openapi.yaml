openapi: 3.0.3
info:
  title: OSRD Editoast
  description: All HTTP endpoints of Editoast
  license:
    name: LGPL
    url: https://www.gnu.org/licenses/lgpl-3.0.html
  version: 0.1.0
paths:
  /documents:
    post:
      tags:
      - documents
      summary: Post a new document (content_type by header + binary data)
      parameters:
      - name: content_type
        in: header
        description: The document's content type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '201':
          description: The document was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewDocumentResponse'
  /documents/{document_key}:
    get:
      tags:
      - documents
      summary: Returns a document of any type
      parameters:
      - name: document_key
        in: path
        description: The document's key
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The document's binary content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    delete:
      tags:
      - documents
      summary: Delete an existing document
      parameters:
      - name: document_key
        in: path
        description: The document's key
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The document was deleted
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /electrical_profile_set:
    get:
      tags:
      - electrical_profiles
      summary: Retrieve the list of ids and names of electrical profile sets available
      responses:
        '200':
          description: The list of ids and names of electrical profile sets available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LightElectricalProfileSet'
    post:
      tags:
      - electrical_profiles
      summary: import a new electrical profile set
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricalProfileSetData'
        required: true
      responses:
        '200':
          description: The list of ids and names of electrical profile sets available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfileSet'
  /electrical_profile_set/{electrical_profile_set_id}:
    get:
      tags:
      - electrical_profiles
      summary: Return a specific set of electrical profiles
      parameters:
      - name: electrical_profile_set_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The list of electrical profiles in the set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricalProfileSetData'
        '404':
          description: The requested electrical profile set was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    delete:
      tags:
      - electrical_profiles
      summary: Delete an electrical profile set
      parameters:
      - name: electrical_profile_set_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The electrical profile was deleted successfully
        '404':
          description: The requested electrical profie was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /electrical_profile_set/{electrical_profile_set_id}/level_order:
    get:
      tags:
      - electrical_profiles
      summary: Return the electrical profile value order for this set
      parameters:
      - name: electrical_profile_set_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: A dictionary mapping electrification modes to a list of electrical profiles ordered by decreasing strength
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/LevelValues'
              example:
                1500V:
                - A
                - B
                - C
                25000V:
                - 25000V
                - 22500V
                - 20000V
        '404':
          description: The requested electrical profile set was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /health:
    get:
      responses:
        '200':
          description: Check if Editoast is running correctly
          content:
            text/plain:
              schema:
                type: string
  /infra:
    get:
      tags:
      - infra
      summary: Lists all infras along with their current loading state in Core
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      responses:
        '200':
          description: All infras, paginated
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationStats'
                - type: object
                  required:
                  - results
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/InfraWithState'
    post:
      tags:
      - infra
      summary: Creates an empty infra
      description: The infra may be edited by batch later via the `POST /infra/ID` or `POST /infra/ID/railjson` endpoints.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              properties:
                name:
                  type: string
                  description: The name to give to the new infra
              additionalProperties: false
        required: true
      responses:
        '201':
          description: The created infra
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
  /infra/railjson:
    post:
      tags:
      - infra
      summary: Import an infra from railjson
      parameters:
      - name: name
        in: query
        description: The name of the infrastructure.
        required: true
        schema:
          type: string
      - name: generate_data
        in: query
        description: Flag indicating whether to generate data.
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RailJson'
        required: true
      responses:
        '201':
          description: The imported infra id
          content:
            application/json:
              schema:
                type: object
                required:
                - infra
                properties:
                  infra:
                    type: integer
                    format: int64
        '404':
          description: The infra was not found
  /infra/refresh:
    post:
      tags:
      - infra
      summary: Refresh infra generated geographic layers
      parameters:
      - name: force
        in: query
        required: false
        schema:
          type: boolean
      - name: infras
        in: query
        description: |-
          A comma-separated list of infra IDs to refresh

          If not provided, all available infras will be refreshed.
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                required:
                - infra_refreshed
                properties:
                  infra_refreshed:
                    type: array
                    items:
                      type: integer
                      format: int64
                    description: The list of infras that were refreshed successfully
        '404':
          description: Invalid infra ID query parameters
  /infra/voltages:
    get:
      tags:
      - infra
      - rolling_stock
      summary: Returns the set of voltages for all infras and rolling_stocks modes.
      responses:
        '200':
          description: Voltages list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - 750V
              - 1500V
              - 2500.5V
        '404':
          description: The infra was not found
  /infra/{infra_id}:
    get:
      tags:
      - infra
      summary: Retrieve a specific infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The infra
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraWithState'
        '404':
          description: Infra ID not found
    post:
      tags:
      - infra
      summary: Edit the content of an infrastructure
      description: |-
        Takes a batch of operations. An operation is a JSON patch document that will
        be applied to the RailJSON description of the appropriate infra object.

        The consistency of the patch with the RailJSON schema is checked. If a patch
        is erroneous, the whole batch is rejected.

        After editing the object, the generated cartographic layers are invalidated and
        regenerated. The edition step fails if the regeneration fails.
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
        required: true
      responses:
        '200':
          description: The result of the operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfraObject'
    put:
      tags:
      - infra
      summary: Rename an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              properties:
                name:
                  type: string
                  description: The new name to give the infra
        required: true
      responses:
        '200':
          description: The infra has been renamed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infra'
        '404':
          description: Infra ID not found
    delete:
      tags:
      - infra
      summary: Delete an infra and all entities linked to it.
      description: |-
        This operation cannot be undone.

        So beware.

        You've been warned.

        This operation may take a while to complete.
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The infra has been deleted
        '404':
          description: Infra ID not found
  /infra/{infra_id}/attached/{track_id}:
    get:
      tags:
      - infra
      summary: Retrieve all objects attached to a given track
      parameters:
      - name: infra_id
        in: path
        description: An infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: track_id
        in: path
        description: A track section ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: All objects attached to the given track (arranged by types)
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
  /infra/{infra_id}/auto_fixes:
    get:
      tags:
      - infra
      summary: Retrieve a list of operations to fix infra issues
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The list of suggested operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operation'
  /infra/{infra_id}/clone:
    post:
      tags:
      - infra
      summary: Duplicate an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: The name of the new infra
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The new infra ID
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                minimum: 0
        '404':
          description: Infra ID not found
  /infra/{infra_id}/errors:
    get:
      tags:
      - infra
      summary: A paginated list of errors related to an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      - name: level
        in: query
        description: Whether the response should include errors or warnings
        required: false
        schema:
          type: string
          enum:
          - warnings
          - errors
          - all
      - name: error_type
        in: query
        description: The type of error to filter on
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/InfraErrorTypeLabel'
          nullable: true
      - name: object_id
        in: query
        description: Filter errors and warnings related to a given object
        required: false
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: A paginated list of errors
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationStats'
                - type: object
                  required:
                  - results
                  properties:
                    results:
                      type: array
                      items:
                        type: object
                        required:
                        - information
                        properties:
                          information:
                            $ref: '#/components/schemas/InfraError'
  /infra/{infra_id}/lines/{line_code}/bbox:
    get:
      tags:
      - infra
      summary: Returns the BBoxes of a line
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: line_code
        in: path
        description: A line code
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The BBox of the line
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoundingBox'
  /infra/{infra_id}/load:
    post:
      tags:
      - infra
      summary: Instructs Core to load an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The infra was loaded successfully
        '404':
          description: The infra was not found
  /infra/{infra_id}/lock:
    post:
      tags:
      - infra
      summary: Lock an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The infra was locked successfully
        '404':
          description: The infra was not found
  /infra/{infra_id}/objects/{object_type}:
    post:
      tags:
      - infra
      summary: Retrieves specific infra objects
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: object_type
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObjectType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The list of objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfraObjectWithGeometry'
        '400':
          description: Duplicate object ids provided
        '404':
          description: Object ID or infra ID invalid
  /infra/{infra_id}/path_properties:
    post:
      tags:
      - pathfinding
      summary: Compute path properties
      parameters:
      - name: infra_id
        in: path
        description: The infra id
        required: true
        schema:
          type: integer
          format: int64
      - name: props
        in: query
        description: Path properties
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Property'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathPropertiesInput'
        required: true
      responses:
        '200':
          description: Path properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathProperties'
  /infra/{infra_id}/pathfinding:
    post:
      tags:
      - infra
      - pathfinding
      summary: This endpoint search path between starting and ending track locations
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: number
        in: query
        required: false
        schema:
          type: integer
          format: int32
          nullable: true
          minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfraPathfindingInput'
        required: true
      responses:
        '200':
          description: A list of shortest paths between starting and ending track locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathfindingOutput'
  /infra/{infra_id}/pathfinding/blocks:
    post:
      tags:
      - pathfinding
      summary: Compute a pathfinding
      parameters:
      - name: infra_id
        in: path
        description: The infra id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathfindingInput'
        required: true
      responses:
        '200':
          description: Pathfinding Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathfindingResult'
  /infra/{infra_id}/railjson:
    get:
      tags:
      - infra
      summary: Serialize an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The infra in railjson format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RailJson'
        '404':
          description: The infra was not found
  /infra/{infra_id}/routes/nodes:
    post:
      tags:
      - infra
      - routes
      summary: Returns the list of routes crossing the specified nodes, along with the available positions for each of them.
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: A mapping node_id -> node_state | null
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
                nullable: true
        required: true
      responses:
        '200':
          description: A list of route IDs along with available positions for each specified node
          content:
            application/json:
              schema:
                type: object
                required:
                - routes
                - available_node_positions
                properties:
                  available_node_positions:
                    type: object
                    description: List of available positions for each node on the corresponding routes
                    additionalProperties:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                  routes:
                    type: array
                    items:
                      type: string
                    description: List of route ids crossing a selection of nodes
  /infra/{infra_id}/routes/track_ranges:
    get:
      tags:
      - infra
      - routes
      summary: Compute the track ranges through which routes passes.
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: routes
        in: query
        description: A list of comma-separated route ids
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Foreach route, either tracks_ranges + switches found on the route, or an error
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - allOf:
                    - $ref: '#/components/schemas/RoutePath'
                    - type: object
                      required:
                      - type
                      properties:
                        type:
                          type: string
                          enum:
                          - Computed
                  - type: object
                    required:
                    - type
                    properties:
                      type:
                        type: string
                        enum:
                        - NotFound
                  - type: object
                    required:
                    - type
                    properties:
                      type:
                        type: string
                        enum:
                        - CantComputePath
  /infra/{infra_id}/routes/{waypoint_type}/{waypoint_id}:
    get:
      tags:
      - infra
      - routes
      summary: Retrieve all routes that starting and ending by the given waypoint (detector or buffer stop)
      parameters:
      - name: infra_id
        in: path
        description: Infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: waypoint_type
        in: path
        description: Type of the waypoint
        required: true
        schema:
          type: string
          enum:
          - Detector
          - BufferStop
      - name: waypoint_id
        in: path
        description: Waypoint ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: All routes that starting and ending by the given waypoint
          content:
            application/json:
              schema:
                type: object
                required:
                - starting
                - ending
                properties:
                  ending:
                    type: array
                    items:
                      type: string
                  starting:
                    type: array
                    items:
                      type: string
  /infra/{infra_id}/speed_limit_tags:
    get:
      tags:
      - infra
      summary: Returns the set of speed limit tags for a given infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: List all speed limit tags
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - freight
              - heavy_load
        '404':
          description: The infra was not found
  /infra/{infra_id}/split_track_section:
    post:
      tags:
      - infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackOffset'
        required: true
      responses:
        '200':
          description: ID of the trackSections created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /infra/{infra_id}/switch_types:
    get:
      tags:
      - infra
      summary: Return the railjson list of switch types
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: A list of switch types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwitchType'
        '404':
          description: The infra was not found
  /infra/{infra_id}/unlock:
    post:
      tags:
      - infra
      summary: Unlock an infra
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The infra was unlocked successfully
        '404':
          description: The infra was not found
  /infra/{infra_id}/voltages:
    get:
      tags:
      - infra
      summary: Returns the set of voltages for a given infra and/or rolling_stocks modes.
      description: If include_rolling_stocks_modes is true, it returns also rolling_stocks modes.
      parameters:
      - name: infra_id
        in: path
        description: An existing infra ID
        required: true
        schema:
          type: integer
          format: int64
      - name: include_rolling_stock_modes
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Voltages list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - 750V
              - 1500V
              - 2500.5V
        '404':
          description: The infra was not found
  /layers/layer/{layer_slug}/mvt/{view_slug}:
    get:
      tags:
      - layers
      summary: Returns layer view metadata to query tiles
      parameters:
      - name: infra
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: layer_slug
        in: path
        required: true
        schema:
          type: string
      - name: view_slug
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                required:
                - type
                - name
                - promoteId
                - scheme
                - tiles
                - attribution
                - minzoom
                - maxzoom
                properties:
                  attribution:
                    type: string
                  maxzoom:
                    type: integer
                    format: int64
                    example: 15
                    minimum: 0
                  minzoom:
                    type: integer
                    format: int64
                    minimum: 0
                  name:
                    type: string
                    example: track_sections
                  promoteId:
                    type: object
                    additionalProperties:
                      type: string
                  scheme:
                    type: string
                    example: xyz
                  tiles:
                    type: array
                    items:
                      type: string
                    example:
                    - http://localhost:7070/tile/track_sections/geo/{z}/{x}/{y}/?infra=1
                  type:
                    type: string
  /layers/tile/{layer_slug}/{view_slug}/{z}/{x}/{y}:
    get:
      tags:
      - layers
      summary: Mvt tile from the cache if possible, otherwise gets data from the database and caches it in redis
      parameters:
      - name: infra
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: layer_slug
        in: path
        required: true
        schema:
          type: string
      - name: view_slug
        in: path
        required: true
        schema:
          type: string
      - name: x
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: y
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: z
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /light_rolling_stock:
    get:
      tags:
      - rolling_stock
      summary: Paginated list of rolling stock with a lighter response
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationStats'
                - type: object
                  required:
                  - results
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/LightRollingStockWithLiveries'
  /light_rolling_stock/name/{rolling_stock_name}:
    get:
      tags:
      - rolling_stock
      summary: Retrieve a rolling stock's light representation by its name
      parameters:
      - name: rolling_stock_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The rolling stock with their simplified effort curves
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightRollingStockWithLiveries'
  /light_rolling_stock/{rolling_stock_id}:
    get:
      tags:
      - rolling_stock
      summary: Retrieve a rolling stock's light representation by its id
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The rolling stock with their simplified effort curves
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightRollingStockWithLiveries'
  /projects:
    get:
      tags:
      - projects
      summary: Returns a paginated list of projects
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      - name: ordering
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          description: The list of projects
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationStats'
                - type: object
                  required:
                  - results
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/ProjectWithStudies'
    post:
      tags:
      - projects
      summary: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateForm'
        required: true
      responses:
        '201':
          description: The created project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
  /projects/{project_id}:
    get:
      tags:
      - projects
      summary: Retrieve a project
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The requested project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
        '404':
          description: The requested project was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    delete:
      tags:
      - projects
      summary: Delete a project
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The project was deleted successfully
        '404':
          description: The requested project was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    patch:
      tags:
      - projects
      summary: Update a project
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The fields to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchForm'
        required: true
      responses:
        '200':
          description: The updated project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithStudies'
        '404':
          description: The requested project was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /projects/{project_id}/studies:
    get:
      tags:
      - studies
      summary: Return a list of studies
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      - name: ordering
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          description: The list of studies
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationStats'
                - type: object
                  required:
                  - results
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/StudyWithScenarios'
    post:
      tags:
      - studies
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyCreateForm'
        required: true
      responses:
        '201':
          description: The created study
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResponse'
  /projects/{project_id}/studies/{study_id}:
    get:
      tags:
      - studies
      summary: Return a specific study
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The requested study
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResponse'
        '404':
          description: The requested study was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    delete:
      tags:
      - studies
      summary: Delete a study
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The study was deleted successfully
        '404':
          description: The requested study was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    patch:
      tags:
      - studies
      summary: Update a study
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The fields to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyPatchForm'
        required: true
      responses:
        '200':
          description: The updated study
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyResponse'
        '404':
          description: The requested study was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /projects/{project_id}/studies/{study_id}/scenarios:
    get:
      tags:
      - scenarios
      summary: Return a list of scenarios
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      - name: ordering
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
      responses:
        '200':
          description: A paginated list of scenarios
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationStats'
                - type: object
                  required:
                  - results
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/ScenarioWithDetails'
        '404':
          description: Project or study doesn't exist
    post:
      tags:
      - scenarios
      summary: Create a scenario
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioCreateForm'
        required: true
      responses:
        '201':
          description: The created scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
  /projects/{project_id}/studies/{study_id}/scenarios/{scenario_id}:
    get:
      tags:
      - scenarios
      summary: Return a specific scenario
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: scenario_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The requested scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
        '404':
          description: The requested scenario was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    delete:
      tags:
      - scenarios
      summary: Delete a scenario
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: scenario_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: The scenario was deleted successfully
        '404':
          description: The requested scenario was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
    patch:
      tags:
      - scenarios
      summary: Update a scenario
      parameters:
      - name: project_id
        in: path
        description: The id of a project
        required: true
        schema:
          type: integer
          format: int64
      - name: study_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: scenario_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioPatchForm'
        required: true
      responses:
        '204':
          description: The scenario was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
        '404':
          description: The requested scenario was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /rolling_stock:
    post:
      tags:
      - rolling_stock
      summary: Create a rolling stock
      parameters:
      - name: locked
        in: query
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockForm'
        required: true
      responses:
        '200':
          description: The created rolling stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
  /rolling_stock/name/{rolling_stock_name}:
    get:
      tags:
      - rolling_stock
      summary: Get a rolling stock by name
      parameters:
      - name: rolling_stock_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The requested rolling stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockWithLiveries'
  /rolling_stock/power_restrictions:
    get:
      tags:
      - rolling_stock
      summary: Returns the set of power restrictions for all rolling_stocks modes.
      responses:
        '200':
          description: Retrieve the power restrictions list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /rolling_stock/{rolling_stock_id}:
    get:
      tags:
      - rolling_stock
      summary: Get a rolling stock by Id
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The requested rolling stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockWithLiveries'
    delete:
      tags:
      - rolling_stock
      summary: Delete a rolling_stock and all entities linked to it
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        description: force the deletion even if it's used
        required: false
        schema:
          type: boolean
      responses:
        '204':
          description: The rolling stock was deleted successfully
        '404':
          description: The requested rolling stock was not found
        '409':
          description: The requested rolling stock is used
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockError'
    patch:
      tags:
      - rolling_stock
      summary: Patch a rolling stock
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockForm'
        required: true
      responses:
        '200':
          description: The created rolling stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockWithLiveries'
  /rolling_stock/{rolling_stock_id}/livery:
    post:
      tags:
      - rolling_stock
      - rolling_stock_livery
      summary: Create a rolling stock livery
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockLiveryCreateForm'
        required: true
      responses:
        '200':
          description: The created rolling stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStockLivery'
        '404':
          description: The requested rolling stock was not found
  /rolling_stock/{rolling_stock_id}/locked:
    patch:
      tags:
      - rolling_stock
      summary: Update rolling_stock locked field
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingStockLockedUpdateForm'
        required: true
      responses:
        '200':
          description: The created rolling stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingStock'
  /rolling_stock/{rolling_stock_id}/usage:
    get:
      tags:
      - rolling_stock
      summary: List the scenarios (and their respective studies and projects) which use a given rolling stock.
      parameters:
      - name: rolling_stock_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: A list of the associated scenarios and their respective studies and projects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioReference'
        '404':
          description: The requested rolling stock was not found
  /search:
    post:
      tags:
      - search
      summary: Returns all infra objects of some type according to a hierarchical query.
      description: |-
        # Payload

        {
        "object": string,
        "query": query,
        "dry": boolean, # default: false
        }

        Where:
        - `object` can be any search object declared in `search.yml`
        - `query` is a JSON document which can be deserialized into a [editoast_search::SearchAst].
        Check out examples below.

        # Response

        The response structure depends on the `object`.

        # Query language

        The query itself is defined using a language made up of nested JSON arrays.
        It will be parsed and transformed into a PostgreSQL WHERE statement.
        The language consist of a single boolean expression of comparison statements
        in prefix notation. For example, the query `["like", ["name"], "%ari%"]`
        will generate a WHERE statement like `WHERE "name" LIKE '%ari%'`.
        For more information on the query language itself, check out examples below.

        # Available functions

        See [editoast_search::create_processing_context()].

        # A few query examples

        * The railway station PNO: `["=", ["trigram"], "pno"]`
        * The railway stations with either "Paris" or "Lyon" (or both) in their name:
        `["or", ["search", ["name"], "Paris"], ["search", ["name"], "Lyon"]]`
        * All railway stations with "Paris" in their name but not PNO :
        `["and", ["search", ["name"], "Paris"], ["not", ["=", ["trigram"], "pno"]]]`

        See [editoast_search::SearchAst] for a more detailed view of the query language.
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 1
          minimum: 1
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 25
          nullable: true
          minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPayload'
        required: true
      responses:
        '200':
          description: The search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResultItem'
  /speed_limit_tags:
    get:
      tags:
      - speed_limit_tags
      responses:
        '200':
          description: List of configured speed-limit tags
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - V200
              - MA80
  /sprites/signaling_systems:
    get:
      tags:
      - sprites
      summary: This endpoint returns the list of supported signaling systems
      responses:
        '200':
          description: List of supported signaling systems
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - BAL
              - TVM300
  /sprites/{signaling_system}/{file_name}:
    get:
      tags:
      - sprites
      summary: This endpoint is used by map libre to retrieve the atlas of each signaling system
      parameters:
      - name: signaling_system
        in: path
        description: Signaling system name
        required: true
        schema:
          type: string
      - name: file_name
        in: path
        description: File name (json, png or svg)
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Atlas image of config
        '404':
          description: Signaling system not found
  /stdcm/search_environment:
    get:
      tags:
      - stdcm_search_environment
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdcmSearchEnvironment'
        '204':
          description: No search environment was created
    post:
      tags:
      - stdcm_search_environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StdcmSearchEnvironmentCreateForm'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdcmSearchEnvironment'
  /timetable:
    post:
      tags:
      - timetable
      summary: Create a timetable
      responses:
        '200':
          description: Timetable with train schedules ids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableResult'
        '404':
          description: Timetable not found
  /timetable/{id}:
    get:
      tags:
      - timetable
      summary: Return a specific timetable with its associated schedules
      parameters:
      - name: id
        in: path
        description: A timetable ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Timetable with train schedules ids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableDetailedResult'
        '404':
          description: Timetable not found
    delete:
      tags:
      - timetable
      summary: Delete a timetable
      parameters:
      - name: id
        in: path
        description: A timetable ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No content
        '404':
          description: Timetable not found
  /timetable/{id}/conflicts:
    get:
      tags:
      - timetable
      summary: Retrieve the list of conflict of the timetable (invalid trains are ignored)
      parameters:
      - name: id
        in: path
        description: A timetable ID
        required: true
        schema:
          type: integer
          format: int64
      - name: infra_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: electrical_profile_set_id
        in: query
        required: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: List of conflict
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conflict'
  /timetable/{id}/stdcm:
    post:
      tags:
      - stdcm
      summary: Compute a STDCM and return the simulation result
      parameters:
      - name: infra
        in: query
        description: The infra id
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: timetable_id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: An STDCM request
              required:
              - steps
              - rolling_stock_id
              - comfort
              properties:
                comfort:
                  $ref: '#/components/schemas/Comfort'
                electrical_profile_set_id:
                  type: integer
                  format: int64
                  nullable: true
                margin:
                  type: string
                  description: Can be a percentage `X%`, a time in minutes per 100 kilometer `Xmin/100km`
                  example:
                  - 5%
                  - 2min/100km
                  nullable: true
                maximum_departure_delay:
                  type: integer
                  format: int64
                  description: |-
                    By how long we can shift the departure time in milliseconds
                    Deprecated, first step data should be used instead
                  nullable: true
                  minimum: 0
                maximum_run_time:
                  type: integer
                  format: int64
                  description: |-
                    Specifies how long the total run time can be in milliseconds
                    Deprecated, first step data should be used instead
                  nullable: true
                  minimum: 0
                rolling_stock_id:
                  type: integer
                  format: int64
                speed_limit_tags:
                  type: string
                  description: Train categories for speed limits
                  nullable: true
                start_time:
                  type: string
                  format: date-time
                  description: Deprecated, first step arrival time should be used instead
                  nullable: true
                steps:
                  type: array
                  items:
                    $ref: '#/components/schemas/PathfindingItem'
                time_gap_after:
                  type: integer
                  format: int64
                  description: |-
                    Margin after the train passage in milliseconds

                    Enforces that the path used by the train should be free and
                    available at least that many milliseconds after its passage.
                  minimum: 0
                time_gap_before:
                  type: integer
                  format: int64
                  description: |-
                    Margin before the train passage in seconds

                    Enforces that the path used by the train should be free and
                    available at least that many milliseconds before its passage.
                  minimum: 0
                work_schedule_group_id:
                  type: integer
                  format: int64
                  nullable: true
        required: true
      responses:
        '201':
          description: The simulation result
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  required:
                  - simulation
                  - path
                  - departure_time
                  - status
                  properties:
                    departure_time:
                      type: string
                      format: date-time
                    path:
                      $ref: '#/components/schemas/PathfindingResultSuccess'
                    simulation:
                      $ref: '#/components/schemas/SimulationResponse'
                    status:
                      type: string
                      enum:
                      - success
                - type: object
                  required:
                  - status
                  properties:
                    status:
                      type: string
                      enum:
                      - path_not_found
                - type: object
                  required:
                  - error
                  - status
                  properties:
                    error:
                      $ref: '#/components/schemas/SimulationResponse'
                    status:
                      type: string
                      enum:
                      - preprocessing_simulation_error
  /timetable/{id}/train_schedule:
    post:
      tags:
      - timetable
      - train_schedule
      summary: Create train schedule by batch
      parameters:
      - name: id
        in: path
        description: A timetable ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TrainScheduleBase'
        required: true
      responses:
        '200':
          description: The created train schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainScheduleResult'
  /train_schedule:
    post:
      tags:
      - train_schedule
      summary: Return a specific train schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - ids
              properties:
                ids:
                  type: array
                  items:
                    type: integer
                    format: int64
                  uniqueItems: true
        required: true
      responses:
        '200':
          description: Retrieve a list of train schedule
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainScheduleResult'
    delete:
      tags:
      - timetable
      - train_schedule
      summary: Delete a train schedule and its result
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - ids
              properties:
                ids:
                  type: array
                  items:
                    type: integer
                    format: int64
                  uniqueItems: true
        required: true
      responses:
        '204':
          description: All train schedules have been deleted
  /train_schedule/project_path:
    post:
      tags:
      - train_schedule
      summary: Projects the space time curves and paths of a number of train schedules onto a given path
      description: |-
        - Returns 404 if the infra or any of the train schedules are not found
        - Returns 200 with a hashmap of train_id to ProjectPathTrainResult

        Train schedules that are invalid (pathfinding or simulation failed) are not included in the result
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPathForm'
        required: true
      responses:
        '200':
          description: Project Path Output
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProjectPathTrainResult'
  /train_schedule/simulation_summary:
    post:
      tags:
      - train_schedule
      summary: Associate each train id with its simulation summary response
      description: 'If the simulation fails, it associates the reason: pathfinding failed or running time failed'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - infra_id
              - ids
              properties:
                electrical_profile_set_id:
                  type: integer
                  format: int64
                  nullable: true
                ids:
                  type: array
                  items:
                    type: integer
                    format: int64
                  uniqueItems: true
                infra_id:
                  type: integer
                  format: int64
        required: true
      responses:
        '200':
          description: Associate each train id with its simulation summary
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/SimulationSummaryResult'
  /train_schedule/{id}:
    get:
      tags:
      - train_schedule
      summary: Return a specific train schedule
      parameters:
      - name: id
        in: path
        description: A train schedule ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The train schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainScheduleResult'
    put:
      tags:
      - train_schedule
      - timetable
      summary: Update  train schedule at once
      parameters:
      - name: id
        in: path
        description: A train schedule ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainScheduleForm'
        required: true
      responses:
        '200':
          description: The train schedule have been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainScheduleResult'
  /train_schedule/{id}/path:
    get:
      tags:
      - train_schedule
      - pathfinding
      summary: Get a path from a trainschedule given an infrastructure id and a train schedule id
      parameters:
      - name: id
        in: path
        description: A train schedule ID
        required: true
        schema:
          type: integer
          format: int64
      - name: infra_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: The path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathfindingResult'
        '404':
          description: Infrastructure or Train schedule not found
  /train_schedule/{id}/simulation:
    get:
      tags:
      - train_schedule
      summary: Retrieve the space, speed and time curve of a given train
      parameters:
      - name: id
        in: path
        description: A train schedule ID
        required: true
        schema:
          type: integer
          format: int64
      - name: infra_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: electrical_profile_set_id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Simulation Output
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationResponse'
  /version:
    get:
      responses:
        '200':
          description: Return the service version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /version/core:
    get:
      responses:
        '200':
          description: Return the core service version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /work_schedules:
    post:
      tags:
      - work_schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkScheduleCreateForm'
        required: true
      responses:
        '201':
          description: The id of the created work schedule group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkScheduleCreateResponse'
  /work_schedules/project_path:
    post:
      tags:
      - work_schedules
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - work_schedule_group_id
              - path_track_ranges
              properties:
                path_track_ranges:
                  type: array
                  items:
                    $ref: '#/components/schemas/TrackRange'
                work_schedule_group_id:
                  type: integer
                  format: int64
        required: true
      responses:
        '201':
          description: Returns a list of work schedules whose track ranges intersect the given path
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Represents the projection of a work schedule on a path.
                  required:
                  - type
                  - start_date_time
                  - end_date_time
                  - path_position_ranges
                  properties:
                    end_date_time:
                      type: string
                      format: date-time
                      description: The date and time when the work schedule ends.
                    path_position_ranges:
                      type: array
                      items:
                        $ref: '#/components/schemas/Intersection'
                      description: |-
                        a list of intervals `(a, b)` that represent the projections of the work schedule track ranges:
                        - `a` is the distance from the beginning of the path to the beginning of the track range
                        - `b` is the distance from the beginning of the path to the end of the track range
                    start_date_time:
                      type: string
                      format: date-time
                      description: The date and time when the work schedule takes effect.
                    type:
                      type: string
                      enum:
                      - CATENARY
                      - TRACK
components:
  schemas:
    AddOperation:
      type: object
      description: JSON Patch 'add' operation representation
      required:
      - path
      - value
      properties:
        path:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            within the target document where the operation is performed.
        value:
          description: Value to add to the target location.
    Allowance:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/EngineeringAllowance'
        - type: object
          required:
          - allowance_type
          properties:
            allowance_type:
              type: string
              enum:
              - engineering
      - allOf:
        - $ref: '#/components/schemas/StandardAllowance'
        - type: object
          required:
          - allowance_type
          properties:
            allowance_type:
              type: string
              enum:
              - standard
    AllowanceDistribution:
      type: string
      enum:
      - MARECO
      - LINEAR
    AllowanceValue:
      oneOf:
      - type: object
        required:
        - minutes
        - value_type
        properties:
          minutes:
            type: number
            format: double
          value_type:
            type: string
            enum:
            - time_per_distance
      - type: object
        required:
        - seconds
        - value_type
        properties:
          seconds:
            type: number
            format: double
          value_type:
            type: string
            enum:
            - time
      - type: object
        required:
        - percentage
        - value_type
        properties:
          percentage:
            type: number
            format: double
          value_type:
            type: string
            enum:
            - percentage
    ApplicableDirections:
      type: string
      enum:
      - START_TO_STOP
      - STOP_TO_START
      - BOTH
    ApplicableDirectionsTrackRange:
      type: object
      required:
      - track
      - begin
      - end
      - applicable_directions
      properties:
        applicable_directions:
          $ref: '#/components/schemas/ApplicableDirections'
        begin:
          type: number
          format: double
        end:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    BoundingBox:
      type: array
      items:
        type: array
        items:
          allOf:
          - type: number
            format: double
          - type: number
            format: double
        description: A bounding box
      description: A bounding box
      maxItems: 2
      minItems: 2
    BufferStop:
      type: object
      required:
      - id
      - track
      - position
      properties:
        extensions:
          type: object
          properties:
            sncf:
              allOf:
              - type: object
                required:
                - kp
                properties:
                  kp:
                    type: string
                additionalProperties: false
              nullable: true
          additionalProperties: false
        id:
          type: string
          maxLength: 255
          minLength: 1
        position:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    Comfort:
      type: string
      enum:
      - STANDARD
      - AIR_CONDITIONING
      - HEATING
    CompleteReportTrain:
      allOf:
      - $ref: '#/components/schemas/ReportTrain'
      - type: object
        required:
        - signal_sightings
        - zone_updates
        - spacing_requirements
        - routing_requirements
        properties:
          routing_requirements:
            type: array
            items:
              $ref: '#/components/schemas/RoutingRequirement'
          signal_sightings:
            type: array
            items:
              $ref: '#/components/schemas/SignalSighting'
          spacing_requirements:
            type: array
            items:
              $ref: '#/components/schemas/SpacingRequirement'
          zone_updates:
            type: array
            items:
              $ref: '#/components/schemas/ZoneUpdate'
    ConditionalEffortCurve:
      type: object
      required:
      - cond
      - curve
      properties:
        cond:
          $ref: '#/components/schemas/EffortCurveConditions'
        curve:
          $ref: '#/components/schemas/EffortCurve'
      additionalProperties: false
    Conflict:
      type: object
      required:
      - train_ids
      - work_schedule_ids
      - start_time
      - end_time
      - conflict_type
      - requirements
      properties:
        conflict_type:
          type: string
          enum:
          - Spacing
          - Routing
        end_time:
          type: string
          format: date-time
          description: Datetime of the end of the conflict
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/ConflictRequirement'
          description: List of requirements causing the conflict
        start_time:
          type: string
          format: date-time
          description: Datetime of the start of the conflict
        train_ids:
          type: array
          items:
            type: integer
            format: int64
          description: List of train ids involved in the conflict
        work_schedule_ids:
          type: array
          items:
            type: integer
            format: int64
          description: List of work schedule ids involved in the conflict
    ConflictDetectionResponse:
      type: object
      required:
      - conflicts
      properties:
        conflicts:
          type: array
          items:
            type: object
            required:
            - train_ids
            - work_schedule_ids
            - start_time
            - end_time
            - conflict_type
            - requirements
            properties:
              conflict_type:
                type: string
                enum:
                - Spacing
                - Routing
              end_time:
                type: string
                format: date-time
                description: Datetime of the end of the conflict
              requirements:
                type: array
                items:
                  $ref: '#/components/schemas/ConflictRequirement'
                description: List of requirements causing the conflict
              start_time:
                type: string
                format: date-time
                description: Datetime of the start of the conflict
              train_ids:
                type: array
                items:
                  type: integer
                  format: int64
                description: List of train ids involved in the conflict
              work_schedule_ids:
                type: array
                items:
                  type: integer
                  format: int64
                description: List of work schedule ids involved in the conflict
          description: List of conflicts detected
    ConflictRequirement:
      type: object
      description: |-
        Unmet requirement causing a conflict.

        The start and end time describe the conflicting time span (not the full
        requirement's time span).
      required:
      - zone
      - start_time
      - end_time
      properties:
        end_time:
          type: string
          format: date-time
        start_time:
          type: string
          format: date-time
        zone:
          type: string
    CopyOperation:
      type: object
      description: JSON Patch 'copy' operation representation
      required:
      - from
      - path
      properties:
        from:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            to copy value from.
        path:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            within the target document where the operation is performed.
    Curve:
      type: object
      required:
      - radius
      - begin
      - end
      properties:
        begin:
          type: number
          format: double
        end:
          type: number
          format: double
        radius:
          type: number
          format: double
      additionalProperties: false
    DeleteRollingStockQueryParams:
      type: object
      properties:
        force:
          type: boolean
          description: force the deletion even if it's used
    Detector:
      type: object
      required:
      - id
      - track
      - position
      properties:
        extensions:
          type: object
          required:
          - sncf
          properties:
            sncf:
              type: object
              required:
              - kp
              properties:
                kp:
                  type: string
              additionalProperties: false
          additionalProperties: false
        id:
          type: string
          maxLength: 255
          minLength: 1
        position:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    Direction:
      type: string
      enum:
      - START_TO_STOP
      - STOP_TO_START
    DirectionalTrackRange:
      type: object
      required:
      - track
      - begin
      - end
      - direction
      properties:
        begin:
          type: number
          format: double
        direction:
          $ref: '#/components/schemas/Direction'
        end:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    Distribution:
      type: string
      enum:
      - STANDARD
      - MARECO
    EditoastAppHealthErrorDatabase:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:app_health:Database
    EditoastAppHealthErrorRedis:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:app_health:Redis
    EditoastAppHealthErrorTimeout:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:app_health:Timeout
    EditoastAttachedErrorTrackNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - track_id
          properties:
            track_id:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:attached:TrackNotFound
    EditoastAuthorizationErrorAuthError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:authorization:AuthError
    EditoastAuthorizationErrorUnauthenticated:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 401
        type:
          type: string
          enum:
          - editoast:authorization:Unauthenticated
    EditoastAuthorizationErrorUnauthorized:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 401
        type:
          type: string
          enum:
          - editoast:authorization:Unauthorized
    EditoastAutoFixesEditoastErrorConflictingFixesOnSameObject:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - fixes
          - object
          properties:
            fixes:
              type: array
            object:
              type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:auto_fixes:ConflictingFixesOnSameObject
    EditoastAutoFixesEditoastErrorFixTrialFailure:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - source
          properties:
            source:
              type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:auto_fixes:FixTrialFailure
    EditoastAutoFixesEditoastErrorMaximumIterationReached:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:auto_fixes:MaximumIterationReached
    EditoastAutoFixesEditoastErrorMissingErrorObject:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - source
          properties:
            source:
              type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:auto_fixes:MissingErrorObject
    EditoastCacheOperationErrorDuplicateIdsProvided:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - obj_id
          - obj_type
          properties:
            obj_id:
              type: string
            obj_type:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:cache_operation:DuplicateIdsProvided
    EditoastCacheOperationErrorObjectNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - obj_id
          - obj_type
          properties:
            obj_id:
              type: string
            obj_type:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:cache_operation:ObjectNotFound
    EditoastCoreErrorBrokenPipe:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:BrokenPipe
    EditoastCoreErrorCannotExtractResponseBody:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - msg
          properties:
            msg:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:CannotExtractResponseBody
    EditoastCoreErrorConnectionClosedBeforeMessageCompleted:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:ConnectionClosedBeforeMessageCompleted
    EditoastCoreErrorConnectionResetByPeer:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:ConnectionResetByPeer
    EditoastCoreErrorCoreResponseFormatError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - msg
          properties:
            msg:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:CoreResponseFormatError
    EditoastCoreErrorGenericCoreError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - raw_error
          - status
          - url
          properties:
            raw_error:
              type: string
            status:
              type: object
            url:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:coreclient:GenericCoreError
    EditoastCoreErrorUnparsableErrorOutput:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:coreclient:UnparsableErrorOutput
    EditoastDatabaseAccessErrorDatabaseAccessError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:DatabaseAccessError
    EditoastDocumentErrorsNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - document_key
          properties:
            document_key:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:document:NotFound
    EditoastEditionErrorInfraIsLocked:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:edition:InfraIsLocked
    EditoastEditionErrorSplitTrackSectionBadOffset:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          - tracksection_id
          - tracksection_length
          properties:
            infra_id:
              type: integer
            tracksection_id:
              type: string
            tracksection_length:
              type: number
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:edition:SplitTrackSectionBadOffset
    EditoastEditoastUrlErrorInvalidUrl:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - url
          properties:
            url:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:url:InvalidUrl
    EditoastElectricalProfilesErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - electrical_profile_set_id
          properties:
            electrical_profile_set_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:electrical_profiles:NotFound
    EditoastError:
      oneOf:
      - $ref: '#/components/schemas/EditoastAppHealthErrorDatabase'
      - $ref: '#/components/schemas/EditoastAppHealthErrorRedis'
      - $ref: '#/components/schemas/EditoastAppHealthErrorTimeout'
      - $ref: '#/components/schemas/EditoastAttachedErrorTrackNotFound'
      - $ref: '#/components/schemas/EditoastAuthorizationErrorAuthError'
      - $ref: '#/components/schemas/EditoastAuthorizationErrorUnauthenticated'
      - $ref: '#/components/schemas/EditoastAuthorizationErrorUnauthorized'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorConflictingFixesOnSameObject'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorFixTrialFailure'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorMaximumIterationReached'
      - $ref: '#/components/schemas/EditoastAutoFixesEditoastErrorMissingErrorObject'
      - $ref: '#/components/schemas/EditoastCacheOperationErrorDuplicateIdsProvided'
      - $ref: '#/components/schemas/EditoastCacheOperationErrorObjectNotFound'
      - $ref: '#/components/schemas/EditoastCoreErrorBrokenPipe'
      - $ref: '#/components/schemas/EditoastCoreErrorCannotExtractResponseBody'
      - $ref: '#/components/schemas/EditoastCoreErrorConnectionClosedBeforeMessageCompleted'
      - $ref: '#/components/schemas/EditoastCoreErrorConnectionResetByPeer'
      - $ref: '#/components/schemas/EditoastCoreErrorCoreResponseFormatError'
      - $ref: '#/components/schemas/EditoastCoreErrorGenericCoreError'
      - $ref: '#/components/schemas/EditoastCoreErrorUnparsableErrorOutput'
      - $ref: '#/components/schemas/EditoastDatabaseAccessErrorDatabaseAccessError'
      - $ref: '#/components/schemas/EditoastDocumentErrorsNotFound'
      - $ref: '#/components/schemas/EditoastEditionErrorInfraIsLocked'
      - $ref: '#/components/schemas/EditoastEditionErrorSplitTrackSectionBadOffset'
      - $ref: '#/components/schemas/EditoastEditoastUrlErrorInvalidUrl'
      - $ref: '#/components/schemas/EditoastElectricalProfilesErrorNotFound'
      - $ref: '#/components/schemas/EditoastErrorConnectionDoesNotExist'
      - $ref: '#/components/schemas/EditoastErrorLapin'
      - $ref: '#/components/schemas/EditoastErrorResponseTimeout'
      - $ref: '#/components/schemas/EditoastErrorSerialization'
      - $ref: '#/components/schemas/EditoastErrorStatusParsing'
      - $ref: '#/components/schemas/EditoastGeometryErrorUnexpectedGeometry'
      - $ref: '#/components/schemas/EditoastGetObjectsErrorsDuplicateIdsProvided'
      - $ref: '#/components/schemas/EditoastGetObjectsErrorsObjectIdNotFound'
      - $ref: '#/components/schemas/EditoastInfraApiErrorNotFound'
      - $ref: '#/components/schemas/EditoastInfraCacheEditoastErrorObjectNotFound'
      - $ref: '#/components/schemas/EditoastInfraStateErrorFetchError'
      - $ref: '#/components/schemas/EditoastLayersErrorLayerNotFound'
      - $ref: '#/components/schemas/EditoastLayersErrorViewNotFound'
      - $ref: '#/components/schemas/EditoastLinesErrorsLineNotFound'
      - $ref: '#/components/schemas/EditoastListErrorsErrorsWrongErrorTypeProvided'
      - $ref: '#/components/schemas/EditoastListErrorsRailjsonWrongRailjsonVersionProvided'
      - $ref: '#/components/schemas/EditoastOperationErrorEmptyId'
      - $ref: '#/components/schemas/EditoastOperationErrorInvalidPatch'
      - $ref: '#/components/schemas/EditoastOperationErrorModifyId'
      - $ref: '#/components/schemas/EditoastOperationErrorObjectNotFound'
      - $ref: '#/components/schemas/EditoastPaginationErrorInvalidPageSize'
      - $ref: '#/components/schemas/EditoastPathfindingErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingViewErrorsEndingTrackLocationNotFound'
      - $ref: '#/components/schemas/EditoastPathfindingViewErrorsInvalidNumberOfPaths'
      - $ref: '#/components/schemas/EditoastPathfindingViewErrorsStartingTrackLocationNotFound'
      - $ref: '#/components/schemas/EditoastProjectErrorImageError'
      - $ref: '#/components/schemas/EditoastProjectErrorImageNotFound'
      - $ref: '#/components/schemas/EditoastProjectErrorNotFound'
      - $ref: '#/components/schemas/EditoastRailJsonErrorUnsupportedVersion'
      - $ref: '#/components/schemas/EditoastRedisConfigErrorUrl'
      - $ref: '#/components/schemas/EditoastRollingStockErrorBasePowerClassEmpty'
      - $ref: '#/components/schemas/EditoastRollingStockErrorCannotCreateCompoundImage'
      - $ref: '#/components/schemas/EditoastRollingStockErrorCannotReadImage'
      - $ref: '#/components/schemas/EditoastRollingStockErrorKeyNotFound'
      - $ref: '#/components/schemas/EditoastRollingStockErrorLiveryMultipartError'
      - $ref: '#/components/schemas/EditoastRollingStockErrorNameAlreadyUsed'
      - $ref: '#/components/schemas/EditoastRollingStockErrorRollingStockIsLocked'
      - $ref: '#/components/schemas/EditoastRollingStockErrorRollingStockIsUsed'
      - $ref: '#/components/schemas/EditoastSTDCMErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastSTDCMErrorInvalidPathItem'
      - $ref: '#/components/schemas/EditoastSTDCMErrorRollingStockNotFound'
      - $ref: '#/components/schemas/EditoastSTDCMErrorTimetableNotFound'
      - $ref: '#/components/schemas/EditoastScenarioErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastScenarioErrorNotFound'
      - $ref: '#/components/schemas/EditoastScenarioErrorTimetableNotFound'
      - $ref: '#/components/schemas/EditoastSearchApiErrorObjectType'
      - $ref: '#/components/schemas/EditoastSearchApiErrorSearchEngineError'
      - $ref: '#/components/schemas/EditoastSpriteErrorsFileNotFound'
      - $ref: '#/components/schemas/EditoastSpriteErrorsUnknownSignalingSystem'
      - $ref: '#/components/schemas/EditoastStudyErrorNotFound'
      - $ref: '#/components/schemas/EditoastStudyErrorStartDateAfterEndDate'
      - $ref: '#/components/schemas/EditoastTimetableErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastTimetableErrorNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorBatchTrainScheduleNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorInfraNotFound'
      - $ref: '#/components/schemas/EditoastTrainScheduleErrorNotFound'
      - $ref: '#/components/schemas/EditoastWorkScheduleErrorNameAlreadyUsed'
      description: Generated error type for Editoast
      discriminator:
        propertyName: type
    EditoastErrorConnectionDoesNotExist:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:ConnectionDoesNotExist
    EditoastErrorLapin:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:Lapin
    EditoastErrorResponseTimeout:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:ResponseTimeout
    EditoastErrorSerialization:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:Serialization
    EditoastErrorStatusParsing:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:coreclient:StatusParsing
    EditoastGeometryErrorUnexpectedGeometry:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - actual
          - expected
          properties:
            actual:
              type: string
            expected:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:geometry:UnexpectedGeometry
    EditoastGetObjectsErrorsDuplicateIdsProvided:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:objects:DuplicateIdsProvided
    EditoastGetObjectsErrorsObjectIdNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - object_id
          properties:
            object_id:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:objects:ObjectIdNotFound
    EditoastInfraApiErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:infra:NotFound
    EditoastInfraCacheEditoastErrorObjectNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - obj_id
          - obj_type
          properties:
            obj_id:
              type: string
            obj_type:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:infra_cache:ObjectNotFound
    EditoastInfraStateErrorFetchError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:infra_state:FetchError
    EditoastLayersErrorLayerNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - expected_names
          - layer_name
          properties:
            expected_names:
              type: array
            layer_name:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:layers:LayerNotFound
    EditoastLayersErrorViewNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - expected_names
          - view_name
          properties:
            expected_names:
              type: array
            view_name:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:layers:ViewNotFound
    EditoastLinesErrorsLineNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - line_code
          properties:
            line_code:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:lines:LineNotFound
    EditoastListErrorsErrorsWrongErrorTypeProvided:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:errors:WrongErrorTypeProvided
    EditoastListErrorsRailjsonWrongRailjsonVersionProvided:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:railjson:WrongRailjsonVersionProvided
    EditoastOperationErrorEmptyId:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:operation:EmptyId
    EditoastOperationErrorInvalidPatch:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - error
          properties:
            error:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:operation:InvalidPatch
    EditoastOperationErrorModifyId:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:operation:ModifyId
    EditoastOperationErrorObjectNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          - obj_id
          properties:
            infra_id:
              type: integer
            obj_id:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:operation:ObjectNotFound
    EditoastPaginationErrorInvalidPageSize:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - max_page_size
          - provided_page_size
          properties:
            max_page_size:
              type: integer
            provided_page_size:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:pagination:InvalidPageSize
    EditoastPathfindingErrorInfraNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:pathfinding:InfraNotFound
    EditoastPathfindingViewErrorsEndingTrackLocationNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:pathfinding:EndingTrackLocationNotFound
    EditoastPathfindingViewErrorsInvalidNumberOfPaths:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - max_number
          - path_number
          properties:
            max_number:
              type: integer
            path_number:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:pathfinding:InvalidNumberOfPaths
    EditoastPathfindingViewErrorsStartingTrackLocationNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:infra:pathfinding:StartingTrackLocationNotFound
    EditoastProjectErrorImageError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - error
          properties:
            error:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:project:ImageError
    EditoastProjectErrorImageNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - document_key
          properties:
            document_key:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:project:ImageNotFound
    EditoastProjectErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - project_id
          properties:
            project_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:project:NotFound
    EditoastRailJsonErrorUnsupportedVersion:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - actual
          - expected
          properties:
            actual:
              type: string
            expected:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:railjson:UnsupportedVersion
    EditoastRedisConfigErrorUrl:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - url
          properties:
            url:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:redis:Url
    EditoastRollingStockErrorBasePowerClassEmpty:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:rollingstocks:BasePowerClassEmpty
    EditoastRollingStockErrorCannotCreateCompoundImage:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:rollingstocks:CannotCreateCompoundImage
    EditoastRollingStockErrorCannotReadImage:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 500
        type:
          type: string
          enum:
          - editoast:rollingstocks:CannotReadImage
    EditoastRollingStockErrorKeyNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - rolling_stock_key
          properties:
            rolling_stock_key:
              type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:rollingstocks:KeyNotFound
    EditoastRollingStockErrorLiveryMultipartError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:rollingstocks:LiveryMultipartError
    EditoastRollingStockErrorNameAlreadyUsed:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - name
          properties:
            name:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:rollingstocks:NameAlreadyUsed
    EditoastRollingStockErrorRollingStockIsLocked:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - rolling_stock_id
          properties:
            rolling_stock_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:rollingstocks:RollingStockIsLocked
    EditoastRollingStockErrorRollingStockIsUsed:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - rolling_stock_id
          - usage
          properties:
            rolling_stock_id:
              type: integer
            usage:
              type: array
        message:
          type: string
        status:
          type: integer
          enum:
          - 409
        type:
          type: string
          enum:
          - editoast:rollingstocks:RollingStockIsUsed
    EditoastSTDCMErrorInfraNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:stdcm_v2:InfraNotFound
    EditoastSTDCMErrorInvalidPathItem:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - index
          - path_item
          properties:
            index:
              type: integer
            path_item:
              type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:stdcm_v2:InvalidPathItem
    EditoastSTDCMErrorRollingStockNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - rolling_stock_id
          properties:
            rolling_stock_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:stdcm_v2:RollingStockNotFound
    EditoastSTDCMErrorTimetableNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - timetable_id
          properties:
            timetable_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:stdcm_v2:TimetableNotFound
    EditoastScenarioErrorInfraNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:scenario:InfraNotFound
    EditoastScenarioErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - scenario_id
          properties:
            scenario_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:scenario:NotFound
    EditoastScenarioErrorTimetableNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - timetable_id
          properties:
            timetable_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:scenario:TimetableNotFound
    EditoastSearchApiErrorObjectType:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - object_type
          properties:
            object_type:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:search:ObjectType
    EditoastSearchApiErrorSearchEngineError:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:search:SearchEngineError
    EditoastSpriteErrorsFileNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - file
          properties:
            file:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:sprites:FileNotFound
    EditoastSpriteErrorsUnknownSignalingSystem:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - signaling_system
          properties:
            signaling_system:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:sprites:UnknownSignalingSystem
    EditoastStudyErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - study_id
          properties:
            study_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:study:NotFound
    EditoastStudyErrorStartDateAfterEndDate:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:study:StartDateAfterEndDate
    EditoastTimetableErrorInfraNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:timetable:InfraNotFound
    EditoastTimetableErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - timetable_id
          properties:
            timetable_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:timetable:NotFound
    EditoastTrainScheduleErrorBatchTrainScheduleNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - number
          properties:
            number:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:train_schedule:BatchTrainScheduleNotFound
    EditoastTrainScheduleErrorInfraNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - infra_id
          properties:
            infra_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:train_schedule:InfraNotFound
    EditoastTrainScheduleErrorNotFound:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - train_schedule_id
          properties:
            train_schedule_id:
              type: integer
        message:
          type: string
        status:
          type: integer
          enum:
          - 404
        type:
          type: string
          enum:
          - editoast:train_schedule:NotFound
    EditoastWorkScheduleErrorNameAlreadyUsed:
      type: object
      required:
      - type
      - status
      - message
      properties:
        context:
          type: object
          required:
          - name
          properties:
            name:
              type: string
        message:
          type: string
        status:
          type: integer
          enum:
          - 400
        type:
          type: string
          enum:
          - editoast:work_schedule:NameAlreadyUsed
    EffortCurve:
      type: object
      required:
      - speeds
      - max_efforts
      properties:
        max_efforts:
          type: array
          items:
            type: number
            format: double
          example:
          - 23500.0
          - 23200.0
          - 21200.0
          minItems: 2
        speeds:
          type: array
          items:
            type: number
            format: double
          example:
          - 0.0
          - 2.958
          - 46.719
          minItems: 2
      additionalProperties: false
    EffortCurveConditions:
      type: object
      required:
      - comfort
      - electrical_profile_level
      - power_restriction_code
      properties:
        comfort:
          allOf:
          - $ref: '#/components/schemas/Comfort'
          nullable: true
        electrical_profile_level:
          type: string
          nullable: true
        power_restriction_code:
          type: string
          nullable: true
      additionalProperties: false
    EffortCurves:
      type: object
      required:
      - modes
      - default_mode
      properties:
        default_mode:
          type: string
        modes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ModeEffortCurves'
      additionalProperties: false
    ElectricalProfile:
      type: object
      required:
      - value
      - power_class
      - track_ranges
      properties:
        power_class:
          type: string
          example: '1'
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/TrackRange'
        value:
          type: string
          example: A
    ElectricalProfileSet:
      type: object
      required:
      - id
      - name
      - data
      properties:
        data:
          $ref: '#/components/schemas/ElectricalProfileSetData'
        id:
          type: integer
          format: int64
        name:
          type: string
    ElectricalProfileSetData:
      type: object
      required:
      - levels
      - level_order
      properties:
        level_order:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LevelValues'
        levels:
          type: array
          items:
            $ref: '#/components/schemas/ElectricalProfile'
    ElectricalProfileSetIdQueryParam:
      type: object
      properties:
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
    Electrification:
      type: object
      required:
      - id
      - voltage
      - track_ranges
      properties:
        id:
          type: string
          maxLength: 255
          minLength: 1
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/ApplicableDirectionsTrackRange'
        voltage:
          type: string
          minLength: 1
      additionalProperties: false
    Endpoint:
      type: string
      enum:
      - BEGIN
      - END
    EnergySource:
      oneOf:
      - type: object
        description: energy source for a rolling stock representing a electrification
        required:
        - max_input_power
        - max_output_power
        - efficiency
        - energy_source_type
        properties:
          efficiency:
            type: number
            format: double
            maximum: 1
            minimum: 0
          energy_source_type:
            type: string
            enum:
            - Electrification
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
      - type: object
        required:
        - max_input_power
        - max_output_power
        - energy_storage
        - efficiency
        - energy_source_type
        properties:
          efficiency:
            type: number
            format: double
            maximum: 1
            minimum: 0
          energy_source_type:
            type: string
            enum:
            - PowerPack
          energy_storage:
            $ref: '#/components/schemas/EnergyStorage'
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
      - type: object
        description: energy source for a rolling stock representing a battery
        required:
        - max_input_power
        - max_output_power
        - energy_storage
        - efficiency
        - energy_source_type
        properties:
          efficiency:
            type: number
            format: double
            maximum: 1
            minimum: 0
          energy_source_type:
            type: string
            enum:
            - Battery
          energy_storage:
            $ref: '#/components/schemas/EnergyStorage'
          max_input_power:
            $ref: '#/components/schemas/SpeedDependantPower'
          max_output_power:
            $ref: '#/components/schemas/SpeedDependantPower'
      description: energy source of a rolling stock
    EnergyStorage:
      type: object
      description: energy storage of an energy source (of a rolling stock, can be a electrical battery or a hydrogen/fuel powerPack)
      required:
      - capacity
      - soc
      - soc_min
      - soc_max
      - refill_law
      properties:
        capacity:
          type: number
          format: double
        refill_law:
          allOf:
          - $ref: '#/components/schemas/RefillLaw'
          nullable: true
        soc:
          type: number
          format: double
          maximum: 1
          minimum: 0
        soc_max:
          type: number
          format: double
          maximum: 1
          minimum: 0
        soc_min:
          type: number
          format: double
          maximum: 1
          minimum: 0
      additionalProperties: false
    EngineeringAllowance:
      allOf:
      - $ref: '#/components/schemas/RangeAllowance'
      - type: object
        required:
        - distribution
        properties:
          capacity_speed_limit:
            type: number
            format: double
            default: -1.0
          distribution:
            $ref: '#/components/schemas/AllowanceDistribution'
    Gamma:
      type: object
      required:
      - type
      - value
      properties:
        type:
          type: string
        value:
          type: number
          format: double
      additionalProperties: false
    GeoJson:
      oneOf:
      - $ref: '#/components/schemas/GeoJsonPoint'
      - $ref: '#/components/schemas/GeoJsonMultiPoint'
      - $ref: '#/components/schemas/GeoJsonLineString'
      - $ref: '#/components/schemas/GeoJsonMultiLineString'
      - $ref: '#/components/schemas/GeoJsonPolygon'
      - $ref: '#/components/schemas/GeoJsonMultiPolygon'
      description: A GeoJSON geometry item
    GeoJsonLineString:
      oneOf:
      - type: object
        required:
        - type
        - coordinates
        properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonLineStringValue'
          type:
            type: string
            enum:
            - LineString
    GeoJsonLineStringValue:
      type: array
      items:
        $ref: '#/components/schemas/GeoJsonPointValue'
    GeoJsonMultiLineString:
      oneOf:
      - type: object
        required:
        - type
        - coordinates
        properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiLineStringValue'
          type:
            type: string
            enum:
            - MultiLineString
    GeoJsonMultiLineStringValue:
      type: array
      items:
        $ref: '#/components/schemas/GeoJsonLineStringValue'
    GeoJsonMultiPoint:
      oneOf:
      - type: object
        required:
        - type
        - coordinates
        properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiPointValue'
          type:
            type: string
            enum:
            - MultiPoint
    GeoJsonMultiPointValue:
      type: array
      items:
        $ref: '#/components/schemas/GeoJsonPointValue'
    GeoJsonMultiPolygon:
      oneOf:
      - type: object
        required:
        - type
        - coordinates
        properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonMultiPolygonValue'
          type:
            type: string
            enum:
            - MultiPolygon
    GeoJsonMultiPolygonValue:
      type: array
      items:
        $ref: '#/components/schemas/GeoJsonPolygonValue'
    GeoJsonPoint:
      oneOf:
      - type: object
        required:
        - type
        - coordinates
        properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonPointValue'
          type:
            type: string
            enum:
            - Point
    GeoJsonPointValue:
      type: array
      items:
        type: number
        format: double
    GeoJsonPolygon:
      oneOf:
      - type: object
        required:
        - type
        - coordinates
        properties:
          coordinates:
            $ref: '#/components/schemas/GeoJsonPolygonValue'
          type:
            type: string
            enum:
            - Polygon
    GeoJsonPolygonValue:
      type: array
      items:
        $ref: '#/components/schemas/GeoJsonLineStringValue'
    IncompatibleConstraints:
      type: object
      required:
      - incompatible_electrification_ranges
      - incompatible_gauge_ranges
      - incompatible_signaling_system_ranges
      properties:
        incompatible_electrification_ranges:
          type: array
          items:
            $ref: '#/components/schemas/IncompatibleOffsetRangeWithValue'
        incompatible_gauge_ranges:
          type: array
          items:
            $ref: '#/components/schemas/IncompatibleOffsetRange'
        incompatible_signaling_system_ranges:
          type: array
          items:
            $ref: '#/components/schemas/IncompatibleOffsetRangeWithValue'
    IncompatibleOffsetRange:
      type: object
      required:
      - range
      properties:
        range:
          $ref: '#/components/schemas/OffsetRange'
    IncompatibleOffsetRangeWithValue:
      type: object
      required:
      - range
      - value
      properties:
        range:
          $ref: '#/components/schemas/OffsetRange'
        value:
          type: string
    Infra:
      type: object
      required:
      - id
      - name
      - railjson_version
      - version
      - generated_version
      - locked
      - created
      - modified
      properties:
        created:
          type: string
          format: date-time
        generated_version:
          type: string
          nullable: true
        id:
          type: integer
          format: int64
        locked:
          type: boolean
        modified:
          type: string
          format: date-time
        name:
          type: string
        railjson_version:
          type: string
        version:
          type: string
    InfraError:
      allOf:
      - $ref: '#/components/schemas/InfraErrorType'
      - type: object
        required:
        - obj_id
        - obj_type
        - field
        - is_warning
        properties:
          field:
            type: string
            nullable: true
          is_warning:
            type: boolean
          obj_id:
            type: string
          obj_type:
            $ref: '#/components/schemas/ObjectType'
    InfraErrorType:
      oneOf:
      - type: object
        required:
        - original_group_path
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - duplicated_group
          original_group_path:
            type: string
      - type: object
        required:
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - empty_object
      - type: object
        required:
        - group
        - switch_type
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - invalid_group
          group:
            type: string
          switch_type:
            type: string
      - type: object
        required:
        - reference
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - invalid_reference
          reference:
            $ref: '#/components/schemas/ObjectRef'
      - type: object
        required:
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - invalid_route
      - type: object
        required:
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - invalid_switch_ports
      - type: object
        required:
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - missing_route
      - type: object
        required:
        - endpoint
        - error_type
        properties:
          endpoint:
            $ref: '#/components/schemas/Endpoint'
          error_type:
            type: string
            enum:
            - missing_buffer_stop
      - type: object
        required:
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - node_endpoints_not_unique
      - type: object
        required:
        - reference
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - object_out_of_path
          reference:
            $ref: '#/components/schemas/ObjectRef'
      - type: object
        required:
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - odd_buffer_stop_location
      - type: object
        required:
        - position
        - expected_range
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - out_of_range
          expected_range:
            type: array
            items:
              type: number
              format: double
          position:
            type: number
            format: double
      - type: object
        required:
        - reference
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - overlapping_electrifications
          reference:
            $ref: '#/components/schemas/ObjectRef'
      - type: object
        required:
        - reference
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - overlapping_speed_sections
          reference:
            $ref: '#/components/schemas/ObjectRef'
      - type: object
        required:
        - reference
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - overlapping_switches
          reference:
            $ref: '#/components/schemas/ObjectRef'
      - type: object
        required:
        - port_name
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - unknown_port_name
          port_name:
            type: string
      - type: object
        required:
        - port_name
        - error_type
        properties:
          error_type:
            type: string
            enum:
            - unused_port
          port_name:
            type: string
    InfraErrorTypeLabel:
      type: string
      description: Auto-generated discriminant enum variants
      enum:
      - duplicated_group
      - empty_object
      - invalid_group
      - invalid_reference
      - invalid_route
      - invalid_switch_ports
      - missing_route
      - missing_buffer_stop
      - node_endpoints_not_unique
      - object_out_of_path
      - odd_buffer_stop_location
      - out_of_range
      - overlapping_electrifications
      - overlapping_speed_sections
      - overlapping_switches
      - unknown_port_name
      - unused_port
    InfraIdQueryParam:
      type: object
      required:
      - infra_id
      properties:
        infra_id:
          type: integer
          format: int64
    InfraObject:
      oneOf:
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - TrackSection
          railjson:
            $ref: '#/components/schemas/TrackSection'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - Signal
          railjson:
            $ref: '#/components/schemas/Signal'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - NeutralSection
          railjson:
            $ref: '#/components/schemas/NeutralSection'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - SpeedSection
          railjson:
            $ref: '#/components/schemas/SpeedSection'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - Switch
          railjson:
            $ref: '#/components/schemas/Switch'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - SwitchType
          railjson:
            $ref: '#/components/schemas/SwitchType'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - Detector
          railjson:
            $ref: '#/components/schemas/Detector'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - BufferStop
          railjson:
            $ref: '#/components/schemas/BufferStop'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - Route
          railjson:
            $ref: '#/components/schemas/Route'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - OperationalPoint
          railjson:
            $ref: '#/components/schemas/OperationalPoint'
      - type: object
        required:
        - railjson
        - obj_type
        properties:
          obj_type:
            type: string
            enum:
            - Electrification
          railjson:
            $ref: '#/components/schemas/Electrification'
    InfraObjectWithGeometry:
      type: object
      required:
      - obj_id
      - railjson
      - geographic
      properties:
        geographic:
          $ref: '#/components/schemas/GeoJson'
        obj_id:
          type: string
        railjson:
          type: object
    InfraPathfindingInput:
      type: object
      required:
      - starting
      - ending
      properties:
        ending:
          $ref: '#/components/schemas/PathfindingTrackLocationInput'
        starting:
          $ref: '#/components/schemas/PathfindingTrackLocationInput'
    InfraState:
      type: string
      enum:
      - NOT_LOADED
      - INITIALIZING
      - DOWNLOADING
      - PARSING_JSON
      - PARSING_INFRA
      - LOADING_SIGNALS
      - BUILDING_BLOCKS
      - CACHED
      - TRANSIENT_ERROR
      - ERROR
    InfraWithState:
      allOf:
      - $ref: '#/components/schemas/Infra'
      - type: object
        required:
        - state
        properties:
          state:
            $ref: '#/components/schemas/InfraState'
    InternalError:
      type: object
      required:
      - type
      - context
      - message
      properties:
        context:
          type: object
          additionalProperties: {}
        message:
          type: string
        status:
          type: integer
          format: int32
          maximum: 599
          minimum: 100
        type:
          type: string
    Intersection:
      type: object
      description: Represent the intersection between a track range and a path, relative to the beginning of the path
      required:
      - start
      - end
      properties:
        end:
          type: integer
          format: int64
          description: Distance of the end of the intersection relative to the beginning of the path
          minimum: 0
        start:
          type: integer
          format: int64
          description: Distance of the beginning of the intersection relative to the beginning of the path
          minimum: 0
    LevelValues:
      type: array
      items:
        type: string
    LightEffortCurves:
      type: object
      required:
      - modes
      - default_mode
      properties:
        default_mode:
          type: string
        modes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LightModeEffortCurves'
      additionalProperties: false
    LightElectricalProfileSet:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    LightModeEffortCurves:
      type: object
      required:
      - is_electric
      properties:
        is_electric:
          type: boolean
    LightRollingStock:
      type: object
      required:
      - id
      - name
      - railjson_version
      - locked
      - effort_curves
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - mass
      - rolling_resistance
      - loading_gauge
      - power_restrictions
      - energy_sources
      - supported_signaling_systems
      properties:
        base_power_class:
          type: string
          nullable: true
        comfort_acceleration:
          type: number
          format: double
        effort_curves:
          $ref: '#/components/schemas/LightEffortCurves'
        energy_sources:
          type: array
          items:
            $ref: '#/components/schemas/EnergySource'
        gamma:
          $ref: '#/components/schemas/Gamma'
        id:
          type: integer
          format: int64
        inertia_coefficient:
          type: number
          format: double
        length:
          type: number
          format: double
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        locked:
          type: boolean
        mass:
          type: number
          format: double
        max_speed:
          type: number
          format: double
        metadata:
          allOf:
          - $ref: '#/components/schemas/RollingStockMetadata'
          nullable: true
        name:
          type: string
        power_restrictions:
          type: object
          additionalProperties:
            type: string
        railjson_version:
          type: string
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          type: number
          format: double
        startup_time:
          type: number
          format: double
        supported_signaling_systems:
          $ref: '#/components/schemas/RollingStockSupportedSignalingSystems'
    LightRollingStockWithLiveries:
      allOf:
      - $ref: '#/components/schemas/LightRollingStock'
      - type: object
        required:
        - liveries
        properties:
          liveries:
            type: array
            items:
              $ref: '#/components/schemas/RollingStockLivery'
    LoadingGaugeLimit:
      type: object
      required:
      - category
      - begin
      - end
      properties:
        begin:
          type: number
          format: double
        category:
          $ref: '#/components/schemas/LoadingGaugeType'
        end:
          type: number
          format: double
      additionalProperties: false
    LoadingGaugeType:
      type: string
      enum:
      - G1
      - G2
      - GA
      - GB
      - GB1
      - GC
      - FR3.3
      - FR3.3/GB/G2
      - GLOTT
    Margins:
      type: object
      required:
      - boundaries
      - values
      properties:
        boundaries:
          type: array
          items:
            type: string
            minLength: 1
        values:
          type: array
          items:
            type: string
          description: |-
            The values of the margins. Must contains one more element than the boundaries
            Can be a percentage `X%` or a time in minutes per 100 kilometer `Xmin/100km`
          example:
          - 5%
          - 2min/100km
      additionalProperties: false
    ModeEffortCurves:
      type: object
      required:
      - curves
      - default_curve
      - is_electric
      properties:
        curves:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalEffortCurve'
        default_curve:
          $ref: '#/components/schemas/EffortCurve'
        is_electric:
          type: boolean
      additionalProperties: false
    MoveOperation:
      type: object
      description: JSON Patch 'move' operation representation
      required:
      - from
      - path
      properties:
        from:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            to move value from.
        path:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            within the target document where the operation is performed.
    NeutralSection:
      type: object
      description: |-
        Neutral sections are portions of track where trains aren't allowed to pull power from electrifications. They have to rely on inertia to cross such sections.

        In practice, neutral sections are delimited by signs. In OSRD, neutral sections are directional to allow accounting for different sign placement depending on the direction.

        For more details see [the documentation](https://osrd.fr/en/docs/explanation/neutral_sections/).
      required:
      - id
      - announcement_track_ranges
      - track_ranges
      - lower_pantograph
      properties:
        announcement_track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
        extensions:
          type: object
          properties:
            neutral_sncf:
              allOf:
              - type: object
                required:
                - announcement
                - exe
                - end
                - rev
                properties:
                  announcement:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sign'
                  end:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sign'
                  exe:
                    $ref: '#/components/schemas/Sign'
                  rev:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sign'
                additionalProperties: false
              nullable: true
          additionalProperties: false
        id:
          type: string
          maxLength: 255
          minLength: 1
        lower_pantograph:
          type: boolean
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
      additionalProperties: false
    NewDocumentResponse:
      type: object
      required:
      - document_key
      properties:
        document_key:
          type: integer
          format: int64
    ObjectRef:
      type: object
      required:
      - type
      - obj_id
      properties:
        obj_id:
          type: string
        type:
          $ref: '#/components/schemas/ObjectType'
      additionalProperties: false
    ObjectType:
      type: string
      enum:
      - TrackSection
      - Signal
      - SpeedSection
      - Detector
      - NeutralSection
      - Switch
      - SwitchType
      - BufferStop
      - Route
      - OperationalPoint
      - Electrification
    OffsetRange:
      type: object
      required:
      - start
      - end
      properties:
        end:
          type: integer
          format: int64
          minimum: 0
        start:
          type: integer
          format: int64
          minimum: 0
    Operation:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/InfraObject'
        - type: object
          required:
          - operation_type
          properties:
            operation_type:
              type: string
              enum:
              - CREATE
      - allOf:
        - type: object
          required:
          - obj_id
          - obj_type
          - railjson_patch
          properties:
            obj_id:
              type: string
            obj_type:
              $ref: '#/components/schemas/ObjectType'
            railjson_patch:
              type: array
              items:
                $ref: '#/components/schemas/PatchOperation'
              description: Representation of JSON Patch (list of patch operations)
          additionalProperties: false
        - type: object
          required:
          - operation_type
          properties:
            operation_type:
              type: string
              enum:
              - UPDATE
      - allOf:
        - type: object
          description: A delete operation. Contains same information as a object ref but has another serialization.
          required:
          - obj_id
          - obj_type
          properties:
            obj_id:
              type: string
            obj_type:
              $ref: '#/components/schemas/ObjectType'
          additionalProperties: false
        - type: object
          required:
          - operation_type
          properties:
            operation_type:
              type: string
              enum:
              - DELETE
    OperationalPoint:
      type: object
      required:
      - id
      - parts
      properties:
        extensions:
          type: object
          properties:
            identifier:
              allOf:
              - type: object
                required:
                - name
                - uic
                properties:
                  name:
                    type: string
                    minLength: 1
                  uic:
                    type: integer
                    format: int64
                additionalProperties: false
              nullable: true
            sncf:
              allOf:
              - type: object
                required:
                - ci
                - ch
                - ch_short_label
                - ch_long_label
                - trigram
                properties:
                  ch:
                    type: string
                  ch_long_label:
                    type: string
                    minLength: 1
                  ch_short_label:
                    type: string
                    minLength: 1
                  ci:
                    type: integer
                    format: int64
                  trigram:
                    type: string
                additionalProperties: false
              nullable: true
          additionalProperties: false
        id:
          type: string
          maxLength: 255
          minLength: 1
        parts:
          type: array
          items:
            $ref: '#/components/schemas/OperationalPointPart'
      additionalProperties: false
    OperationalPointExtensions:
      type: object
      properties:
        identifier:
          allOf:
          - type: object
            required:
            - name
            - uic
            properties:
              name:
                type: string
                minLength: 1
              uic:
                type: integer
                format: int64
            additionalProperties: false
          nullable: true
        sncf:
          allOf:
          - type: object
            required:
            - ci
            - ch
            - ch_short_label
            - ch_long_label
            - trigram
            properties:
              ch:
                type: string
              ch_long_label:
                type: string
                minLength: 1
              ch_short_label:
                type: string
                minLength: 1
              ci:
                type: integer
                format: int64
              trigram:
                type: string
            additionalProperties: false
          nullable: true
      additionalProperties: false
    OperationalPointPart:
      type: object
      required:
      - track
      - position
      properties:
        extensions:
          type: object
          properties:
            sncf:
              allOf:
              - type: object
                required:
                - kp
                properties:
                  kp:
                    type: string
                additionalProperties: false
              nullable: true
          additionalProperties: false
        position:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    Ordering:
      type: string
      enum:
      - NameAsc
      - NameDesc
      - CreationDateAsc
      - CreationDateDesc
      - LastModifiedDesc
      - LastModifiedAsc
    PaginationStats:
      type: object
      description: |-
        Statistics about a paginated editoast response

        Provides the pagination settings issued in the request alongside
        a few convenience fields useful to navigate the paginated results.

        # Expected usage

        This struct is meant to be used and flattened in the response of a paginated query.

        ```
        #[derive(Serialize, ToSchema)]
        struct MyPaginatedResponse {
        #[schema(flatten)]
        pagination: PaginationStats,
        result: Vec<MyData>,
        // any other field that makes sense in a paginated response
        }
        ```

        We named the data field `result` to cope with the old pagination schema which
        enforced this name. For new paginated responses, the field name is up to your imagination :)
      required:
      - count
      - page_size
      - page_count
      - current
      - previous
      - next
      properties:
        count:
          type: integer
          format: int64
          description: The total number of items
          minimum: 0
        current:
          type: integer
          format: int64
          description: The current page number
          minimum: 1
        next:
          type: integer
          format: int64
          description: The next page number, if any
          nullable: true
          minimum: 1
        page_count:
          type: integer
          format: int64
          description: The total number of pages
          minimum: 0
        page_size:
          type: integer
          format: int64
          description: The number of items per page
          minimum: 1
        previous:
          type: integer
          format: int64
          description: The previous page number, if any
          nullable: true
          minimum: 1
    Patch:
      type: array
      items:
        $ref: '#/components/schemas/PatchOperation'
      description: Representation of JSON Patch (list of patch operations)
    PatchOperation:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/AddOperation'
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
              - add
      - allOf:
        - $ref: '#/components/schemas/RemoveOperation'
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
              - remove
      - allOf:
        - $ref: '#/components/schemas/ReplaceOperation'
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
              - replace
      - allOf:
        - $ref: '#/components/schemas/MoveOperation'
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
              - move
      - allOf:
        - $ref: '#/components/schemas/CopyOperation'
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
              - copy
      - allOf:
        - $ref: '#/components/schemas/TestOperation'
        - type: object
          required:
          - op
          properties:
            op:
              type: string
              enum:
              - test
      description: JSON Patch single patch operation
    PathItem:
      allOf:
      - $ref: '#/components/schemas/PathItemLocation'
      - type: object
        required:
        - id
        properties:
          deleted:
            type: boolean
            description: |-
              Metadata given to mark a point as wishing to be deleted by the user.
              It's useful for soft deleting the point (waiting to fix / remove all references)
              If true, the train schedule is consider as invalid and must be edited
          id:
            type: string
            minLength: 1
      description: A location on the path of a train
    PathItemLocation:
      oneOf:
      - $ref: '#/components/schemas/TrackOffset'
      - type: object
        required:
        - operational_point
        properties:
          operational_point:
            type: string
            maxLength: 255
            minLength: 1
      - type: object
        required:
        - trigram
        properties:
          secondary_code:
            type: string
            description: An optional secondary code to identify a more specific location
            nullable: true
          trigram:
            type: string
            minLength: 1
      - type: object
        required:
        - uic
        properties:
          secondary_code:
            type: string
            description: An optional secondary code to identify a more specific location
            nullable: true
          uic:
            type: integer
            format: int32
            description: The [UIC](https://en.wikipedia.org/wiki/List_of_UIC_country_codes) code of an operational point
            minimum: 0
      description: The location of a path waypoint
    PathProperties:
      type: object
      description: Properties along a path. Each property is optional since it depends on what the user requests.
      properties:
        curves:
          allOf:
          - type: object
            description: Property f64 values along a path. Each value is associated to a range of the path.
            required:
            - boundaries
            - values
            properties:
              boundaries:
                type: array
                items:
                  type: integer
                  format: int64
                  minimum: 0
                description: |-
                  List of `n` boundaries of the ranges.
                  A boundary is a distance from the beginning of the path in mm.
              values:
                type: array
                items:
                  type: number
                  format: double
                description: List of `n+1` values associated to the ranges
          nullable: true
        electrifications:
          allOf:
          - type: object
            description: Electrification property along a path. Each value is associated to a range of the path.
            required:
            - boundaries
            - values
            properties:
              boundaries:
                type: array
                items:
                  type: integer
                  format: int64
                  minimum: 0
                description: |-
                  List of `n` boundaries of the ranges.
                  A boundary is a distance from the beginning of the path in mm.
              values:
                type: array
                items:
                  oneOf:
                  - type: object
                    description: Electrified section with a given voltage
                    required:
                    - voltage
                    - type
                    properties:
                      type:
                        type: string
                        enum:
                        - electrification
                      voltage:
                        type: string
                  - type: object
                    description: Neutral section with a lower pantograph instruction or just a dead section
                    required:
                    - lower_pantograph
                    - type
                    properties:
                      lower_pantograph:
                        type: boolean
                      type:
                        type: string
                        enum:
                        - neutral_section
                  - type: object
                    required:
                    - type
                    properties:
                      type:
                        type: string
                        enum:
                        - non_electrified
                description: List of `n+1` values associated to the ranges
          nullable: true
        geometry:
          allOf:
          - $ref: '#/components/schemas/GeoJsonLineString'
          nullable: true
        operational_points:
          type: array
          items:
            type: object
            description: Operational point along a path.
            required:
            - id
            - part
            - position
            properties:
              extensions:
                $ref: '#/components/schemas/OperationalPointExtensions'
              id:
                type: string
                maxLength: 255
                minLength: 1
              part:
                $ref: '#/components/schemas/OperationalPointPart'
              position:
                type: integer
                format: int64
                description: Distance from the beginning of the path in mm
                minimum: 0
          description: Operational points along the path
          nullable: true
        slopes:
          allOf:
          - type: object
            description: Property f64 values along a path. Each value is associated to a range of the path.
            required:
            - boundaries
            - values
            properties:
              boundaries:
                type: array
                items:
                  type: integer
                  format: int64
                  minimum: 0
                description: |-
                  List of `n` boundaries of the ranges.
                  A boundary is a distance from the beginning of the path in mm.
              values:
                type: array
                items:
                  type: number
                  format: double
                description: List of `n+1` values associated to the ranges
          nullable: true
    PathPropertiesInput:
      type: object
      required:
      - track_section_ranges
      properties:
        track_section_ranges:
          type: array
          items:
            $ref: '#/components/schemas/TrackRange'
          description: List of track sections
    PathfindingInput:
      type: object
      description: |-
        Path input is described by some rolling stock information
        and a list of path waypoints
      required:
      - rolling_stock_loading_gauge
      - rolling_stock_is_thermal
      - rolling_stock_supported_electrifications
      - rolling_stock_supported_signaling_systems
      - path_items
      - rolling_stock_maximum_speed
      - rolling_stock_length
      properties:
        path_items:
          type: array
          items:
            $ref: '#/components/schemas/PathItemLocation'
          description: List of waypoints given to the pathfinding
        rolling_stock_is_thermal:
          type: boolean
          description: Can the rolling stock run on non-electrified tracks
        rolling_stock_length:
          type: number
          format: double
          description: Rolling stock length
        rolling_stock_loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        rolling_stock_maximum_speed:
          type: number
          format: double
          description: Rolling stock maximum speed
        rolling_stock_supported_electrifications:
          type: array
          items:
            type: string
          description: |-
            List of supported electrification modes.
            Empty if does not support any electrification
        rolling_stock_supported_signaling_systems:
          type: array
          items:
            type: string
          description: List of supported signaling systems
    PathfindingItem:
      type: object
      required:
      - location
      properties:
        duration:
          type: integer
          format: int64
          description: The stop duration in milliseconds, None if the train does not stop.
          nullable: true
          minimum: 0
        location:
          $ref: '#/components/schemas/PathItemLocation'
        timing_data:
          allOf:
          - $ref: '#/components/schemas/StepTimingData'
          nullable: true
    PathfindingOutput:
      type: object
      required:
      - track_ranges
      - detectors
      - switches_directions
      properties:
        detectors:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
        switches_directions:
          type: object
          additionalProperties:
            type: string
            maxLength: 255
            minLength: 1
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
    PathfindingResult:
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/PathfindingResultSuccess'
        - type: object
          required:
          - status
          properties:
            status:
              type: string
              enum:
              - success
      - type: object
        required:
        - track_section_ranges
        - length
        - status
        properties:
          length:
            type: integer
            format: int64
            minimum: 0
          status:
            type: string
            enum:
            - not_found_in_blocks
          track_section_ranges:
            type: array
            items:
              $ref: '#/components/schemas/TrackRange'
      - type: object
        required:
        - track_section_ranges
        - length
        - status
        properties:
          length:
            type: integer
            format: int64
            minimum: 0
          status:
            type: string
            enum:
            - not_found_in_routes
          track_section_ranges:
            type: array
            items:
              $ref: '#/components/schemas/TrackRange'
      - type: object
        required:
        - status
        properties:
          status:
            type: string
            enum:
            - not_found_in_tracks
      - type: object
        required:
        - relaxed_constraints_path
        - incompatible_constraints
        - status
        properties:
          incompatible_constraints:
            $ref: '#/components/schemas/IncompatibleConstraints'
          relaxed_constraints_path:
            $ref: '#/components/schemas/PathfindingResultSuccess'
          status:
            type: string
            enum:
            - incompatible_constraints
      - type: object
        required:
        - index
        - path_item
        - status
        properties:
          index:
            type: integer
            minimum: 0
          path_item:
            $ref: '#/components/schemas/PathItemLocation'
          status:
            type: string
            enum:
            - invalid_path_item
      - type: object
        required:
        - status
        properties:
          status:
            type: string
            enum:
            - not_enough_path_items
      - type: object
        required:
        - rolling_stock_name
        - status
        properties:
          rolling_stock_name:
            type: string
          status:
            type: string
            enum:
            - rolling_stock_not_found
      - type: object
        required:
        - core_error
        - status
        properties:
          core_error:
            $ref: '#/components/schemas/InternalError'
          status:
            type: string
            enum:
            - pathfinding_failed
    PathfindingResultSuccess:
      type: object
      description: A successful pathfinding result. This is also used for STDCM response.
      required:
      - blocks
      - routes
      - track_section_ranges
      - length
      - path_item_positions
      properties:
        blocks:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
          description: Path description as block ids
        length:
          type: integer
          format: int64
          description: Length of the path in mm
          minimum: 0
        path_item_positions:
          type: array
          items:
            type: integer
            format: int64
            minimum: 0
          description: |-
            The path offset in mm of each path item given as input of the pathfinding
            The first value is always `0` (beginning of the path) and the last one is always equal to the `length` of the path in mm
        routes:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
          description: Path description as route ids
        track_section_ranges:
          type: array
          items:
            $ref: '#/components/schemas/TrackRange'
          description: Path description as track ranges
    PathfindingTrackLocationInput:
      type: object
      required:
      - track
      - position
      properties:
        position:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    PowerRestriction:
      type: object
      required:
      - power_restriction
      properties:
        power_restriction:
          type: string
    PowerRestrictionItem:
      type: object
      required:
      - from
      - to
      - value
      properties:
        from:
          type: string
          minLength: 1
        to:
          type: string
          minLength: 1
        value:
          type: string
      additionalProperties: false
    Project:
      type: object
      required:
      - id
      - name
      - creation_date
      - last_modification
      - tags
      properties:
        budget:
          type: integer
          format: int32
          nullable: true
        creation_date:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        funders:
          type: string
          nullable: true
        id:
          type: integer
          format: int64
        image:
          type: integer
          format: int64
          nullable: true
        last_modification:
          type: string
          format: date-time
        name:
          type: string
        objectives:
          type: string
          nullable: true
        tags:
          $ref: '#/components/schemas/Tags'
    ProjectCreateForm:
      type: object
      description: Creation form for a project
      required:
      - name
      properties:
        budget:
          type: integer
          format: int32
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 1024
        funders:
          type: string
          nullable: true
          maxLength: 1024
        image:
          type: integer
          format: int64
          description: The id of the image document
          nullable: true
        name:
          type: string
          maxLength: 128
        objectives:
          type: string
          nullable: true
          maxLength: 4096
        tags:
          $ref: '#/components/schemas/Tags'
    ProjectPatchForm:
      type: object
      description: Patch form for a project
      properties:
        budget:
          type: integer
          format: int32
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 1024
        funders:
          type: string
          nullable: true
          maxLength: 1024
        image:
          type: integer
          format: int64
          description: The id of the image document
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 128
        objectives:
          type: string
          nullable: true
          maxLength: 4096
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          nullable: true
    ProjectPathForm:
      type: object
      required:
      - infra_id
      - ids
      - path
      properties:
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
        ids:
          type: array
          items:
            type: integer
            format: int64
          uniqueItems: true
        infra_id:
          type: integer
          format: int64
        path:
          type: object
          description: Project path input is described by a list of routes and a list of track range
          required:
          - track_section_ranges
          - routes
          - blocks
          properties:
            blocks:
              type: array
              items:
                type: string
                maxLength: 255
                minLength: 1
              description: Path description as block ids
              minItems: 1
            routes:
              type: array
              items:
                type: string
                maxLength: 255
                minLength: 1
              description: List of route ids
              minItems: 1
            track_section_ranges:
              type: array
              items:
                $ref: '#/components/schemas/TrackRange'
              description: List of track ranges
              minItems: 1
    ProjectPathTrainResult:
      allOf:
      - type: object
        description: Project path output is described by time-space points and blocks
        required:
        - space_time_curves
        - signal_updates
        properties:
          signal_updates:
            type: array
            items:
              type: object
              required:
              - signal_id
              - time_start
              - time_end
              - position_start
              - position_end
              - color
              - blinking
              - aspect_label
              properties:
                aspect_label:
                  type: string
                  description: The labels of the new aspect
                blinking:
                  type: boolean
                  description: Whether the signal is blinking
                color:
                  type: integer
                  format: int32
                  description: |-
                    The color of the aspect
                    (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are blue)
                position_end:
                  type: integer
                  format: int64
                  description: The route ends at this position in mm on the train path
                  minimum: 0
                position_start:
                  type: integer
                  format: int64
                  description: The route starts at this position in mm on the train path
                  minimum: 0
                signal_id:
                  type: string
                  description: The id of the updated signal
                time_end:
                  type: integer
                  format: int64
                  description: The aspects stop being displayed at this time (number of seconds since `departure_time`)
                  minimum: 0
                time_start:
                  type: integer
                  format: int64
                  description: The aspects start being displayed at this time (number of mseconds since `departure_time`)
                  minimum: 0
            description: List of signal updates along the path
          space_time_curves:
            type: array
            items:
              type: object
              required:
              - positions
              - times
              properties:
                positions:
                  type: array
                  items:
                    type: integer
                    format: int64
                    minimum: 0
                  minItems: 2
                times:
                  type: array
                  items:
                    type: integer
                    format: int64
                    minimum: 0
                  minItems: 2
            description: List of space-time curves sections along the path
      - type: object
        required:
        - departure_time
        - rolling_stock_length
        properties:
          departure_time:
            type: string
            format: date-time
            description: Departure time of the train
          rolling_stock_length:
            type: integer
            format: int64
            description: Rolling stock length in mm
            minimum: 0
      description: Project path output is described by time-space points and blocks
    ProjectWithStudies:
      allOf:
      - $ref: '#/components/schemas/Project'
      - type: object
        required:
        - studies_count
        properties:
          studies_count:
            type: integer
            format: int64
            minimum: 0
    Property:
      type: string
      description: Enum representing the various associated properties that can be returned
      enum:
      - slopes
      - curves
      - electrifications
      - geometry
      - operational_points
    RailJson:
      type: object
      description: An infrastructure description in the RailJson format
      required:
      - version
      - operational_points
      - routes
      - extended_switch_types
      - switches
      - track_sections
      - speed_sections
      - neutral_sections
      - electrifications
      - signals
      - buffer_stops
      - detectors
      properties:
        buffer_stops:
          type: array
          items:
            $ref: '#/components/schemas/BufferStop'
          description: '`BufferStops` are obstacles designed to prevent trains from sliding off dead ends.'
        detectors:
          type: array
          items:
            $ref: '#/components/schemas/Detector'
          description: '`Detector` is a device that identifies the presence of a train in a TVD section (Track Vacancy Detection section), indicating when a track area is occupied.'
        electrifications:
          type: array
          items:
            $ref: '#/components/schemas/Electrification'
          description: To allow electric trains to run on our infrastructure, we need to specify which parts of the infrastructure is electrified.
        extended_switch_types:
          type: array
          items:
            $ref: '#/components/schemas/SwitchType'
          description: These define the types of switches available for route management.
        neutral_sections:
          type: array
          items:
            $ref: '#/components/schemas/NeutralSection'
          description: '`NeutralSections` are designated areas of rail infrastructure where train drivers are instructed to cut the power supply to the train, primarily for safety reasons.'
        operational_points:
          type: array
          items:
            $ref: '#/components/schemas/OperationalPoint'
          description: Operational point is also known in French as "Point Remarquable" (PR). One `OperationalPoint` is a **collection** of points (`OperationalPointParts`) of interest.
        routes:
          type: array
          items:
            $ref: '#/components/schemas/Route'
          description: A `Route` is an itinerary in the infrastructure. A train path is a sequence of routes. Routes are used to reserve section of path with the interlocking.
        signals:
          type: array
          items:
            $ref: '#/components/schemas/Signal'
          description: '`Signals` are devices that visually convey information to train drivers about whether it is safe to proceed, stop, or slow down, based on the interlocking system and the specific signaling rules in place.'
        speed_sections:
          type: array
          items:
            $ref: '#/components/schemas/SpeedSection'
          description: The `SpeedSections` represent speed limits (in meters per second) that are applied on some parts of the tracks. One `SpeedSection` can span on several track sections, and do not necessarily cover the whole track sections. Speed sections can overlap.
        switches:
          type: array
          items:
            $ref: '#/components/schemas/Switch'
          description: '`Switches` allow for route control and redirection of trains.'
        track_sections:
          type: array
          items:
            $ref: '#/components/schemas/TrackSection'
          description: '`TrackSection`` is a segment of rail between switches that serves as a bidirectional path for trains, and can be defined as the longest possible stretch of track within a rail infrastructure.'
        version:
          type: string
          description: The version of the RailJSON format. Defaults to the current version.
      additionalProperties: false
    RangeAllowance:
      type: object
      required:
      - begin_position
      - end_position
      - value
      properties:
        begin_position:
          type: number
          format: double
        end_position:
          type: number
          format: double
        value:
          $ref: '#/components/schemas/AllowanceValue'
    ReceptionSignal:
      type: string
      description: |-
        State of the signal where the train is received for its stop.
        For (important) details, see https://osrd.fr/en/docs/reference/design-docs/timetable/#modifiable-fields.
      enum:
      - OPEN
      - STOP
      - SHORT_SLIP_STOP
    RefillLaw:
      type: object
      description: physical law defining how the storage can be refilled
      required:
      - tau
      - soc_ref
      properties:
        soc_ref:
          type: number
          format: double
          maximum: 1
          minimum: 0
        tau:
          type: number
          format: double
          minimum: 0
      additionalProperties: false
    RemoveOperation:
      type: object
      description: JSON Patch 'remove' operation representation
      required:
      - path
      properties:
        path:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            within the target document where the operation is performed.
    ReplaceOperation:
      type: object
      description: JSON Patch 'replace' operation representation
      required:
      - path
      - value
      properties:
        path:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            within the target document where the operation is performed.
        value:
          description: Value to replace with.
    ReportTrain:
      type: object
      required:
      - positions
      - times
      - speeds
      - energy_consumption
      - path_item_times
      properties:
        energy_consumption:
          type: number
          format: double
          description: Total energy consumption
        path_item_times:
          type: array
          items:
            type: integer
            format: int64
            minimum: 0
          description: |-
            Time in ms of each path item given as input of the pathfinding
            The first value is always `0` (beginning of the path) and the last one, the total time of the simulation (end of the path)
        positions:
          type: array
          items:
            type: integer
            format: int64
            minimum: 0
          description: |-
            List of positions of a train
            Both positions (in mm) and times (in ms) must have the same length
        speeds:
          type: array
          items:
            type: number
            format: double
          description: List of speeds associated to a position
        times:
          type: array
          items:
            type: integer
            format: int64
            minimum: 0
    RjsPowerRestrictionRange:
      type: object
      description: A range along the train path where a power restriction is applied.
      required:
      - begin_position
      - end_position
      - power_restriction_code
      properties:
        begin_position:
          type: number
          format: float
          description: Offset from the start of the path, in meters.
        end_position:
          type: number
          format: float
          description: Offset from the start of the path, in meters.
        power_restriction_code:
          type: string
          description: The power restriction code to apply.
      example:
        begin_position: 0.0
        end_position: 1000.0
        power_restriction_code: C1US
    RollingResistance:
      type: object
      required:
      - type
      - A
      - B
      - C
      properties:
        A:
          type: number
          format: double
        B:
          type: number
          format: double
        C:
          type: number
          format: double
        type:
          type: string
      additionalProperties: false
    RollingStock:
      type: object
      required:
      - id
      - railjson_version
      - name
      - effort_curves
      - metadata
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - base_power_class
      - mass
      - rolling_resistance
      - loading_gauge
      - power_restrictions
      - energy_sources
      - locked
      - electrical_power_startup_time
      - raise_pantograph_time
      - version
      - supported_signaling_systems
      properties:
        base_power_class:
          type: string
          nullable: true
        comfort_acceleration:
          type: number
          format: double
        effort_curves:
          $ref: '#/components/schemas/EffortCurves'
        electrical_power_startup_time:
          type: number
          format: double
          nullable: true
        energy_sources:
          type: array
          items:
            $ref: '#/components/schemas/EnergySource'
        gamma:
          $ref: '#/components/schemas/Gamma'
        id:
          type: integer
          format: int64
        inertia_coefficient:
          type: number
          format: double
        length:
          type: number
          format: double
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        locked:
          type: boolean
        mass:
          type: number
          format: double
        max_speed:
          type: number
          format: double
        metadata:
          allOf:
          - $ref: '#/components/schemas/RollingStockMetadata'
          nullable: true
        name:
          type: string
        power_restrictions:
          type: object
          additionalProperties:
            type: string
        railjson_version:
          type: string
        raise_pantograph_time:
          type: number
          format: double
          nullable: true
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          type: number
          format: double
        startup_time:
          type: number
          format: double
        supported_signaling_systems:
          type: array
          items:
            type: string
        version:
          type: integer
          format: int64
    RollingStockError:
      oneOf:
      - type: string
        enum:
        - CannotReadImage
      - type: string
        enum:
        - CannotCreateCompoundImage
      - type: object
        required:
        - KeyNotFound
        properties:
          KeyNotFound:
            type: object
            required:
            - rolling_stock_key
            properties:
              rolling_stock_key:
                $ref: '#/components/schemas/RollingStockKey'
      - type: object
        required:
        - NameAlreadyUsed
        properties:
          NameAlreadyUsed:
            type: object
            required:
            - name
            properties:
              name:
                type: string
      - type: object
        required:
        - RollingStockIsLocked
        properties:
          RollingStockIsLocked:
            type: object
            required:
            - rolling_stock_id
            properties:
              rolling_stock_id:
                type: integer
                format: int64
      - type: object
        required:
        - RollingStockIsUsed
        properties:
          RollingStockIsUsed:
            type: object
            required:
            - rolling_stock_id
            - usage
            properties:
              rolling_stock_id:
                type: integer
                format: int64
              usage:
                type: array
                items:
                  $ref: '#/components/schemas/TrainScheduleScenarioStudyProject'
      - type: string
        enum:
        - BasePowerClassEmpty
    RollingStockForm:
      type: object
      required:
      - name
      - effort_curves
      - base_power_class
      - length
      - max_speed
      - startup_time
      - startup_acceleration
      - comfort_acceleration
      - gamma
      - inertia_coefficient
      - mass
      - rolling_resistance
      - loading_gauge
      - power_restrictions
      - supported_signaling_systems
      properties:
        base_power_class:
          type: string
          example: '5'
          nullable: true
        comfort_acceleration:
          type: number
          format: double
        effort_curves:
          $ref: '#/components/schemas/EffortCurves'
        electrical_power_startup_time:
          type: number
          format: double
          description: The time the train takes before actually using electrical power (in seconds). Is null if the train is not electric.
          example: 5.0
          nullable: true
        energy_sources:
          type: array
          items:
            $ref: '#/components/schemas/EnergySource'
        gamma:
          $ref: '#/components/schemas/Gamma'
        inertia_coefficient:
          type: number
          format: double
        length:
          type: number
          format: double
        loading_gauge:
          $ref: '#/components/schemas/LoadingGaugeType'
        locked:
          type: boolean
          nullable: true
        mass:
          type: number
          format: double
        max_speed:
          type: number
          format: double
        metadata:
          allOf:
          - $ref: '#/components/schemas/RollingStockMetadata'
          nullable: true
        name:
          type: string
        power_restrictions:
          type: object
          description: Mapping of power restriction code to power class
          additionalProperties:
            type: string
        raise_pantograph_time:
          type: number
          format: double
          description: The time it takes to raise this train's pantograph in seconds. Is null if the train is not electric.
          example: 15.0
          nullable: true
        rolling_resistance:
          $ref: '#/components/schemas/RollingResistance'
        startup_acceleration:
          type: number
          format: double
        startup_time:
          type: number
          format: double
        supported_signaling_systems:
          $ref: '#/components/schemas/RollingStockSupportedSignalingSystems'
    RollingStockKey:
      oneOf:
      - type: object
        required:
        - type
        - key
        properties:
          key:
            type: integer
            format: int64
          type:
            type: string
            enum:
            - Id
      - type: object
        required:
        - type
        - key
        properties:
          key:
            type: string
          type:
            type: string
            enum:
            - Name
    RollingStockLivery:
      type: object
      required:
      - id
      - name
      - rolling_stock_id
      properties:
        compound_image_id:
          type: integer
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        name:
          type: string
        rolling_stock_id:
          type: integer
          format: int64
    RollingStockLiveryCreateForm:
      type: object
      required:
      - name
      - images
      properties:
        images:
          type: array
          items:
            type: string
            format: binary
        name:
          type: string
    RollingStockLiveryMetadata:
      type: object
      required:
      - id
      - name
      properties:
        compound_image_id:
          type: integer
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        name:
          type: string
    RollingStockLockedUpdateForm:
      type: object
      required:
      - locked
      properties:
        locked:
          type: boolean
          description: New locked value
      additionalProperties: false
    RollingStockMetadata:
      type: object
      required:
      - detail
      - family
      - type
      - grouping
      - series
      - subseries
      - unit
      - number
      - reference
      properties:
        detail:
          type: string
        family:
          type: string
        grouping:
          type: string
        number:
          type: string
        reference:
          type: string
        series:
          type: string
        subseries:
          type: string
        type:
          type: string
        unit:
          type: string
      additionalProperties: false
    RollingStockSupportedSignalingSystems:
      type: array
      items:
        type: string
    RollingStockWithLiveries:
      allOf:
      - $ref: '#/components/schemas/RollingStock'
      - type: object
        required:
        - liveries
        properties:
          liveries:
            type: array
            items:
              $ref: '#/components/schemas/RollingStockLivery'
    Route:
      type: object
      required:
      - id
      - entry_point
      - entry_point_direction
      - exit_point
      - release_detectors
      - switches_directions
      properties:
        entry_point:
          $ref: '#/components/schemas/Waypoint'
        entry_point_direction:
          $ref: '#/components/schemas/Direction'
        exit_point:
          $ref: '#/components/schemas/Waypoint'
        id:
          type: string
          maxLength: 255
          minLength: 1
        release_detectors:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
        switches_directions:
          type: object
          additionalProperties:
            type: string
            maxLength: 255
            minLength: 1
      additionalProperties: false
    RoutePath:
      type: object
      required:
      - track_ranges
      - switches_directions
      properties:
        switches_directions:
          type: array
          items:
            type: array
            items:
              allOf:
              - type: string
              - type: string
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/DirectionalTrackRange'
    RoutingRequirement:
      type: object
      required:
      - route
      - begin_time
      - zones
      properties:
        begin_time:
          type: integer
          format: int64
          description: Time in ms
          minimum: 0
        route:
          type: string
        zones:
          type: array
          items:
            $ref: '#/components/schemas/RoutingZoneRequirement'
    RoutingZoneRequirement:
      type: object
      required:
      - zone
      - entry_detector
      - exit_detector
      - switches
      - end_time
      properties:
        end_time:
          type: integer
          format: int64
          description: Time in ms
          minimum: 0
        entry_detector:
          type: string
        exit_detector:
          type: string
        switches:
          type: object
          additionalProperties:
            type: string
        zone:
          type: string
    STDCMRequestPayload:
      type: object
      description: An STDCM request
      required:
      - steps
      - rolling_stock_id
      - comfort
      properties:
        comfort:
          $ref: '#/components/schemas/Comfort'
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
        margin:
          type: string
          description: Can be a percentage `X%`, a time in minutes per 100 kilometer `Xmin/100km`
          example:
          - 5%
          - 2min/100km
          nullable: true
        maximum_departure_delay:
          type: integer
          format: int64
          description: |-
            By how long we can shift the departure time in milliseconds
            Deprecated, first step data should be used instead
          nullable: true
          minimum: 0
        maximum_run_time:
          type: integer
          format: int64
          description: |-
            Specifies how long the total run time can be in milliseconds
            Deprecated, first step data should be used instead
          nullable: true
          minimum: 0
        rolling_stock_id:
          type: integer
          format: int64
        speed_limit_tags:
          type: string
          description: Train categories for speed limits
          nullable: true
        start_time:
          type: string
          format: date-time
          description: Deprecated, first step arrival time should be used instead
          nullable: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/PathfindingItem'
        time_gap_after:
          type: integer
          format: int64
          description: |-
            Margin after the train passage in milliseconds

            Enforces that the path used by the train should be free and
            available at least that many milliseconds after its passage.
          minimum: 0
        time_gap_before:
          type: integer
          format: int64
          description: |-
            Margin before the train passage in seconds

            Enforces that the path used by the train should be free and
            available at least that many milliseconds before its passage.
          minimum: 0
        work_schedule_group_id:
          type: integer
          format: int64
          nullable: true
    Scenario:
      type: object
      required:
      - id
      - infra_id
      - name
      - description
      - creation_date
      - last_modification
      - tags
      - timetable_id
      - study_id
      properties:
        creation_date:
          type: string
          format: date-time
        description:
          type: string
        electrical_profile_set_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        infra_id:
          type: integer
          format: int64
        last_modification:
          type: string
          format: date-time
        name:
          type: string
        study_id:
          type: integer
          format: int64
        tags:
          $ref: '#/components/schemas/Tags'
        timetable_id:
          type: integer
          format: int64
    ScenarioCreateForm:
      type: object
      description: This structure is used by the post endpoint to create a scenario
      required:
      - name
      - infra_id
      - timetable_id
      properties:
        description:
          type: string
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
        infra_id:
          type: integer
          format: int64
        name:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
        timetable_id:
          type: integer
          format: int64
    ScenarioPatchForm:
      type: object
      description: This structure is used by the patch endpoint to patch a scenario
      properties:
        description:
          type: string
          nullable: true
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
        infra_id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          nullable: true
    ScenarioReference:
      type: object
      required:
      - project_id
      - project_name
      - study_id
      - study_name
      - scenario_id
      - scenario_name
      properties:
        project_id:
          type: integer
          format: int64
        project_name:
          type: string
        scenario_id:
          type: integer
          format: int64
        scenario_name:
          type: string
        study_id:
          type: integer
          format: int64
        study_name:
          type: string
    ScenarioResponse:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - type: object
        required:
        - infra_name
        - trains_count
        - project
        - study
        properties:
          infra_name:
            type: string
          project:
            $ref: '#/components/schemas/Project'
          study:
            $ref: '#/components/schemas/Study'
          trains_count:
            type: integer
            format: int64
    ScenarioWithDetails:
      allOf:
      - $ref: '#/components/schemas/Scenario'
      - type: object
        required:
        - infra_name
        - trains_count
        properties:
          infra_name:
            type: string
          trains_count:
            type: integer
            format: int64
    ScheduleItem:
      type: object
      required:
      - at
      properties:
        arrival:
          type: string
          description: |-
            The expected arrival time at the stop.
            This will be used to compute the final simulation time.
          nullable: true
        at:
          type: string
          minLength: 1
        locked:
          type: boolean
          description: Whether the schedule item is locked (only for display purposes)
        reception_signal:
          $ref: '#/components/schemas/ReceptionSignal'
        stop_for:
          type: string
          description: |-
            Duration of the stop.
            Can be `None` if the train does not stop.
            If `None`, `reception_signal` must be `Open`.
            `Some("PT0S")` means the train stops for 0 seconds.
          nullable: true
      additionalProperties: false
    SearchPayload:
      type: object
      description: The payload of a search request
      required:
      - object
      - query
      properties:
        dry:
          type: boolean
          description: |-
            Whether to return the SQL query instead of executing it

            Only available in debug builds.
        object:
          type: string
          description: The object kind to query - run `editoast search list` to get all possible values
        query:
          $ref: '#/components/schemas/SearchQuery'
      example:
        object: operationalpoint
        query:
        - and
        - - =
          - - infra_id
          - 2
        - - search
          - - name
          - plop
    SearchQuery:
      oneOf:
      - type: boolean
      - type: number
        format: double
      - type: integer
        format: int64
      - type: string
      - type: array
        items:
          allOf:
          - $ref: '#/components/schemas/SearchQuery'
          nullable: true
      description: A search query
      example:
      - and
      - - =
        - - infra_id
        - 2
      - - search
        - - name
        - plop
    SearchResultItem:
      oneOf:
      - $ref: '#/components/schemas/SearchResultItemTrack'
      - $ref: '#/components/schemas/SearchResultItemOperationalPoint'
      - $ref: '#/components/schemas/SearchResultItemSignal'
      - $ref: '#/components/schemas/SearchResultItemProject'
      - $ref: '#/components/schemas/SearchResultItemStudy'
      - $ref: '#/components/schemas/SearchResultItemScenario'
      description: A search result item that depends on the query's `object`
    SearchResultItemOperationalPoint:
      type: object
      description: |
        A search result item for a query with `object = "operationalpoint"`
      required:
      - obj_id
      - infra_id
      - uic
      - name
      - trigram
      - ch
      - ci
      - geographic
      - track_sections
      properties:
        ch:
          type: string
        ci:
          type: integer
          format: int64
          minimum: 0
        geographic:
          $ref: '#/components/schemas/GeoJsonPoint'
        infra_id:
          type: integer
          format: int64
        name:
          type: string
        obj_id:
          type: string
        track_sections:
          type: array
          items:
            type: object
            required:
            - track
            - position
            properties:
              position:
                type: number
                format: double
              track:
                type: string
        trigram:
          type: string
        uic:
          type: integer
          format: int64
    SearchResultItemProject:
      type: object
      description: A search result item for a query with `object = "project"`
      required:
      - id
      - image
      - name
      - studies_count
      - description
      - last_modification
      - tags
      properties:
        description:
          type: string
        id:
          type: integer
          format: int64
          minimum: 0
        image:
          type: integer
          format: int64
          nullable: true
          minimum: 0
        last_modification:
          type: string
          format: date-time
        name:
          type: string
        studies_count:
          type: integer
          format: int64
          minimum: 0
        tags:
          type: array
          items:
            type: string
    SearchResultItemScenario:
      type: object
      description: A search result item for a query with `object = "scenario"`
      required:
      - id
      - study_id
      - name
      - electrical_profile_set_id
      - infra_id
      - infra_name
      - trains_count
      - description
      - last_modification
      - tags
      properties:
        description:
          type: string
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
          minimum: 0
        id:
          type: integer
          format: int64
          minimum: 0
        infra_id:
          type: integer
          format: int64
          minimum: 0
        infra_name:
          type: string
        last_modification:
          type: string
          format: date-time
        name:
          type: string
        study_id:
          type: integer
          format: int64
          minimum: 0
        tags:
          type: array
          items:
            type: string
        trains_count:
          type: integer
          format: int64
          minimum: 0
    SearchResultItemSignal:
      type: object
      description: |
        A search result item for a query with `object = "signal"`
      required:
      - infra_id
      - label
      - signaling_systems
      - settings
      - line_code
      - line_name
      - geographic
      properties:
        geographic:
          $ref: '#/components/schemas/GeoJsonPoint'
        infra_id:
          type: integer
          format: int64
        label:
          type: string
        line_code:
          type: integer
          format: int64
          minimum: 0
        line_name:
          type: string
        settings:
          type: array
          items:
            type: string
        signaling_systems:
          type: array
          items:
            type: string
        sprite:
          type: string
          nullable: true
        sprite_signaling_system:
          type: string
          nullable: true
    SearchResultItemStudy:
      type: object
      description: A search result item for a query with `object = "study"`
      required:
      - id
      - project_id
      - name
      - scenarios_count
      - description
      - last_modification
      - tags
      - budget
      properties:
        budget:
          type: integer
          format: int32
          nullable: true
          minimum: 0
        description:
          type: string
          nullable: true
        id:
          type: integer
          format: int64
          minimum: 0
        last_modification:
          type: string
          format: date-time
        name:
          type: string
        project_id:
          type: integer
          format: int64
          minimum: 0
        scenarios_count:
          type: integer
          format: int64
          minimum: 0
        tags:
          type: array
          items:
            type: string
    SearchResultItemTrack:
      type: object
      description: |
        A search result item for a query with `object = "track"`
      required:
      - infra_id
      - line_name
      - line_code
      properties:
        infra_id:
          type: integer
          format: int64
        line_code:
          type: integer
          format: int64
        line_name:
          type: string
    Side:
      type: string
      enum:
      - LEFT
      - RIGHT
      - CENTER
    Sign:
      type: object
      required:
      - track
      - position
      - side
      - direction
      - type
      - value
      - kp
      properties:
        direction:
          $ref: '#/components/schemas/Direction'
        kp:
          type: string
        position:
          type: number
          format: double
        side:
          $ref: '#/components/schemas/Side'
        track:
          type: string
          maxLength: 255
          minLength: 1
        type:
          type: string
          minLength: 1
        value:
          type: string
      additionalProperties: false
    Signal:
      type: object
      required:
      - id
      - track
      - position
      - direction
      - sight_distance
      properties:
        direction:
          $ref: '#/components/schemas/Direction'
        extensions:
          type: object
          properties:
            sncf:
              allOf:
              - type: object
                required:
                - label
                - kp
                properties:
                  kp:
                    type: string
                  label:
                    type: string
                  side:
                    $ref: '#/components/schemas/Side'
                additionalProperties: false
              nullable: true
          additionalProperties: false
        id:
          type: string
          maxLength: 255
          minLength: 1
        logical_signals:
          type: array
          items:
            type: object
            required:
            - signaling_system
            - next_signaling_systems
            - settings
            - default_parameters
            - conditional_parameters
            properties:
              conditional_parameters:
                type: array
                items:
                  type: object
                  required:
                  - on_route
                  - parameters
                  properties:
                    on_route:
                      type: string
                      minLength: 1
                    parameters:
                      type: object
                      additionalProperties:
                        type: string
                        minLength: 1
              default_parameters:
                type: object
                additionalProperties:
                  type: string
                  minLength: 1
              next_signaling_systems:
                type: array
                items:
                  type: string
              settings:
                type: object
                additionalProperties:
                  type: string
                  minLength: 1
              signaling_system:
                type: string
        position:
          type: number
          format: double
        sight_distance:
          type: number
          format: double
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    SignalSighting:
      type: object
      required:
      - signal
      - time
      - position
      - state
      properties:
        position:
          type: integer
          format: int64
          description: Position in mm
          minimum: 0
        signal:
          type: string
        state:
          type: string
        time:
          type: integer
          format: int64
          description: Time in ms
          minimum: 0
    SimulationResponse:
      oneOf:
      - type: object
        required:
        - base
        - provisional
        - final_output
        - mrsp
        - electrical_profiles
        - status
        properties:
          base:
            $ref: '#/components/schemas/ReportTrain'
          electrical_profiles:
            type: object
            required:
            - boundaries
            - values
            properties:
              boundaries:
                type: array
                items:
                  type: integer
                  format: int64
                  minimum: 0
                description: |-
                  List of `n` boundaries of the ranges (block path).
                  A boundary is a distance from the beginning of the path in mm.
              values:
                type: array
                items:
                  oneOf:
                  - type: object
                    required:
                    - electrical_profile_type
                    properties:
                      electrical_profile_type:
                        type: string
                        enum:
                        - no_profile
                  - type: object
                    required:
                    - handled
                    - electrical_profile_type
                    properties:
                      electrical_profile_type:
                        type: string
                        enum:
                        - profile
                      handled:
                        type: boolean
                      profile:
                        type: string
                        nullable: true
                description: List of `n+1` values associated to the ranges
          final_output:
            allOf:
            - $ref: '#/components/schemas/ReportTrain'
            - type: object
              required:
              - signal_sightings
              - zone_updates
              - spacing_requirements
              - routing_requirements
              properties:
                routing_requirements:
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingRequirement'
                signal_sightings:
                  type: array
                  items:
                    $ref: '#/components/schemas/SignalSighting'
                spacing_requirements:
                  type: array
                  items:
                    $ref: '#/components/schemas/SpacingRequirement'
                zone_updates:
                  type: array
                  items:
                    $ref: '#/components/schemas/ZoneUpdate'
          mrsp:
            type: object
            description: A MRSP computation result (Most Restrictive Speed Profile)
            required:
            - boundaries
            - values
            properties:
              boundaries:
                type: array
                items:
                  type: integer
                  format: int64
                  minimum: 0
                description: |-
                  List of `n` boundaries of the ranges (block path).
                  A boundary is a distance from the beginning of the path in mm.
              values:
                type: array
                items:
                  type: object
                  required:
                  - speed
                  properties:
                    source:
                      allOf:
                      - oneOf:
                        - type: object
                          required:
                          - tag
                          - speed_limit_source_type
                          properties:
                            speed_limit_source_type:
                              type: string
                              enum:
                              - given_train_tag
                            tag:
                              type: string
                        - type: object
                          required:
                          - tag
                          - speed_limit_source_type
                          properties:
                            speed_limit_source_type:
                              type: string
                              enum:
                              - fallback_tag
                            tag:
                              type: string
                        - type: object
                          required:
                          - speed_limit_source_type
                          properties:
                            speed_limit_source_type:
                              type: string
                              enum:
                              - unknown_tag
                      nullable: true
                    speed:
                      type: number
                      format: double
                      description: in meters per second
                description: List of `n+1` values associated to the ranges
          provisional:
            $ref: '#/components/schemas/ReportTrain'
          status:
            type: string
            enum:
            - success
      - type: object
        required:
        - pathfinding_result
        - status
        properties:
          pathfinding_result:
            $ref: '#/components/schemas/PathfindingResult'
          status:
            type: string
            enum:
            - pathfinding_failed
      - type: object
        required:
        - core_error
        - status
        properties:
          core_error:
            $ref: '#/components/schemas/InternalError'
          status:
            type: string
            enum:
            - simulation_failed
    SimulationSummaryResult:
      oneOf:
      - type: object
        description: Minimal information on a simulation's result
        required:
        - length
        - time
        - energy_consumption
        - path_item_times_final
        - path_item_times_provisional
        - path_item_times_base
        - status
        properties:
          energy_consumption:
            type: number
            format: double
            description: Total energy consumption of a train in kWh
          length:
            type: integer
            format: int64
            description: Length of a path in mm
            minimum: 0
          path_item_times_base:
            type: array
            items:
              type: integer
              format: int64
              minimum: 0
            description: |-
              Base simulation time for each train schedule path item.
              The first value is always `0` (beginning of the path) and the last one, the total time of the simulation (end of the path)
          path_item_times_final:
            type: array
            items:
              type: integer
              format: int64
              minimum: 0
            description: |-
              Final simulation time for each train schedule path item.
              The first value is always `0` (beginning of the path) and the last one, the total time of the simulation (end of the path)
          path_item_times_provisional:
            type: array
            items:
              type: integer
              format: int64
              minimum: 0
            description: |-
              Provisional simulation time for each train schedule path item.
              The first value is always `0` (beginning of the path) and the last one, the total time of the simulation (end of the path)
          status:
            type: string
            enum:
            - success
          time:
            type: integer
            format: int64
            description: Travel time in ms
            minimum: 0
      - type: object
        required:
        - status
        properties:
          status:
            type: string
            enum:
            - pathfinding_not_found
      - type: object
        description: An error has occured during pathfinding
        required:
        - error_type
        - status
        properties:
          error_type:
            type: string
          status:
            type: string
            enum:
            - pathfinding_failed
      - type: object
        description: An error has occured during computing
        required:
        - error_type
        - status
        properties:
          error_type:
            type: string
          status:
            type: string
            enum:
            - simulation_failed
      - type: object
        description: Rolling stock not found
        required:
        - rolling_stock_name
        - status
        properties:
          rolling_stock_name:
            type: string
          status:
            type: string
            enum:
            - rolling_stock_not_found
    Slope:
      type: object
      required:
      - gradient
      - begin
      - end
      properties:
        begin:
          type: number
          format: double
        end:
          type: number
          format: double
        gradient:
          type: number
          format: double
      additionalProperties: false
    SpacingRequirement:
      type: object
      required:
      - zone
      - begin_time
      - end_time
      properties:
        begin_time:
          type: integer
          format: int64
          minimum: 0
        end_time:
          type: integer
          format: int64
          minimum: 0
        zone:
          type: string
    SpeedDependantPower:
      type: object
      description: power-speed curve (in an energy source)
      required:
      - speeds
      - powers
      properties:
        powers:
          type: array
          items:
            type: number
            format: double
        speeds:
          type: array
          items:
            type: number
            format: double
      additionalProperties: false
    SpeedSection:
      type: object
      required:
      - id
      - speed_limit_by_tag
      - track_ranges
      properties:
        extensions:
          type: object
          properties:
            psl_sncf:
              allOf:
              - type: object
                required:
                - announcement
                - z
                - r
                properties:
                  announcement:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sign'
                  r:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sign'
                  z:
                    $ref: '#/components/schemas/Sign'
                additionalProperties: false
              nullable: true
          additionalProperties: false
        id:
          type: string
          maxLength: 255
          minLength: 1
        on_routes:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
          nullable: true
        speed_limit:
          allOf:
          - type: number
            format: double
          nullable: true
        speed_limit_by_tag:
          type: object
          additionalProperties:
            type: number
            format: double
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/ApplicableDirectionsTrackRange'
      additionalProperties: false
    StandardAllowance:
      type: object
      required:
      - default_value
      - ranges
      - distribution
      properties:
        capacity_speed_limit:
          type: number
          format: double
        default_value:
          $ref: '#/components/schemas/AllowanceValue'
        distribution:
          $ref: '#/components/schemas/AllowanceDistribution'
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/RangeAllowance'
    StdcmSearchEnvironment:
      type: object
      required:
      - id
      - infra_id
      - timetable_id
      - search_window_begin
      - search_window_end
      properties:
        electrical_profile_set_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        infra_id:
          type: integer
          format: int64
        search_window_begin:
          type: string
          format: date-time
        search_window_end:
          type: string
          format: date-time
        timetable_id:
          type: integer
          format: int64
        work_schedule_group_id:
          type: integer
          format: int64
    StdcmSearchEnvironmentCreateForm:
      type: object
      required:
      - infra_id
      - timetable_id
      - search_window_begin
      - search_window_end
      properties:
        electrical_profile_set_id:
          type: integer
          format: int64
          nullable: true
        infra_id:
          type: integer
          format: int64
        search_window_begin:
          type: string
          format: date-time
        search_window_end:
          type: string
          format: date-time
        timetable_id:
          type: integer
          format: int64
        work_schedule_group_id:
          type: integer
          format: int64
          nullable: true
    StepTimingData:
      type: object
      required:
      - arrival_time
      - arrival_time_tolerance_before
      - arrival_time_tolerance_after
      properties:
        arrival_time:
          type: string
          format: date-time
          description: Time at which the train should arrive at the location
        arrival_time_tolerance_after:
          type: integer
          format: int64
          description: The train may arrive up to this duration after the expected arrival time
          minimum: 0
        arrival_time_tolerance_before:
          type: integer
          format: int64
          description: The train may arrive up to this duration before the expected arrival time
          minimum: 0
    Study:
      type: object
      required:
      - id
      - name
      - creation_date
      - last_modification
      - tags
      - state
      - project_id
      properties:
        actual_end_date:
          type: string
          format: date
          nullable: true
        budget:
          type: integer
          format: int32
          nullable: true
        business_code:
          type: string
          nullable: true
        creation_date:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        expected_end_date:
          type: string
          format: date
          nullable: true
        id:
          type: integer
          format: int64
        last_modification:
          type: string
          format: date-time
        name:
          type: string
        project_id:
          type: integer
          format: int64
        service_code:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        state:
          type: string
        study_type:
          type: string
          nullable: true
        tags:
          $ref: '#/components/schemas/Tags'
    StudyCreateForm:
      type: object
      description: This structure is used by the post endpoint to create a study
      required:
      - name
      - state
      properties:
        actual_end_date:
          type: string
          format: date
          nullable: true
        budget:
          type: integer
          format: int32
          nullable: true
        business_code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expected_end_date:
          type: string
          format: date
          nullable: true
        name:
          type: string
        service_code:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        state:
          type: string
        study_type:
          type: string
          nullable: true
        tags:
          $ref: '#/components/schemas/Tags'
    StudyPatchForm:
      type: object
      description: This structure is used by the patch endpoint to patch a study
      properties:
        actual_end_date:
          type: string
          format: date
          nullable: true
        budget:
          type: integer
          format: int32
          nullable: true
        business_code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expected_end_date:
          type: string
          format: date
          nullable: true
        name:
          type: string
          nullable: true
        service_code:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        state:
          type: string
          nullable: true
        study_type:
          type: string
          nullable: true
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          nullable: true
    StudyResponse:
      allOf:
      - $ref: '#/components/schemas/Study'
      - type: object
        required:
        - scenarios_count
        - project
        properties:
          project:
            $ref: '#/components/schemas/Project'
          scenarios_count:
            type: integer
            format: int64
            minimum: 0
    StudyWithScenarios:
      allOf:
      - $ref: '#/components/schemas/Study'
      - type: object
        required:
        - scenarios_count
        properties:
          scenarios_count:
            type: integer
            format: int64
            minimum: 0
    Switch:
      type: object
      required:
      - id
      - switch_type
      - group_change_delay
      - ports
      properties:
        extensions:
          type: object
          properties:
            sncf:
              allOf:
              - type: object
                required:
                - label
                properties:
                  label:
                    type: string
                    minLength: 1
                additionalProperties: false
              nullable: true
          additionalProperties: false
        group_change_delay:
          type: number
          format: double
        id:
          type: string
          maxLength: 255
          minLength: 1
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TrackEndpoint'
        switch_type:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    SwitchPortConnection:
      type: object
      required:
      - src
      - dst
      properties:
        dst:
          type: string
          maxLength: 255
          minLength: 1
        src:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    SwitchType:
      type: object
      required:
      - id
      - ports
      - groups
      properties:
        groups:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/SwitchPortConnection'
        id:
          type: string
          maxLength: 255
          minLength: 1
        ports:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
      additionalProperties: false
      example:
        groups:
          LEFT:
            dst: LEFT
            src: BASE
          RIGHT:
            dst: RIGHT
            src: BASE
        id: Point
        ports:
        - LEFT
        - RIGHT
        - BASE
    Tags:
      type: array
      items:
        type: string
    TestOperation:
      type: object
      description: JSON Patch 'test' operation representation
      required:
      - path
      - value
      properties:
        path:
          type: string
          description: |-
            JSON-Pointer value [RFC6901](https://tools.ietf.org/html/rfc6901) that references a location
            within the target document where the operation is performed.
        value:
          description: Value to test against.
    TimetableDetailedResult:
      type: object
      description: Creation result for a Timetable
      required:
      - timetable_id
      - train_ids
      properties:
        timetable_id:
          type: integer
          format: int64
        train_ids:
          type: array
          items:
            type: integer
            format: int64
    TimetableResult:
      type: object
      description: Creation result for a Timetable
      required:
      - timetable_id
      properties:
        timetable_id:
          type: integer
          format: int64
    TrackEndpoint:
      type: object
      required:
      - endpoint
      - track
      properties:
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        track:
          type: string
          maxLength: 255
          minLength: 1
      additionalProperties: false
    TrackLocation:
      type: object
      description: A track location is a track section and an offset
      required:
      - track_section
      - offset
      properties:
        offset:
          type: number
          format: double
          description: The offset on the track section in meters
        track_section:
          type: string
          maxLength: 255
          minLength: 1
    TrackOffset:
      type: object
      required:
      - track
      - offset
      properties:
        offset:
          type: integer
          format: int64
          description: Offset in mm
          minimum: 0
        track:
          type: string
          maxLength: 255
          minLength: 1
    TrackRange:
      type: object
      description: |-
        An oriented range on a track section.
        `begin` is always less than `end`.
      required:
      - track_section
      - begin
      - end
      - direction
      properties:
        begin:
          type: integer
          format: int64
          description: The beginning of the range in mm.
          minimum: 0
        direction:
          $ref: '#/components/schemas/Direction'
        end:
          type: integer
          format: int64
          description: The end of the range in mm.
          minimum: 0
        track_section:
          type: string
          maxLength: 255
          minLength: 1
    TrackSection:
      type: object
      required:
      - id
      - length
      - slopes
      - curves
      - geo
      properties:
        curves:
          type: array
          items:
            $ref: '#/components/schemas/Curve'
        extensions:
          type: object
          properties:
            sncf:
              allOf:
              - type: object
                required:
                - line_code
                - line_name
                - track_number
                - track_name
                properties:
                  line_code:
                    type: integer
                    format: int32
                  line_name:
                    type: string
                    minLength: 1
                  track_name:
                    type: string
                    minLength: 1
                  track_number:
                    type: integer
                    format: int32
                additionalProperties: false
              nullable: true
            source:
              allOf:
              - type: object
                required:
                - name
                - id
                properties:
                  id:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
                additionalProperties: false
              nullable: true
          additionalProperties: false
        geo:
          $ref: '#/components/schemas/GeoJsonLineString'
        id:
          type: string
          maxLength: 255
          minLength: 1
        length:
          type: number
          format: double
        loading_gauge_limits:
          type: array
          items:
            $ref: '#/components/schemas/LoadingGaugeLimit'
        slopes:
          type: array
          items:
            $ref: '#/components/schemas/Slope'
      additionalProperties: false
    TrainScheduleBase:
      type: object
      required:
      - train_name
      - rolling_stock_name
      - start_time
      - path
      - constraint_distribution
      properties:
        comfort:
          $ref: '#/components/schemas/Comfort'
        constraint_distribution:
          $ref: '#/components/schemas/Distribution'
        initial_speed:
          type: number
          format: double
        labels:
          type: array
          items:
            type: string
        margins:
          type: object
          required:
          - boundaries
          - values
          properties:
            boundaries:
              type: array
              items:
                type: string
                minLength: 1
            values:
              type: array
              items:
                type: string
              description: |-
                The values of the margins. Must contains one more element than the boundaries
                Can be a percentage `X%` or a time in minutes per 100 kilometer `Xmin/100km`
              example:
              - 5%
              - 2min/100km
          additionalProperties: false
        options:
          type: object
          properties:
            use_electrical_profiles:
              type: boolean
          additionalProperties: false
        path:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/PathItemLocation'
            - type: object
              required:
              - id
              properties:
                deleted:
                  type: boolean
                  description: |-
                    Metadata given to mark a point as wishing to be deleted by the user.
                    It's useful for soft deleting the point (waiting to fix / remove all references)
                    If true, the train schedule is consider as invalid and must be edited
                id:
                  type: string
                  minLength: 1
            description: A location on the path of a train
        power_restrictions:
          type: array
          items:
            type: object
            required:
            - from
            - to
            - value
            properties:
              from:
                type: string
                minLength: 1
              to:
                type: string
                minLength: 1
              value:
                type: string
            additionalProperties: false
        rolling_stock_name:
          type: string
        schedule:
          type: array
          items:
            type: object
            required:
            - at
            properties:
              arrival:
                type: string
                description: |-
                  The expected arrival time at the stop.
                  This will be used to compute the final simulation time.
                nullable: true
              at:
                type: string
                minLength: 1
              locked:
                type: boolean
                description: Whether the schedule item is locked (only for display purposes)
              reception_signal:
                $ref: '#/components/schemas/ReceptionSignal'
              stop_for:
                type: string
                description: |-
                  Duration of the stop.
                  Can be `None` if the train does not stop.
                  If `None`, `reception_signal` must be `Open`.
                  `Some("PT0S")` means the train stops for 0 seconds.
                nullable: true
            additionalProperties: false
        speed_limit_tag:
          allOf:
          - type: string
            minLength: 1
          nullable: true
        start_time:
          type: string
          format: date-time
        train_name:
          type: string
    TrainScheduleForm:
      allOf:
      - $ref: '#/components/schemas/TrainScheduleBase'
      - type: object
        properties:
          timetable_id:
            type: integer
            format: int64
            description: Timetable attached to the train schedule
            nullable: true
    TrainScheduleOptionsV2:
      type: object
      properties:
        use_electrical_profiles:
          type: boolean
      additionalProperties: false
    TrainScheduleResult:
      allOf:
      - $ref: '#/components/schemas/TrainScheduleBase'
      - type: object
        required:
        - id
        - timetable_id
        properties:
          id:
            type: integer
            format: int64
          timetable_id:
            type: integer
            format: int64
    TrainScheduleScenarioStudyProject:
      type: object
      required:
      - train_schedule_id
      - train_name
      - project_id
      - project_name
      - study_id
      - study_name
      - scenario_id
      - scenario_name
      properties:
        project_id:
          type: integer
          format: int64
        project_name:
          type: string
        scenario_id:
          type: integer
          format: int64
        scenario_name:
          type: string
        study_id:
          type: integer
          format: int64
        study_name:
          type: string
        train_name:
          type: string
        train_schedule_id:
          type: integer
          format: int64
    Version:
      type: object
      required:
      - git_describe
      properties:
        git_describe:
          type: string
          nullable: true
    Waypoint:
      oneOf:
      - type: object
        required:
        - id
        - type
        properties:
          id:
            type: string
            maxLength: 255
            minLength: 1
          type:
            type: string
            enum:
            - BufferStop
      - type: object
        required:
        - id
        - type
        properties:
          id:
            type: string
            maxLength: 255
            minLength: 1
          type:
            type: string
            enum:
            - Detector
    WorkScheduleCreateForm:
      type: object
      description: This structure is used by the post endpoint to create a work schedule
      required:
      - work_schedule_group_name
      - work_schedules
      properties:
        work_schedule_group_name:
          type: string
        work_schedules:
          type: array
          items:
            $ref: '#/components/schemas/WorkScheduleItemForm'
    WorkScheduleCreateResponse:
      type: object
      required:
      - work_schedule_group_id
      properties:
        work_schedule_group_id:
          type: integer
          format: int64
    WorkScheduleItemForm:
      type: object
      required:
      - start_date_time
      - end_date_time
      - track_ranges
      - obj_id
      - work_schedule_type
      properties:
        end_date_time:
          type: string
          format: date-time
        obj_id:
          type: string
        start_date_time:
          type: string
          format: date-time
        track_ranges:
          type: array
          items:
            $ref: '#/components/schemas/TrackRange'
        work_schedule_type:
          type: string
          enum:
          - CATENARY
          - TRACK
    ZoneUpdate:
      type: object
      required:
      - zone
      - time
      - position
      - is_entry
      properties:
        is_entry:
          type: boolean
        position:
          type: integer
          format: int64
          minimum: 0
        time:
          type: integer
          format: int64
          minimum: 0
        zone:
          type: string
