name: Test Chartos

on:
  workflow_dispatch:
  pull_request:
    paths:
      - chartos/**

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
      - name: Load cached venv
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: chartos/.venv
          key: osrd-chartos-venv-${{ hashFiles('chartos/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          cd chartos
          poetry install --no-interaction --no-root
      - name: Run Tests
        run: |
          cd chartos
          source .venv/bin/activate
          pytest

  linter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install flake8
        run: pip install pyproject-flake8 flake8_formatter_junit_xml
      - name: Flake8
        run: pflake8 --config chartos/pyproject.toml --format junit-xml chartos > flake8.xml
      - name: Publish flake8 report
        uses: mikepenz/action-junit-report@v2
        if: failure()
        with:
          report_paths: flake8.xml
      - uses: reviewdog/action-black@v3
        with:
          github_token: ${{ secrets.github_token }}
          workdir: chartos
          filter_mode: nofilter
