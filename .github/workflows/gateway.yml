name: Test Gateway
on:
  workflow_dispatch:
  pull_request:
    paths:
      - gateway/**
      - .github/workflows/gateway.yml
  merge_group:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  gateway_tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Load cached target
        uses: actions/cache@v3
        id: cached-cargo-dependencies
        with:
          path: gateway/target/
          key: osrd-gateway-target-tests-${{ hashFiles('gateway/Cargo.lock') }}

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Test and coverage
        run: cargo tarpaulin -r ./gateway --out xml -- --test-threads 1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: codecov
          flags: gateway
          files: cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  gateway_linter:
    name: Check format and run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Load cached target
        uses: actions/cache@v3
        id: cached-cargo-dependencies
        with:
          path: gateway/target/
          key: osrd-gateway-target-linter-${{ hashFiles('gateway/Cargo.lock') }}

      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path gateway/Cargo.toml --check

      - name: Clippy linter
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets --manifest-path=gateway/Cargo.toml -- -D warnings

      - name: Documentation check
        run: cargo doc --manifest-path gateway/Cargo.toml
        env:
          RUSTDOCFLAGS: "-D warnings" # Set warnings as errors
