name: Run integration tests

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  integration_tests:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # run the CI on the actual latest commit of the PR, not the attempted merge
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"
      - name: Install dependencies
        run: |
          cd tests
          poetry install
      - name: Flake8
        run: |
          cd tests
          poetry run pflake8 --config ./pyproject.toml
      - name: Black
        run: |
          cd tests
          poetry run black . --check
      - name: Isort
        run: |
          cd tests
          poetry run isort . --check
      - name: Pytype
        run: |
          cd tests
          poetry run pytype -j auto

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn
        working-directory: front

#      - name: Install Playwright Browsers
#        run: npx --prefix ./front/ playwright install --with-deps

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Build the containers
        uses: docker/bake-action@v3
        with:
          load: true
          files: "docker-compose.yml"
          targets: "editoast,core,front"
          set: |
            editoast.cache-from=type=gha,scope=editoast
            editoast.cache-to=type=gha,mode=max,scope=editoast
            core.cache-from=type=gha,scope=core
            core.cache-to=type=gha,mode=max,scope=core
            front.cache-from=type=gha,scope=front
            front.cache-to=type=gha,mode=max,scope=front

      - name: Startup the test infrastructure
        run: "docker-compose up --no-build -d editoast core front wait-healthy"
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1

      - name: Run pytest
        run: |
          cd tests
          poetry run pytest -m "not e2e"

#      - name: Run Playwright tests
#        run: |
#          cd front
#          yarn e2e-tests

      - name: Print logs
        run: docker compose logs
        if: always()

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: front/test-results/
          retention-days: 30
