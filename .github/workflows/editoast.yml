name: Test Editoast

on:
  workflow_dispatch:
  pull_request:
    paths:
      - editoast/**
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # run the CI on the actual latest commit of the PR, not the attempted merge
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install lib posgresql
        run: sudo apt-get install -y libpq-dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the containers
        uses: docker/bake-action@v2
        with:
          load: true
          files: "docker-compose.yml"
          targets: "api,chartos"
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      - name: Startup the postgres, api and chartos
        run: "docker-compose up --no-build -d postgres api chartos"
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Load cached venv
        uses: actions/cache@v3
        id: cached-cargo-dependencies
        with:
          path: editoast/target/
          key: osrd-chartos-venv-${{ hashFiles('editoast/Cargo.lock') }}

      - name: Test
        run: |
          cd editoast
          cargo test --verbose -- --test-threads 2

      - name: Coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: "-r ./editoast --skip-clean"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          # github runs PR workflows on the result of a merge commit.
          # tell codecov the sha of the unmerged PR https://github.com/codecov/uploader/issues/525
          override_commit: "${{ github.event.pull_request.head.sha }}"
          name: codecov
          flags: editoast
          files: cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  linter:
    name: Check format and run linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # run the CI on the actual latest commit of the PR, not the attempted merge
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - name: Load cached venv
        uses: actions/cache@v3
        id: cached-cargo-dependencies
        with:
          path: editoast/target/
          key: osrd-chartos-venv-${{ hashFiles('editoast/Cargo.lock') }}
      - name: Format check
        run: |
          cd editoast
          cargo fmt --check
      - name: Clippy linter
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path=editoast/Cargo.toml -- -D warnings
