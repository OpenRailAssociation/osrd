openapi: 3.0.2
info:
  title: Chartos
  version: 0.2.0
paths:
  /health/:
    get:
      summary: Health
      operationId: health_health_get
      responses:
        200:
          description: Successful Response
          content:
            application/json:
              schema: {}
  /version:
    get:
      responses:
        200:
          description: Return the service version
          content:
            application/json:
              schema: 
                type: object
                properties:
                  git_describe:
                    type: string
                    nullable: true
                required:
                  - git_describe
  /info/:
    get:
      summary: Info
      operationId: info_info_get
      responses:
        200:
          description: Successful Response
          content:
            application/json:
              schema: {}
  /layer/{layer_slug}/mvt/{view_slug}/:
    get:
      summary: Mvt View Metadata
      operationId: mvt_view_metadata_layer__layer_slug__mvt__view_slug___get
      parameters:
        - required: true
          schema:
            title: Layer Slug
            type: string
          name: layer_slug
          in: path
        - required: true
          schema:
            title: View Slug
            type: string
          name: view_slug
          in: path
        - required: true
          schema:
            title: Infra id
            type: integer
          name: infra
          in: query
      responses:
        200:
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: vector
                  name:
                    type: string
                    example: track_sections
                  promotedId:
                    type: object
                    example: { track_sections: "id" }
                  scheme:
                    type: string
                    example: "xyz"
                  tiles:
                    type: array
                    items:
                      type: string
                      example: http://localhost:7070/tile/track_sections/geo/{z}/{x}/{y}/?infra=1
                  attribution:
                    type: string
                  minzoom:
                    type: integer
                  maxzoom:
                    type: integer
                    example: 18
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /tile/{layer_slug}/{view_slug}/{z}/{x}/{y}/:
    get:
      summary: Mvt View Tile
      operationId: mvt_view_tile_tile__layer_slug___view_slug___z___x___y___get
      parameters:
        - required: true
          schema:
            title: Layer Slug
            type: string
          name: layer_slug
          in: path
        - required: true
          schema:
            title: View Slug
            type: string
          name: view_slug
          in: path
        - required: true
          schema:
            title: Z
            type: integer
          name: z
          in: path
        - required: true
          schema:
            title: X
            type: integer
          name: x
          in: path
        - required: true
          schema:
            title: Y
            type: integer
          name: y
          in: path
        - required: true
          schema:
            title: Infra
            type: integer
          name: infra
          in: query
      responses:
        200:
          description: Successful Response
          content:
            application/x-protobuf:
              schema:
                type: string
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /layer/{layer_slug}/invalidate/:
    post:
      summary: Invalidate Layer
      description: Invalidate cache for a whole layer
      operationId: invalidate_layer_layer__layer_slug__invalidate__post
      parameters:
        - required: true
          schema:
            title: Layer Slug
            type: string
          name: layer_slug
          in: path
        - required: true
          schema:
            title: Infra
            type: integer
          name: infra
          in: query
      responses:
        204:
          description: Successful Response
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /layer/{layer_slug}/invalidate_bbox/:
    post:
      summary: Invalidate Layer Bbox
      description: Invalidate cache for a whole layer
      operationId: invalidate_layer_bbox_layer__layer_slug__invalidate_bbox__post
      parameters:
        - required: true
          schema:
            title: Layer Slug
            type: string
          name: layer_slug
          in: path
        - required: true
          schema:
            title: Infra
            type: integer
          name: infra
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Bounding Boxes
              type: array
              items:
                $ref: "#/components/schemas/BoundingBoxView"
        required: true
      responses:
        204:
          description: Successful Response
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /layer/{layer_slug}/objects/{view_slug}/{min_x}/{min_y}/{max_x}/{max_y}/:
    get:
      summary: Get Objects In Bbox
      description: Retrieve objects in a given bounding box
      operationId: get_objects_in_bbox_layer__layer_slug__objects__view_slug___min_x___min_y___max_x___max_y___get
      parameters:
        - required: true
          schema:
            title: Layer Slug
            type: string
          name: layer_slug
          in: path
        - required: true
          schema:
            title: View Slug
            type: string
          name: view_slug
          in: path
        - required: true
          schema:
            title: Min X
            type: number
          name: min_x
          in: path
        - required: true
          schema:
            title: Min Y
            type: number
          name: min_y
          in: path
        - required: true
          schema:
            title: Max X
            type: number
          name: max_x
          in: path
        - required: true
          schema:
            title: Max Y
            type: number
          name: max_y
          in: path
        - required: true
          schema:
            title: Infra id
            type: integer
          name: infra
          in: query
      responses:
        200:
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum: [FeatureCollection]
                  features:
                    type: array
                    items:
                      type: object
                      description: GeoJSON Feature containing all railjson properties
                      example:
                        type: Feature
                        geometry:
                          type: LineString
                          coordinates: [[2.1, 48.5], [2.5, 48.8]]
                        properties:
                          id: f8095b47-c0d3-4e2a-a252-4891bc1790bd
                          curves: "[]"
                          slopes: "[]"
                          line_code: 42
                          line_name: My example line
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    BoundingBoxView:
      title: BoundingBoxView
      required:
        - view
        - bbox
      type: object
      properties:
        view:
          title: View
          type: string
        bbox:
          title: Bbox
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: array
            items:
              maxItems: 2
              minItems: 2
              type: array
              items:
                type: number
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
