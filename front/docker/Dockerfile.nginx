### BUILD STAGE

FROM node:20-bookworm as build

WORKDIR /app

# Build dependencies
COPY package.json yarn.lock /app/
RUN yarn install --frozen-lockfile

# Generate the licenses file and build
COPY . /app
RUN yarn generate-licenses && yarn build

### TESTS STAGE

FROM build as tests

# Allow to import tests data files
COPY --from=test_data . /tests/data

### SERVE STAGE

FROM nginx:alpine

RUN apk add npm && \
    npm install -g @import-meta-env/cli && \
    rm /etc/nginx/conf.d/default.conf

COPY docker/nginx.conf /etc/nginx/conf.d
COPY docker/nginx-entrypoint.sh /entrypoint.sh

COPY --from=build /app/build /srv
COPY --from=build /app/.env.example /

ENV OSRD_BACKEND_URL=""

ARG OSRD_GIT_DESCRIBE
ENV OSRD_GIT_DESCRIBE=${OSRD_GIT_DESCRIBE}

ENTRYPOINT ["/entrypoint.sh"]
CMD ["sh", "-c", "npx import-meta-env -x /.env.example -p /srv/index.html && exec nginx -g 'daemon off;'"]
