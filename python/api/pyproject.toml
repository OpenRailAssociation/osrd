[tool.poetry]
name = "osrd"
version = "0.1.0"
description = ""
authors = ["DGEX Solutions <contact@osrd.fr>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
django = "4.2.3"
numpy = "^1.25"
intervaltree = "3.1.0"
psycopg2-binary = "^2.9"
djangorestframework = "3.14.0"
djangorestframework-gis = "1.0"
django-redis = "^5.3"
drf-nested-routers = "0.93.4"
requests = "2.31.0"
pillow = "^10"
pydantic = "1.10.10"
geojson-pydantic = "0.6.3"
osrd-schemas = { path = "../osrd_schemas/", develop = false }

# production
gunicorn = { version = "21.2.0", optional = true }
sentry-sdk = { version = "^1.15.0", optional = true }
uvloop = { version = "0.17.0", optional = true }
httptools = { version = "0.6.0", optional = true }
uvicorn = { version = "0.23.1", optional = true }

[tool.poetry.extras]
production = ["gunicorn", "sentry-sdk", "uvloop", "httptools", "uvicorn"]

[tool.poetry.group.dev.dependencies]
mock = "^5.0.1"
black = "^23"
isort = "^5.12.0"
pyproject-flake8 = "^6.0.0.post1"
django-debug-toolbar = "^4.1"
django-cors-headers = "^4.2"
flake8-formatter-junit-xml = "^0.0.6"

[tool.flake8]
ignore = "W503,E203"
max-line-length = 120
exclude = ["*/migrations/*", ".venv/", "config/"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
