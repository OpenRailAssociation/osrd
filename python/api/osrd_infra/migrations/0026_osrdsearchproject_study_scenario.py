# Generated by Django 4.1.5 on 2023-04-05 13:06

from django.db import migrations, models

from osrd_infra.migrations import run_sql_create_infra_search_table


class Migration(migrations.Migration):

    dependencies = [
        ("osrd_infra", "0025_rename_modes_and_profiles_simulationoutput_electrification_conditions"),
    ]

    operations = [
        migrations.RunSQL(
            """
        CREATE OR REPLACE FUNCTION osrd_prepare_for_search_tags(tags TEXT [])
          RETURNS TEXT LANGUAGE plpgsql IMMUTABLE PARALLEL SAFE AS $BODY$
            DECLARE prepared_tags tsvector[];
            concatenated_tags tsvector;
            search_text TEXT;
            BEGIN
        IF tags IS NULL OR array_length(tags, 1) = 0 THEN
        RETURN NULL; END IF;
        FOR i IN 1..coalesce(array_length(tags, 1), 0) LOOP
        prepared_tags [i] := to_tsvector('simple', unaccent(coalesce(tags [i], '')));
        END LOOP;
        concatenated_tags := coalesce(prepared_tags [1], '0');
        FOR i IN 2..coalesce(array_length(tags, 1), 0) LOOP
        concatenated_tags := concatenated_tags || coalesce(prepared_tags [i], '0');
        END LOOP;
search_text := array_to_string(tsvector_to_array(concatenated_tags), E'\n');
RETURN search_text;
END;
$BODY$;"""
        ),
        run_sql_create_infra_search_table(
            name="osrd_search_project",
            source_table="osrd_infra_project",
            search_columns={
                "name": "{source}.name",
                "description": "{source}.description",
            },
            extra_columns={
                "tags": ("""osrd_prepare_for_search_tags({source}.tags)""", "TEXT"),
            },
            triggers=True,
            phony_model_name="OsrdSearchProject",
        ),
        run_sql_create_infra_search_table(
            name="osrd_search_study",
            source_table="osrd_infra_study",
            search_columns={
                "name": "{source}.name",
                "description": "{source}.description",
            },
            extra_columns={
                "project_id": ("{source}.project_id", "INT"),
                "tags": ("""osrd_prepare_for_search_tags({source}.tags)""", "TEXT"),
            },
            triggers=True,
            phony_model_name="OsrdSearchStudy",
        ),
        run_sql_create_infra_search_table(
            name="osrd_search_scenario",
            source_table="osrd_infra_scenario",
            search_columns={
                "name": "{source}.name",
                "description": "{source}.description",
            },
            extra_columns={
                "study_id": ("{source}.study_id", "INT"),
                "tags": ("""osrd_prepare_for_search_tags({source}.tags)""", "TEXT"),
            },
            triggers=True,
            phony_model_name="OsrdSearchScenario",
        ),
    ]
