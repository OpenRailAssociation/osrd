# Generated by Django 4.1.5 on 2023-02-20 17:26

from django.db import migrations

from osrd_infra.migrations import run_sql_create_infra_search_table


class Migration(migrations.Migration):

    dependencies = [
        ("osrd_infra", "0013_simulationoutput_trainschedule_and_more"),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                CREATE TABLE osrd_search_track (
                    infra_id INT NOT NULL,
                    line_code INT NOT NULL,
                    line_name TEXT NOT NULL,
                    unprocessed_line_name TEXT NOT NULL,
                    UNIQUE (infra_id, line_code)
                );

                CREATE INDEX IF NOT EXISTS idx_gin_osrd_search_track_line_name ON
                osrd_search_track
                    USING GIN (
                    line_name gin_trgm_ops
                );

                CREATE INDEX IF NOT EXISTS idx_osrd_infra_tracksectionmodel_line_code ON osrd_infra_tracksectionmodel((("data"#>>'{extensions,sncf,line_code}')::integer));
                CREATE INDEX IF NOT EXISTS idx_osrd_infra_tracksectionmodel_infra_id ON osrd_infra_tracksectionmodel(infra_id);
                CREATE INDEX IF NOT EXISTS idx_osrd_infra_tracksectionlayer_obj_id ON osrd_infra_tracksectionlayer(obj_id);
                CREATE INDEX IF NOT EXISTS idx_osrd_infra_tracksectionlayer_infra_id ON osrd_infra_tracksectionlayer(infra_id);
           """,
            reverse_sql="""
                DROP TABLE osrd_search_track;
                DROP INDEX IF EXISTS idx_osrd_infra_tracksectionmodel_line_code;
                DROP INDEX IF EXISTS idx_osrd_infra_tracksectionmodel_infra_id;
                DROP INDEX IF EXISTS idx_osrd_infra_tracksectionlayer_obj_id;
                DROP INDEX IF EXISTS idx_osrd_infra_tracksectionlayer_infra_id;
            """,
            state_operations=[
                migrations.CreateModel(
                    name="OsrdSearchTrack", fields=[], options={"managed": False, "db_table": "osrd_search_track"}
                )
            ],
        ),
        migrations.RunSQL(
            sql="""
                CREATE OR REPLACE
                FUNCTION osrd_search_track__ins_trig_fun() RETURNS TRIGGER LANGUAGE plpgsql AS $$
                BEGIN
                    IF NEW."data"#>>'{extensions,sncf,line_code}' IS NULL OR NEW."data"#>>'{extensions,sncf,line_name}' IS NULL THEN
                        RETURN NEW;
                    END IF;

                    PERFORM
                        NULL
                    FROM
                        osrd_search_track
                    WHERE
                        infra_id = NEW.infra_id
                        AND line_code = (
                            NEW."data"#>>'{extensions,sncf,line_code}'
                        )::integer;
                    
                    -- if the track section introduces a new track:
                    IF NOT FOUND THEN
                        INSERT INTO
                            osrd_search_track (
                                infra_id,
                                line_code,
                                line_name,
                                unprocessed_line_name
                            )
                        VALUES (
                            NEW.infra_id,
                            (
                                NEW."data"#>>'{extensions,sncf,line_code}'
                            )::integer, 
                            osrd_prepare_for_search(
                                NEW."data"#>>'{extensions,sncf,line_name}'
                            ),
                            NEW."data"#>>'{extensions,sncf,line_name}'
                        );
                    END IF;
                    RETURN NEW;
                END;
                $$; 

                CREATE OR REPLACE TRIGGER osrd_search_track__ins_trig
                AFTER INSERT
                ON osrd_infra_tracksectionmodel
                FOR EACH ROW
                EXECUTE FUNCTION osrd_search_track__ins_trig_fun();


                CREATE OR REPLACE
                FUNCTION osrd_search_track__upd_trig_fun() RETURNS TRIGGER LANGUAGE plpgsql AS $$
                BEGIN
                    -- line_code or infra_id may have been changed which would create a new track
                    PERFORM
                        NULL
                    FROM
                        osrd_search_track
                    WHERE
                        infra_id = NEW.infra_id
                        AND line_code = (
                            NEW."data"#>>'{extensions,sncf,line_code}'
                        )::integer;
                    
                    IF (
                        NOT FOUND
                        AND NEW."data"#>>'{extensions,sncf,line_code}' IS NOT NULL 
                        AND NEW."data"#>>'{extensions,sncf,line_name}' IS NOT NULL
                    )  THEN 
                        -- and create the new one
                        INSERT INTO
                            osrd_search_track (
                                infra_id,
                                line_code,
                                line_name,
                                unprocessed_line_name
                            )
                        VALUES (
                            NEW.infra_id,
                            (
                                NEW."data"#>>'{extensions,sncf,line_code}'
                            )::integer, 
                            osrd_prepare_for_search(
                                NEW."data"#>>'{extensions,sncf,line_name}'
                            ),
                            NEW."data"#>>'{extensions,sncf,line_name}'
                        );
                    END IF;
                    -- remove the old search entry if OLD was the last track section of the line
                    DELETE FROM osrd_search_track
                    WHERE
                        osrd_search_track.infra_id = OLD.infra_id
                        AND osrd_search_track.line_code = (OLD."data"#>>'{extensions,sncf,line_code}')::integer
                        AND NOT EXISTS(
                            SELECT
                                NULL
                            FROM
                                osrd_infra_tracksectionmodel AS model
                            WHERE
                                model.id <> OLD.id
                                AND model.infra_id = OLD.infra_id
                                AND model."data"#>>'{extensions,sncf,line_code}' = OLD."data"#>>'{extensions,sncf,line_code}'
                            GROUP BY
                                model."data"#>>'{extensions,sncf,line_code}'
                        );
                    RETURN NEW;
                END;
                $$; 

                CREATE OR REPLACE TRIGGER osrd_search_track__upd_trig
                AFTER UPDATE
                ON osrd_infra_tracksectionmodel
                FOR EACH ROW
                EXECUTE FUNCTION osrd_search_track__upd_trig_fun();


                CREATE OR REPLACE
                FUNCTION osrd_search_track__del_trig_fun() RETURNS TRIGGER LANGUAGE plpgsql AS $$
                BEGIN
                    DELETE FROM osrd_search_track
                    WHERE
                        osrd_search_track.infra_id = OLD.infra_id
                        AND osrd_search_track.line_code = (OLD."data"#>>'{extensions,sncf,line_code}')::integer
                        AND NOT EXISTS(
                            SELECT
                                NULL
                            FROM
                                osrd_infra_tracksectionmodel AS model
                            WHERE
                                model.id <> OLD.id
                                AND model.infra_id = OLD.infra_id
                                AND model."data"#>>'{extensions,sncf,line_code}' = OLD."data"#>>'{extensions,sncf,line_code}'
                            GROUP BY
                                model."data"#>>'{extensions,sncf,line_code}'
                        );
                    RETURN OLD;
                END;
                $$; 

                CREATE OR REPLACE TRIGGER osrd_search_track__del_trig
                AFTER DELETE 
                ON osrd_infra_tracksectionmodel
                FOR EACH ROW
                EXECUTE FUNCTION osrd_search_track__del_trig_fun();
            """,
            reverse_sql="""
                DROP TRIGGER IF EXISTS osrd_search_track__del_trig ON osrd_infra_tracksectionmodel;
                DROP FUNCTION IF EXISTS osrd_search_track__del_trig_fun;
                DROP TRIGGER IF EXISTS osrd_search_track__upd_trig ON osrd_infra_tracksectionmodel;
                DROP FUNCTION IF EXISTS osrd_search_track__upd_trig_fun;
                DROP TRIGGER IF EXISTS osrd_search_track__ins_trig ON osrd_infra_tracksectionmodel;
                DROP FUNCTION IF EXISTS osrd_search_track__ins_trig_fun;
            """,
        ),
        migrations.RunSQL(
            sql="""
                WITH grouped_track_sections AS (
                    SELECT DISTINCT 
                        model.infra_id,
                        (model."data"#>>'{extensions,sncf,line_code}')::integer AS line_code,
                        osrd_prepare_for_search(model."data"#>>'{extensions,sncf,line_name}') AS line_name,
                        model."data"#>>'{extensions,sncf,line_name}' AS unprocessed_line_name
                    FROM osrd_infra_tracksectionmodel AS model
                )
                INSERT INTO osrd_search_track 
                SELECT *
                FROM grouped_track_sections
                WHERE line_code IS NOT NULL AND line_name IS NOT NULL;
            """,
            reverse_sql="DELETE FROM osrd_search_track;",
        ),
    ]
