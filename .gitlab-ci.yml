image: gradle:6-jdk11-hotspot

stages:
  - build
  - test
  - package
  - review
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

docker_build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --cache-from "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --build-arg BRANCH=${CI_COMMIT_BRANCH} .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    refs:
      - prod
      - staging
      - dev

test:
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    reports:
      junit:
        - build/reports/checkstyle/*.xml
        - build/test-results/test/*.xml

deploy:
  stage: deploy
  image: registry.gitlab.com/osrdata/misc/helm-kubectl-gnupg:master
  needs: ["docker_build"]
  script:
    - echo ${SECRETS_PGP_PRIVATE_KEY} | base64 -d | gpg --import
    - cd chart
    - helm dep update .
    - helm secrets dec secrets.yaml
    - helm upgrade --install osrd-core-${CI_COMMIT_BRANCH} . --namespace ${KUBE_NAMESPACE} --set CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH} --set CI_ENVIRONMENT_SLUG=${CI_ENVIRONMENT_SLUG} --set CI_PROJECT_PATH_SLUG=${CI_PROJECT_PATH_SLUG} -f secrets.yaml.dec
  environment:
    name: dev
    kubernetes:
      namespace: osrdata-${CI_COMMIT_BRANCH}
  only:
    refs:
      - dev

deploy_staging:
  stage: deploy
  image: registry.gitlab.com/osrdata/misc/helm-kubectl-gnupg:master
  needs: ["docker_build"]
  script:
    - echo ${SECRETS_PGP_PRIVATE_KEY} | base64 -d | gpg --import
    - cd chart
    - helm dep update .
    - helm secrets dec secrets.yaml
    - helm upgrade --install osrd-core-${CI_COMMIT_BRANCH} . --namespace ${KUBE_NAMESPACE} --set CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH} --set CI_ENVIRONMENT_SLUG=${CI_ENVIRONMENT_SLUG} --set CI_PROJECT_PATH_SLUG=${CI_PROJECT_PATH_SLUG} -f secrets.yaml.dec -f values.staging.yaml
  environment:
    name: staging
    kubernetes:
      namespace: osrdata-${CI_COMMIT_BRANCH}
  only:
    refs:
      - staging

deploy_prod:
  stage: deploy
  image: registry.gitlab.com/osrdata/misc/helm-kubectl-gnupg:master
  needs: ["docker_build"]
  script:
    - echo ${SECRETS_PGP_PRIVATE_KEY} | base64 -d | gpg --import
    - cd chart
    - helm dep update .
    - helm secrets dec secrets.prod.yaml
    - helm upgrade --install osrd-core-${CI_COMMIT_BRANCH} . --namespace ${KUBE_NAMESPACE} --set CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH} --set CI_ENVIRONMENT_SLUG=${CI_ENVIRONMENT_SLUG} --set CI_PROJECT_PATH_SLUG=${CI_PROJECT_PATH_SLUG} -f secrets.prod.yaml.dec -f values.prod.yaml
  environment:
    name: prod
    kubernetes:
      namespace: osrdata-prod
  only:
    refs:
      - prod
