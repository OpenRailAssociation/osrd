[tool.poetry]
name = "osrd"
version = "0.1.0"
description = ""
authors = ["DGEX Solutions <contact@dgexsol.fr>"]

[tool.poetry.dependencies]
# base
python = ">=3.8,<4"
django = "3.1.6"
psycopg2-binary = "2.9.1"
djangorestframework = "3.12.4"
djangorestframework-gis = "0.17"
celery = "4.4.7"
django-redis = "5.0.0"
jsonschema = "3.2.0"
requests = "2.25.1"
pillow = "8.3.2"
intervaltree = "3.1.0"

# production
gunicorn = {version = "20.1.0", optional = true}
sentry-sdk = {version = "0.20.2", optional = true}
uvloop = {version = "0.16.0", optional = true}
httptools = {version = "0.3.0", optional = true}
uvicorn = {version = "0.15.0", optional = true}

[tool.poetry.extras]
production = [
    "gunicorn",
    "sentry-sdk",
    "uvloop",
    "httptools",
    "uvicorn",
]

[tool.poetry.dev-dependencies]
django-debug-toolbar = "3.2.2"
ikp3db = "1.4.1"
coverage = "5.5"
black = "21.8b0"
isort = "5.9.3"
pyproject-flake8 = "0.0.1a2"
pytest-django = "4.4.0"
pytest-env = "0.6.2"
django-cors-headers = "3.8.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.kube --create-db -v -s"
python_files = ["tests.py", "test_*.py"]
junit_family = "xunit2"
filterwarnings = [
    "ignore::PendingDeprecationWarning",
]
env = [
    #'TEST_SERVER=127.0.0.1:8000', # for local test
]

[tool.coverage.run]
omit = [
    ".*",
    "*/*-packages/*",
    "venv/*",
    "*/migrations/*",
    "*/config/*",
    "*/tests/*",
]

[tool.coverage.report]
fail_under = 70

[tool.flake8]
ignore = "W503,E203"
max-line-length = 120
exclude = [
    "__pycache__",
    "*/migrations/*",
    "venv/",
    "config/",
]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
