# Generated by Django 3.2.9 on 2021-12-03 15:56

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import osrd_infra.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Infra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('payload', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'additionalProperties': False, 'properties': {'path': {'items': {'additionalProperties': False, 'properties': {'route': {'type': 'number'}, 'track_sections': {'items': {'additionalProperties': False, 'properties': {'begin': {'type': 'number'}, 'end': {'type': 'number'}, 'track_section': {'type': 'number'}}, 'required': ['begin', 'end', 'track_section'], 'type': 'object'}, 'type': 'array'}}, 'required': ['route', 'track_sections'], 'type': 'object'}, 'type': 'array'}, 'steps': {'items': {'additionalProperties': False, 'properties': {'geographic': {'items': {'type': 'number'}, 'maxItems': 2, 'minItems': 2, 'type': 'array'}, 'name': {'type': 'string'}, 'position': {'additionalProperties': False, 'properties': {'offset': {'type': 'number'}, 'track_section': {'type': 'number'}}, 'required': ['offset', 'track_section'], 'type': 'object'}, 'schematic': {'items': {'type': 'number'}, 'maxItems': 2, 'minItems': 2, 'type': 'array'}, 'stop_time': {'type': 'number'}, 'suggestion': {'type': 'boolean'}}, 'required': ['name', 'position', 'suggestion', 'stop_time'], 'type': 'object'}, 'type': 'array'}}, 'required': ['path', 'steps'], 'type': 'object'})])),
                ('vmax', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'items': {'additionalProperties': False, 'properties': {'position': {'type': 'number'}, 'speed': {'type': 'number'}}, 'required': ['position', 'speed'], 'type': 'object'}, 'minItems': 2, 'type': 'array'})])),
                ('slopes', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'items': {'additionalProperties': False, 'properties': {'gradient': {'type': 'number'}, 'position': {'type': 'number'}}, 'required': ['position', 'gradient'], 'type': 'object'}, 'minItems': 2, 'type': 'array'})])),
                ('curves', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'items': {'additionalProperties': False, 'properties': {'position': {'type': 'number'}, 'radius': {'type': 'number'}}, 'required': ['position', 'radius'], 'type': 'object'}, 'minItems': 2, 'type': 'array'})])),
                ('geographic', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
                ('schematic', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
        ),
        migrations.CreateModel(
            name='RollingStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique identifier for this rolling stock', max_length=255, unique=True)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('length', models.FloatField(help_text='The length of the train, in meters')),
                ('mass', models.FloatField(help_text='The mass of the train, in kilograms')),
                ('inertia_coefficient', models.FloatField(help_text='The inertia coefficient. It will be multiplied with the mass of the train to get its effective mass')),
                ('rolling_resistance', models.JSONField(help_text='The formula to use to compute rolling resistance', validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'properties': {'A': {'minimum': 0, 'type': 'number'}, 'B': {'minimum': 0, 'type': 'number'}, 'C': {'minimum': 0, 'type': 'number'}, 'type': {'const': 'davis'}}, 'required': ['type', 'A', 'B', 'C'], 'type': 'object'})])),
                ('capabilities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), help_text='A list of features the train exhibits, such as ERTMS support', size=None)),
                ('max_speed', models.FloatField(help_text='The maximum operational speed, in m/s')),
                ('startup_time', models.FloatField(help_text='The time the train takes before it can start accelerating')),
                ('startup_acceleration', models.FloatField(help_text='The maximum acceleration during startup, in m/s^2')),
                ('comfort_acceleration', models.FloatField(help_text='The maximum operational acceleration, in m/s^2')),
                ('timetable_gamma', models.FloatField(help_text='The maximum braking coefficient, for timetabling purposes, in m/s^2')),
                ('tractive_effort_curves', models.JSONField(help_text='A set of curves mapping speed (in m/s) to maximum traction (in newtons)', validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'additionalProperties': {'items': {'properties': {'max_effort': {'type': 'number'}, 'speed': {'type': 'number'}}, 'required': ['speed', 'max_effort'], 'type': 'object'}, 'title': 'schema', 'type': 'array'}, 'type': 'object'})])),
                ('traction_mode', models.CharField(max_length=128)),
                ('power_class', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
        ),
        migrations.CreateModel(
            name='TrainScheduleLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_name', models.CharField(max_length=128)),
                ('departure_time', models.FloatField()),
                ('initial_speed', models.FloatField()),
                ('margins', models.JSONField(null=True, validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'items': {'additionalProperties': False, 'properties': {'begin_position': {'type': 'number'}, 'end_position': {'type': 'number'}, 'type': {'enum': ['construction', 'ratio_time', 'ratio_distance']}, 'value': {'type': 'number'}}, 'required': ['type', 'value'], 'type': 'object'}, 'type': 'array'})])),
                ('base_simulation_log', models.JSONField(null=True)),
                ('eco_simulation_log', models.JSONField(null=True)),
                ('labels', models.ManyToManyField(blank=True, to='osrd_infra.TrainScheduleLabel')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.path')),
                ('rolling_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.rollingstock')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_schedules', to='osrd_infra.timetable')),
            ],
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('started_by', models.UUIDField()),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='osrd_infra.infra')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='osrd_infra.timetable')),
            ],
        ),
        migrations.CreateModel(
            name='RailScriptFunctionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'rail script functions',
            },
        ),
        migrations.CreateModel(
            name='AspectModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'aspects',
            },
        ),
        migrations.CreateModel(
            name='TVDSectionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'MultiLineString': {'description': 'MultiLineString Model', 'properties': {'coordinates': {'items': {'items': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}]}, 'type': 'array'}, 'title': 'Coordinates', 'type': 'array'}, 'type': {'const': 'MultiLineString', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'MultiLineString', 'type': 'object'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}}, 'properties': {'buffer_stops': {'items': {'$ref': '#/definitions/ObjectReference'}, 'title': 'Buffer Stops', 'type': 'array'}, 'detectors': {'items': {'$ref': '#/definitions/ObjectReference'}, 'title': 'Detectors', 'type': 'array'}, 'geo': {'$ref': '#/definitions/MultiLineString'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'sch': {'$ref': '#/definitions/MultiLineString'}}, 'required': ['geo', 'sch', 'id', 'detectors', 'buffer_stops'], 'title': 'TVDSection', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'tvd sections',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='TrackSectionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'ApplicableDirections': {'description': 'An enumeration.', 'enum': ['START_TO_STOP', 'STOP_TO_START', 'BOTH'], 'title': 'ApplicableDirections', 'type': 'string'}, 'CatenarySection': {'properties': {'applicable_directions': {'$ref': '#/definitions/ApplicableDirections'}, 'begin': {'title': 'Begin', 'type': 'number'}, 'end': {'title': 'End', 'type': 'number'}, 'voltage': {'title': 'Voltage', 'type': 'number'}}, 'required': ['voltage', 'begin', 'end', 'applicable_directions'], 'title': 'CatenarySection', 'type': 'object'}, 'Curve': {'properties': {'begin': {'title': 'Begin', 'type': 'number'}, 'end': {'title': 'End', 'type': 'number'}, 'radius': {'title': 'Radius', 'type': 'number'}}, 'required': ['radius', 'begin', 'end'], 'title': 'Curve', 'type': 'object'}, 'LineString': {'description': 'LineString Model', 'properties': {'coordinates': {'items': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}]}, 'minItems': 2, 'title': 'Coordinates', 'type': 'array'}, 'type': {'const': 'LineString', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'LineString', 'type': 'object'}, 'SignalingSection': {'properties': {'begin': {'title': 'Begin', 'type': 'number'}, 'end': {'title': 'End', 'type': 'number'}, 'signaling_type': {'$ref': '#/definitions/SignalingType'}}, 'required': ['signaling_type', 'begin', 'end'], 'title': 'SignalingSection', 'type': 'object'}, 'SignalingType': {'description': 'An enumeration.', 'enum': ['BAL', 'BAL_VB', 'BAPR_DV', 'BAPR_VB', 'BM_VU', 'BM_VU_SE', 'BM_CV', 'BM_U', 'BM_AMU', 'BM_NB', 'BM_LU', 'BM_LUS', 'BM_SEUS', 'CAPI', 'CT_DV', 'CT_VU', 'TVM300', 'TVM430', 'ETCS_1', 'ETCS_2', 'ETCS_3', 'TRMW', 'AUTRE'], 'title': 'SignalingType', 'type': 'string'}, 'Slope': {'properties': {'begin': {'title': 'Begin', 'type': 'number'}, 'end': {'title': 'End', 'type': 'number'}, 'gradient': {'title': 'Gradient', 'type': 'number'}}, 'required': ['gradient', 'begin', 'end'], 'title': 'Slope', 'type': 'object'}, 'SpeedSection': {'properties': {'applicable_directions': {'$ref': '#/definitions/ApplicableDirections'}, 'begin': {'title': 'Begin', 'type': 'number'}, 'end': {'title': 'End', 'type': 'number'}, 'speed': {'title': 'Speed', 'type': 'number'}}, 'required': ['speed', 'begin', 'end', 'applicable_directions'], 'title': 'SpeedSection', 'type': 'object'}}, 'properties': {'catenary_sections': {'items': {'$ref': '#/definitions/CatenarySection'}, 'title': 'Catenary Sections', 'type': 'array'}, 'curves': {'items': {'$ref': '#/definitions/Curve'}, 'title': 'Curves', 'type': 'array'}, 'geo': {'$ref': '#/definitions/LineString'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'length': {'title': 'Length', 'type': 'number'}, 'line_code': {'title': 'Line Code', 'type': 'integer'}, 'line_name': {'maxLength': 255, 'title': 'Line Name', 'type': 'string'}, 'navigability': {'$ref': '#/definitions/ApplicableDirections'}, 'sch': {'$ref': '#/definitions/LineString'}, 'signaling_sections': {'items': {'$ref': '#/definitions/SignalingSection'}, 'title': 'Signaling Sections', 'type': 'array'}, 'slopes': {'items': {'$ref': '#/definitions/Slope'}, 'title': 'Slopes', 'type': 'array'}, 'speed_sections': {'items': {'$ref': '#/definitions/SpeedSection'}, 'title': 'Speed Sections', 'type': 'array'}, 'track_name': {'maxLength': 255, 'title': 'Track Name', 'type': 'string'}, 'track_number': {'title': 'Track Number', 'type': 'integer'}}, 'required': ['geo', 'sch', 'id', 'length', 'line_code', 'line_name', 'track_number', 'track_name', 'navigability', 'slopes', 'curves', 'speed_sections', 'catenary_sections', 'signaling_sections'], 'title': 'TrackSection', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'track sections',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='TrackSectionLinkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'ApplicableDirections': {'description': 'An enumeration.', 'enum': ['START_TO_STOP', 'STOP_TO_START', 'BOTH'], 'title': 'ApplicableDirections', 'type': 'string'}, 'Endpoint': {'description': 'An enumeration.', 'enum': ['BEGIN', 'END'], 'title': 'Endpoint', 'type': 'string'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}, 'TrackEndpoint': {'properties': {'endpoint': {'$ref': '#/definitions/Endpoint'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['endpoint', 'track'], 'title': 'TrackEndpoint', 'type': 'object'}}, 'properties': {'dst': {'$ref': '#/definitions/TrackEndpoint'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'navigability': {'$ref': '#/definitions/ApplicableDirections'}, 'src': {'$ref': '#/definitions/TrackEndpoint'}}, 'required': ['id', 'src', 'dst', 'navigability'], 'title': 'TrackSectionLink', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'track section links',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='SwitchTypeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'SwitchPortConnection': {'properties': {'bidirectional': {'title': 'Bidirectional', 'type': 'boolean'}, 'dst': {'title': 'Dst', 'type': 'string'}, 'src': {'title': 'Src', 'type': 'string'}}, 'required': ['src', 'dst', 'bidirectional'], 'title': 'SwitchPortConnection', 'type': 'object'}}, 'properties': {'groups': {'additionalProperties': {'items': {'$ref': '#/definitions/SwitchPortConnection'}, 'type': 'array'}, 'title': 'Groups', 'type': 'object'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'ports': {'items': {'type': 'string'}, 'title': 'Ports', 'type': 'array'}}, 'required': ['id', 'ports', 'groups'], 'title': 'SwitchType', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'switch types',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='SwitchModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'Endpoint': {'description': 'An enumeration.', 'enum': ['BEGIN', 'END'], 'title': 'Endpoint', 'type': 'string'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}, 'Point': {'description': 'Point Model', 'properties': {'coordinates': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}], 'title': 'Coordinates'}, 'type': {'const': 'Point', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'Point', 'type': 'object'}, 'TrackEndpoint': {'properties': {'endpoint': {'$ref': '#/definitions/Endpoint'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['endpoint', 'track'], 'title': 'TrackEndpoint', 'type': 'object'}}, 'properties': {'geo': {'$ref': '#/definitions/Point'}, 'group_change_delay': {'title': 'Group Change Delay', 'type': 'number'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'ports': {'additionalProperties': {'$ref': '#/definitions/TrackEndpoint'}, 'title': 'Ports', 'type': 'object'}, 'sch': {'$ref': '#/definitions/Point'}, 'switch_type': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['geo', 'sch', 'id', 'switch_type', 'group_change_delay', 'ports'], 'title': 'Switch', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'switches',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='SignalModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'Direction': {'description': 'An enumeration.', 'enum': ['START_TO_STOP', 'STOP_TO_START'], 'title': 'Direction', 'type': 'string'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}, 'Point': {'description': 'Point Model', 'properties': {'coordinates': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}], 'title': 'Coordinates'}, 'type': {'const': 'Point', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'Point', 'type': 'object'}}, 'properties': {'angle': {'title': 'Angle', 'type': 'number'}, 'direction': {'$ref': '#/definitions/Direction'}, 'expr': {'title': 'Expr'}, 'geo': {'$ref': '#/definitions/Point'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'linked_detector': {'$ref': '#/definitions/ObjectReference'}, 'position': {'title': 'Position', 'type': 'number'}, 'sch': {'$ref': '#/definitions/Point'}, 'sight_distance': {'title': 'Sight Distance', 'type': 'number'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['geo', 'sch', 'track', 'position', 'id', 'direction', 'sight_distance', 'angle'], 'title': 'Signal', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'signals',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='RouteModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'Direction': {'description': 'An enumeration.', 'enum': ['START_TO_STOP', 'STOP_TO_START'], 'title': 'Direction', 'type': 'string'}, 'DirectionalTrackRange': {'properties': {'begin': {'title': 'Begin', 'type': 'number'}, 'direction': {'$ref': '#/definitions/Direction'}, 'end': {'title': 'End', 'type': 'number'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['track', 'begin', 'end', 'direction'], 'title': 'DirectionalTrackRange', 'type': 'object'}, 'LineString': {'description': 'LineString Model', 'properties': {'coordinates': {'items': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}]}, 'minItems': 2, 'title': 'Coordinates', 'type': 'array'}, 'type': {'const': 'LineString', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'LineString', 'type': 'object'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}}, 'properties': {'entry_point': {'$ref': '#/definitions/ObjectReference'}, 'exit_point': {'$ref': '#/definitions/ObjectReference'}, 'geo': {'$ref': '#/definitions/LineString'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'path': {'items': {'$ref': '#/definitions/DirectionalTrackRange'}, 'title': 'Path', 'type': 'array'}, 'release_groups': {'items': {'items': {'$ref': '#/definitions/ObjectReference'}, 'type': 'array'}, 'title': 'Release Groups', 'type': 'array'}, 'sch': {'$ref': '#/definitions/LineString'}}, 'required': ['geo', 'sch', 'id', 'entry_point', 'exit_point', 'release_groups', 'path'], 'title': 'Route', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'routes',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='OperationalPointModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}, 'OperationalPointPart': {'properties': {'geo': {'$ref': '#/definitions/Point'}, 'position': {'title': 'Position', 'type': 'number'}, 'sch': {'$ref': '#/definitions/Point'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['geo', 'sch', 'track', 'position'], 'title': 'OperationalPointPart', 'type': 'object'}, 'Point': {'description': 'Point Model', 'properties': {'coordinates': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}], 'title': 'Coordinates'}, 'type': {'const': 'Point', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'Point', 'type': 'object'}}, 'properties': {'ch': {'maxLength': 2, 'title': 'Ch', 'type': 'string'}, 'ch_long_label': {'maxLength': 255, 'title': 'Ch Long Label', 'type': 'string'}, 'ch_short_label': {'maxLength': 255, 'title': 'Ch Short Label', 'type': 'string'}, 'ci': {'title': 'Ci', 'type': 'integer'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'name': {'maxLength': 255, 'title': 'Name', 'type': 'string'}, 'parts': {'items': {'$ref': '#/definitions/OperationalPointPart'}, 'title': 'Parts', 'type': 'array'}}, 'required': ['id', 'parts', 'ci', 'ch', 'name'], 'title': 'OperationalPoint', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'operational points',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='DetectorModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'ApplicableDirections': {'description': 'An enumeration.', 'enum': ['START_TO_STOP', 'STOP_TO_START', 'BOTH'], 'title': 'ApplicableDirections', 'type': 'string'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}, 'Point': {'description': 'Point Model', 'properties': {'coordinates': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}], 'title': 'Coordinates'}, 'type': {'const': 'Point', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'Point', 'type': 'object'}}, 'properties': {'applicable_directions': {'$ref': '#/definitions/ApplicableDirections'}, 'geo': {'$ref': '#/definitions/Point'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'position': {'title': 'Position', 'type': 'number'}, 'sch': {'$ref': '#/definitions/Point'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['geo', 'sch', 'track', 'position', 'id', 'applicable_directions'], 'title': 'Detector', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'detectors',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
        migrations.CreateModel(
            name='BufferStopModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_id', models.CharField(max_length=255)),
                ('data', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'definitions': {'ApplicableDirections': {'description': 'An enumeration.', 'enum': ['START_TO_STOP', 'STOP_TO_START', 'BOTH'], 'title': 'ApplicableDirections', 'type': 'string'}, 'ObjectReference': {'properties': {'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'type': {'title': 'Type', 'type': 'string'}}, 'required': ['id', 'type'], 'title': 'ObjectReference', 'type': 'object'}, 'Point': {'description': 'Point Model', 'properties': {'coordinates': {'anyOf': [{'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}, {'items': [{'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}], 'type': 'array'}], 'title': 'Coordinates'}, 'type': {'const': 'Point', 'title': 'Type', 'type': 'string'}}, 'required': ['coordinates'], 'title': 'Point', 'type': 'object'}}, 'properties': {'applicable_directions': {'$ref': '#/definitions/ApplicableDirections'}, 'geo': {'$ref': '#/definitions/Point'}, 'id': {'maxLength': 255, 'title': 'Id', 'type': 'string'}, 'position': {'title': 'Position', 'type': 'number'}, 'sch': {'$ref': '#/definitions/Point'}, 'track': {'$ref': '#/definitions/ObjectReference'}}, 'required': ['geo', 'sch', 'track', 'position', 'id', 'applicable_directions'], 'title': 'BufferStop', 'type': 'object'})])),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
            options={
                'verbose_name_plural': 'buffer stops',
                'unique_together': {('infra', 'obj_id')},
            },
        ),
    ]
