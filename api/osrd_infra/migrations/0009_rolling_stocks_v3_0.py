# Generated by Django 4.0.8 on 2022-11-04 10:24

from django.db import migrations, models

import osrd_infra.schemas.rolling_stock
import osrd_infra.utils


def apply_migration(apps, schema_editor):
    """Update infra from v3.0.0 to v3.0.1"""
    Infra = apps.get_model("osrd_infra", "Infra")
    CatenaryModel = apps.get_model("osrd_infra", "CatenaryModel")
    updated_infra = []
    updated_catenaries = []

    for infra in Infra.objects.all():
        if infra.railjson_version == "3.0.0":
            infra.railjson_version = "3.0.1"
            updated_infra.append(infra)
            for catenary in CatenaryModel.objects.all():
                catenary.data["voltage"] = str(int(catenary.data["voltage"]))
                updated_catenaries.append(catenary)
    Infra.objects.bulk_update(updated_infra, ["railjson_version"])
    CatenaryModel.objects.bulk_update(updated_catenaries, ["data"])


def revert_migration(apps, schema_editor):
    """Revert infra from v3.0.1 to v3.0.0"""
    Infra = apps.get_model("osrd_infra", "Infra")
    CatenaryModel = apps.get_model("osrd_infra", "CatenaryModel")
    updated_infra = []
    updated_catenaries = []

    for infra in Infra.objects.all():
        if infra.railjson_version == "3.0.1":
            infra.railjson_version = "3.0.0"
            updated_infra.append(infra)
            for catenary in CatenaryModel.objects.all():
                if "15" in catenary.data["voltage"]:
                    catenary.data["voltage"] = 1500.0
                else:
                    catenary.data["voltage"] = 25_000.0
                updated_catenaries.append(catenary)
    Infra.objects.bulk_update(updated_infra, ["railjson_version"])
    CatenaryModel.objects.bulk_update(updated_catenaries, ["data"])


def clear_rolling_stocks(apps, schema_editor):
    """Clear rolling stocks database"""
    RollingStock = apps.get_model("osrd_infra", "RollingStock")
    RollingStock.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("osrd_infra", "0008_trainschedulemodel_adapt_speed_limit_category"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="rollingstock",
            name="compatible_voltages",
        ),
        migrations.RemoveField(
            model_name="rollingstock",
            name="effort_curve",
        ),
        migrations.RemoveField(
            model_name="rollingstock",
            name="electric_only",
        ),
        migrations.RemoveField(
            model_name="rollingstock",
            name="power_class",
        ),
        migrations.AddField(
            model_name="rollingstock",
            name="effort_curves",
            field=models.JSONField(
                help_text="A curve mapping speed (in m/s) to maximum traction (in newtons)",
                validators=[osrd_infra.utils.PydanticValidator(osrd_infra.schemas.rolling_stock.EffortCurves)],
                default={},
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="infra",
            name="railjson_version",
            field=models.CharField(default="3.0.1", editable=False, max_length=16),
        ),
        migrations.AlterField(
            model_name="rollingstock",
            name="version",
            field=models.CharField(default="3.0", editable=False, max_length=16),
        ),
        migrations.RunPython(code=clear_rolling_stocks, reverse_code=clear_rolling_stocks),
        migrations.RunPython(code=apply_migration, reverse_code=revert_migration),
    ]
