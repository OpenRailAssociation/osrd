version: '3'
volumes:
  psql_data:
  redis_data:
services:
  postgres:
    image: postgis/postgis:15-3.4-alpine
    container_name: osrd-postgres
    user: postgres
    restart: unless-stopped
    ports: ["5432:5432"]
    environment:
      POSTGRES_PASSWORD: "password"
    volumes:
      - "psql_data:/var/lib/postgresql/data"
      - "./init_db.sql:/docker-entrypoint-initdb.d/init.sql"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres://osrd:password@postgres/osrd"]
      start_period: 4s
      interval: 5s

  redis:
    image: redis
    container_name: osrd-redis
    restart: unless-stopped
    ports: ["6379:6379"]
    volumes:
      - "redis_data:/data"
    command: "redis-server --save 30 1 --loglevel warning"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 4s
      interval: 5s

  core:
    image: osrd/core
    container_name: osrd-core
    build:
      context: core
      dockerfile: Dockerfile
    restart: unless-stopped
    ports: ["8080:80"]
    command: "java -ea -jar /app/osrd_core.jar api -p 80"
    environment:
      MIDDLEWARE_BASE_URL: "http://osrd-editoast"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      start_period: 4s
      interval: 5s

  front:
    image: osrd/front
    container_name: osrd-front
    build:
      context: front
      dockerfile: Dockerfile
      args:
        NGINX_CONFIG: "nginx-dev.conf"
        OSRD_GIT_DESCRIBE: ${OSRD_GIT_DESCRIBE}
    environment:
    - OSRD_LOCAL_BACKEND=true
    - OSRD_EDITOAST_URL=http://localhost:8090
    restart: unless-stopped
    ports: ["3000:80"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      start_period: 4s
      interval: 5s

  editoast:
    image: osrd/editoast
    container_name: osrd-editoast
    depends_on:
      postgres: {condition: service_healthy}
      redis: {condition: service_healthy}
    build:
      context: editoast
      dockerfile: Dockerfile
    restart: unless-stopped
    ports: ["8090:80"]
    environment:
      EDITOAST_PORT: 80
      PSQL_HOST: "postgres"
      REDIS_URL: "redis://redis"
      OSRD_BACKEND_URL: "http://osrd-core"
      DATABASE_URL: "postgres://osrd:password@postgres/osrd"
    command:
      - /bin/sh
      - -c
      - |
        diesel migration run
        editoast runserver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      start_period: 4s
      interval: 5s

  wait-healthy:
    depends_on:
      editoast: {condition: service_healthy}
    restart: "no"
    image: alpine:latest
    command: "true"
