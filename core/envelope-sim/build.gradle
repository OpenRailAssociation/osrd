plugins {
    id 'java'
    id 'java-test-fixtures'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    // PLEASE ADD AND UPDATE DEPENDENCIES USING libs.versions.toml

    implementation project(':osrd-reporting')
    implementation libs.guava
    implementation libs.slf4j

    // for debug UI
    implementation libs.jmathplot

    // fast primitive collections
    implementation libs.hppc

    // Use JUnit Jupiter API for testing.
    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.params

    testFixturesImplementation libs.junit.jupiter.api
    testFixturesImplementation libs.guava

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly libs.junit.jupiter.engine

    // for linter annotations
    testFixturesCompileOnly libs.jcip.annotations
    testFixturesCompileOnly libs.spotbugs.annotations
    compileOnly libs.jcip.annotations
    compileOnly libs.spotbugs.annotations
    testCompileOnly libs.jcip.annotations
    testCompileOnly libs.spotbugs.annotations
    implementation libs.kotlin.logging
    implementation libs.kotlin.stdlib
    testImplementation libs.kotlin.test
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-opt-in=kotlin.RequiresOptIn",
                "-opt-in=kotlin.ExperimentalUnsignedTypes",
                "-opt-in=kotlin.time.ExperimentalTime",
                "-opt-in=kotlin.contracts.ExperimentalContracts",
        ]
    }
}

test {
    useJUnitPlatform {
        includeEngines 'jqwik', 'junit-jupiter'
    }
}
